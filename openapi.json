{
    "openapi": "3.0.3",
    "info": {
        "title": "Qumulo Core REST API",
        "description": "Qumulo Core REST API",
        "termsOfService": "https://www.qumulo.com/terms-hub",
        "contact": {
            "name": "Qumulo Care",
            "url": "https://care.qumulo.com",
            "email": "care@qumulo.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "5.2.3"
    },
    "components": {
        "securitySchemes": {
            "bearerToken": {
                "type": "http",
                "scheme": "bearer"
            }
        }
    },
    "paths": {
        "/v1/session/change-password": {
            "post": {
                "summary": "Change the password for the logged in user.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success"
                    }
                },
                "tags": [
                    "session"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "old_password": {
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "new_password": {
                                        "type": "string",
                                        "format": "password"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/session/login": {
            "post": {
                "summary": "Authenticate the user. The response value contains a message authentication code, which is required to sign subsequent requests.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "bearer_token": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "session"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "username": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/session/who-am-i": {
            "get": {
                "summary": "Retrieve information about the currently logged in user.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "primary_group": {
                                            "type": "string"
                                        },
                                        "sid": {
                                            "type": "string"
                                        },
                                        "uid": {
                                            "type": "string"
                                        },
                                        "home_directory": {
                                            "type": "string"
                                        },
                                        "can_change_password": {
                                            "type": "boolean"
                                        },
                                        "privileges": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "enum": [
                                                    "PRIVILEGE_AD_READ",
                                                    "PRIVILEGE_AD_USE",
                                                    "PRIVILEGE_AD_WRITE",
                                                    "PRIVILEGE_ANALYTICS_READ",
                                                    "PRIVILEGE_AUDIT_READ",
                                                    "PRIVILEGE_AUDIT_WRITE",
                                                    "PRIVILEGE_AUTH_CACHE_READ",
                                                    "PRIVILEGE_AUTH_CACHE_WRITE",
                                                    "PRIVILEGE_CLUSTER_READ",
                                                    "PRIVILEGE_CLUSTER_WRITE",
                                                    "PRIVILEGE_DEBUG",
                                                    "PRIVILEGE_DNS_READ",
                                                    "PRIVILEGE_DNS_USE",
                                                    "PRIVILEGE_DNS_WRITE",
                                                    "PRIVILEGE_FILE_FULL_ACCESS",
                                                    "PRIVILEGE_FS_ATTRIBUTES_READ",
                                                    "PRIVILEGE_FS_DELETE_TREE_READ",
                                                    "PRIVILEGE_FS_DELETE_TREE_WRITE",
                                                    "PRIVILEGE_FS_LOCK_READ",
                                                    "PRIVILEGE_FS_LOCK_WRITE",
                                                    "PRIVILEGE_FS_SETTINGS_READ",
                                                    "PRIVILEGE_FS_SETTINGS_WRITE",
                                                    "PRIVILEGE_FTP_READ",
                                                    "PRIVILEGE_FTP_WRITE",
                                                    "PRIVILEGE_IDENTITY_MAPPING_READ",
                                                    "PRIVILEGE_IDENTITY_MAPPING_WRITE",
                                                    "PRIVILEGE_IDENTITY_READ",
                                                    "PRIVILEGE_IDENTITY_WRITE",
                                                    "PRIVILEGE_KERBEROS_KEYTAB_READ",
                                                    "PRIVILEGE_KERBEROS_KEYTAB_WRITE",
                                                    "PRIVILEGE_KERBEROS_SETTINGS_READ",
                                                    "PRIVILEGE_KERBEROS_SETTINGS_WRITE",
                                                    "PRIVILEGE_KV_READ",
                                                    "PRIVILEGE_LDAP_READ",
                                                    "PRIVILEGE_LDAP_USE",
                                                    "PRIVILEGE_LDAP_WRITE",
                                                    "PRIVILEGE_LOCAL_GROUP_READ",
                                                    "PRIVILEGE_LOCAL_GROUP_WRITE",
                                                    "PRIVILEGE_LOCAL_USER_READ",
                                                    "PRIVILEGE_LOCAL_USER_WRITE",
                                                    "PRIVILEGE_METRICS_READ",
                                                    "PRIVILEGE_NETWORK_IP_ALLOCATION_READ",
                                                    "PRIVILEGE_NETWORK_READ",
                                                    "PRIVILEGE_NETWORK_WRITE",
                                                    "PRIVILEGE_NFS_EXPORT_READ",
                                                    "PRIVILEGE_NFS_EXPORT_WRITE",
                                                    "PRIVILEGE_POWER_CYCLE",
                                                    "PRIVILEGE_QUOTA_READ",
                                                    "PRIVILEGE_QUOTA_WRITE",
                                                    "PRIVILEGE_RECONCILER_READ",
                                                    "PRIVILEGE_REPLICATION_REVERSE_RELATIONSHIP",
                                                    "PRIVILEGE_REPLICATION_SOURCE_READ",
                                                    "PRIVILEGE_REPLICATION_SOURCE_WRITE",
                                                    "PRIVILEGE_REPLICATION_TARGET_READ",
                                                    "PRIVILEGE_REPLICATION_TARGET_WRITE",
                                                    "PRIVILEGE_ROLE_READ",
                                                    "PRIVILEGE_ROLE_WRITE",
                                                    "PRIVILEGE_SMB_SHARE_READ",
                                                    "PRIVILEGE_SMB_SHARE_WRITE",
                                                    "PRIVILEGE_SNAPSHOT_CALCULATE_USED_CAPACITY_READ",
                                                    "PRIVILEGE_SNAPSHOT_DIFFERENCE_READ",
                                                    "PRIVILEGE_SNAPSHOT_POLICY_READ",
                                                    "PRIVILEGE_SNAPSHOT_POLICY_WRITE",
                                                    "PRIVILEGE_SNAPSHOT_READ",
                                                    "PRIVILEGE_SNAPSHOT_WRITE",
                                                    "PRIVILEGE_SUPPORT_READ",
                                                    "PRIVILEGE_SUPPORT_WRITE",
                                                    "PRIVILEGE_TEST_ONLY",
                                                    "PRIVILEGE_TIME_READ",
                                                    "PRIVILEGE_TIME_WRITE",
                                                    "PRIVILEGE_UNCONFIGURED_NODE_READ",
                                                    "PRIVILEGE_UPGRADE_READ",
                                                    "PRIVILEGE_UPGRADE_WRITE",
                                                    "PRIVILEGE_SMB_FILE_HANDLE_READ",
                                                    "PRIVILEGE_SMB_FILE_HANDLE_WRITE",
                                                    "PRIVILEGE_SMB_SESSION_READ",
                                                    "PRIVILEGE_SMB_SESSION_WRITE",
                                                    "PRIVILEGE_REPLICATION_OBJECT_READ",
                                                    "PRIVILEGE_REPLICATION_OBJECT_WRITE",
                                                    "PRIVILEGE_ENCRYPTION_WRITE",
                                                    "PRIVILEGE_ENCRYPTION_READ",
                                                    "PRIVILEGE_NFS_SETTINGS_READ",
                                                    "PRIVILEGE_NFS_SETTINGS_WRITE",
                                                    "PRIVILEGE_SERVICE_PUBLIC_KEYS_WRITE",
                                                    "PRIVILEGE_SERVICE_PUBLIC_KEYS_READ",
                                                    "PRIVILEGE_METRICS_CONFIG_READ",
                                                    "PRIVILEGE_METRICS_CONFIG_WRITE",
                                                    "PRIVILEGE_REBOOT_USE",
                                                    "PRIVILEGE_REBOOT_READ",
                                                    "PRIVILEGE_CHECKSUMMING_READ",
                                                    "PRIVILEGE_S3_SETTINGS_READ",
                                                    "PRIVILEGE_S3_SETTINGS_WRITE",
                                                    "PRIVILEGE_WEB_UI_SETTINGS_WRITE",
                                                    "PRIVILEGE_S3_CREDENTIALS_READ",
                                                    "PRIVILEGE_S3_CREDENTIALS_WRITE",
                                                    "PRIVILEGE_TENANT_READ",
                                                    "PRIVILEGE_TENANT_WRITE",
                                                    "PRIVILEGE_SAML_SETTINGS_READ",
                                                    "PRIVILEGE_SAML_SETTINGS_WRITE",
                                                    "PRIVILEGE_S3_BUCKETS_READ",
                                                    "PRIVILEGE_S3_BUCKETS_WRITE"
                                                ],
                                                "description": "The user's privileges:\n * `PRIVILEGE_AD_READ` - Read Qumulo Active Directory settings,\n * `PRIVILEGE_AD_USE` - Use Qumulo's APIs for performing queries against Active Directory,\n * `PRIVILEGE_AD_WRITE` - Modify Qumulo Active Directory settings,\n * `PRIVILEGE_ANALYTICS_READ` - Read cluster analytics,\n * `PRIVILEGE_AUDIT_READ` - Read audit settings,\n * `PRIVILEGE_AUDIT_WRITE` - Modify audit settings,\n * `PRIVILEGE_AUTH_CACHE_READ` - Internal-Only: Read authentication cache settings,\n * `PRIVILEGE_AUTH_CACHE_WRITE` - Internal-Only: Modify authentication cache settings,\n * `PRIVILEGE_CHECKSUMMING_READ` - View the status of checksumming,\n * `PRIVILEGE_CLUSTER_READ` - View nodes, disks, protection status, and SSL certificate,\n * `PRIVILEGE_CLUSTER_WRITE` - Modify cluster settings and disk/identify LEDs,\n * `PRIVILEGE_DEBUG` - Internal-Only: Perform debug operations on the cluster,\n * `PRIVILEGE_DNS_READ` - Read DNS settings,\n * `PRIVILEGE_DNS_USE` - Perform DNS lookups,\n * `PRIVILEGE_DNS_WRITE` - Modify DNS settings,\n * `PRIVILEGE_ENCRYPTION_READ` - View the status of at-rest-encryption,\n * `PRIVILEGE_ENCRYPTION_WRITE` - Rotate encryption keys for clusters with at-rest-encryption,\n * `PRIVILEGE_FILE_FULL_ACCESS` - Provides full access to all files regardless of permissions,\n * `PRIVILEGE_FS_ATTRIBUTES_READ` - Read file system statistics,\n * `PRIVILEGE_FS_DELETE_TREE_READ` - View the status of directory tree delete operations,\n * `PRIVILEGE_FS_DELETE_TREE_WRITE` - Use directory tree delete API. Granting this privilege allows the deletion of any file or directory on the cluster. File and directory permissions are not taken into account. Not required for `rm -r`.,\n * `PRIVILEGE_FS_LOCK_READ` - View NLM and SMB locks and waiters,\n * `PRIVILEGE_FS_LOCK_WRITE` - Release NLM and SMB locks,\n * `PRIVILEGE_FS_SETTINGS_READ` - View file system permissions settings,\n * `PRIVILEGE_FS_SETTINGS_WRITE` - Modify file system permissions mode,\n * `PRIVILEGE_FTP_READ` - View FTP status and settings,\n * `PRIVILEGE_FTP_WRITE` - Modify FTP status and settings,\n * `PRIVILEGE_IDENTITY_MAPPING_READ` - Get AD/LDAP User Defined Mappings,\n * `PRIVILEGE_IDENTITY_MAPPING_WRITE` - Set AD/LDAP User Defined Mappings,\n * `PRIVILEGE_IDENTITY_READ` - Use Qumulo's identity lookup and translation APIs,\n * `PRIVILEGE_IDENTITY_WRITE` - Modify identity attributes and clear authentication cache,\n * `PRIVILEGE_KERBEROS_KEYTAB_READ` - View Kerberos keytab,\n * `PRIVILEGE_KERBEROS_KEYTAB_WRITE` - Modify Kerberos keytab,\n * `PRIVILEGE_KERBEROS_SETTINGS_READ` - Read Kerberos settings,\n * `PRIVILEGE_KERBEROS_SETTINGS_WRITE` - Modify Kerberos settings,\n * `PRIVILEGE_KV_READ` - DEPRECATED: Read and delete KV store entries for all users,\n * `PRIVILEGE_LDAP_READ` - View LDAP settings,\n * `PRIVILEGE_LDAP_USE` - Use Qumulo's APIs for performing LDAP queries,\n * `PRIVILEGE_LDAP_WRITE` - Modify LDAP settings,\n * `PRIVILEGE_LOCAL_GROUP_READ` - View local groups and members,\n * `PRIVILEGE_LOCAL_GROUP_WRITE` - Modify local groups and membership,\n * `PRIVILEGE_LOCAL_USER_READ` - Get information about local users,\n * `PRIVILEGE_LOCAL_USER_WRITE` - Create and modify all local users,\n * `PRIVILEGE_METRICS_CONFIG_READ` - View metrics configuration,\n * `PRIVILEGE_METRICS_CONFIG_WRITE` - Modify metrics configuration,\n * `PRIVILEGE_METRICS_READ` - Get all metrics,\n * `PRIVILEGE_NETWORK_IP_ALLOCATION_READ` - View network IP address allocations,\n * `PRIVILEGE_NETWORK_READ` - Read network status and settings,\n * `PRIVILEGE_NETWORK_WRITE` - Modify network configuration,\n * `PRIVILEGE_NFS_EXPORT_READ` - View configuration of NFS exports,\n * `PRIVILEGE_NFS_EXPORT_WRITE` - Create, modify, and delete NFS exports,\n * `PRIVILEGE_NFS_SETTINGS_READ` - Internal-Only: View NFS server settings,\n * `PRIVILEGE_NFS_SETTINGS_WRITE` - Internal-Only: Modify NFS server settings,\n * `PRIVILEGE_POWER_CYCLE` - Shutdown and reboot nodes,\n * `PRIVILEGE_QUOTA_READ` - View all file system quotas,\n * `PRIVILEGE_QUOTA_WRITE` - Create, modify, and delete file system quotas,\n * `PRIVILEGE_REBOOT_READ` - View Reboot Status,\n * `PRIVILEGE_REBOOT_USE` - Perform Reboots,\n * `PRIVILEGE_RECONCILER_READ` - View reconciler status and metrics,\n * `PRIVILEGE_REPLICATION_OBJECT_READ` - View object store relationship settings and status,\n * `PRIVILEGE_REPLICATION_OBJECT_WRITE` - Create, modify, and delete object store relationships. Granting this privilege allows overwriting existing data, replicating, and potentially accessing any data on the cluster regardless of file and directory permissions.,\n * `PRIVILEGE_REPLICATION_REVERSE_RELATIONSHIP` - Reverse a source and target relationship,\n * `PRIVILEGE_REPLICATION_SOURCE_READ` - View source relationship settings and status,\n * `PRIVILEGE_REPLICATION_SOURCE_WRITE` - Create, modify, and delete source relationships. Granting this privilege allows replicating and potentially accessing any data on the cluster regardless of file and directory permissions.,\n * `PRIVILEGE_REPLICATION_TARGET_READ` - View target relationship settings and status,\n * `PRIVILEGE_REPLICATION_TARGET_WRITE` - Create, modify, and delete target relationships. Granting this privilege allows overwriting any data on the cluster regardless of file and directory permissions.,\n * `PRIVILEGE_ROLE_READ` - View roles and assignments,\n * `PRIVILEGE_ROLE_WRITE` - Create and modify roles and assignments,\n * `PRIVILEGE_S3_BUCKETS_READ` - View all S3 buckets present in the system,\n * `PRIVILEGE_S3_BUCKETS_WRITE` - Create or delete any S3 bucket in the system,\n * `PRIVILEGE_S3_CREDENTIALS_READ` - View any S3 access key present in the system,\n * `PRIVILEGE_S3_CREDENTIALS_WRITE` - Create or delete S3 access keys for any user in the system,\n * `PRIVILEGE_S3_SETTINGS_READ` - View S3 server settings,\n * `PRIVILEGE_S3_SETTINGS_WRITE` - Modify S3 server settings,\n * `PRIVILEGE_SAML_SETTINGS_READ` - View SAML integration settings,\n * `PRIVILEGE_SAML_SETTINGS_WRITE` - Modify SAML integration settings,\n * `PRIVILEGE_SERVICE_PUBLIC_KEYS_READ` - Internal-Only: Read public keys,\n * `PRIVILEGE_SERVICE_PUBLIC_KEYS_WRITE` - Internal-Only: Write public keys,\n * `PRIVILEGE_SMB_FILE_HANDLE_READ` - List open SMB file handles,\n * `PRIVILEGE_SMB_FILE_HANDLE_WRITE` - Force close an open SMB file handle,\n * `PRIVILEGE_SMB_SESSION_READ` - List logged on SMB sessions,\n * `PRIVILEGE_SMB_SESSION_WRITE` - Force close a logged on SMB session,\n * `PRIVILEGE_SMB_SHARE_READ` - View configuration of SMB shares and SMB server settings,\n * `PRIVILEGE_SMB_SHARE_WRITE` - Create, modify, and delete SMB shares and SMB server settings,\n * `PRIVILEGE_SNAPSHOT_CALCULATE_USED_CAPACITY_READ` - Recalculate capacity usage of snapshots,\n * `PRIVILEGE_SNAPSHOT_DIFFERENCE_READ` - View the changes between snapshots,\n * `PRIVILEGE_SNAPSHOT_POLICY_READ` - View snapshot policies and status,\n * `PRIVILEGE_SNAPSHOT_POLICY_WRITE` - Create, modify, and delete snapshot policies,\n * `PRIVILEGE_SNAPSHOT_READ` - List snapshots and view their status and cached capacity. Does not affect the visibility of the virtual `.snapshot` directories,\n * `PRIVILEGE_SNAPSHOT_WRITE` - Create, modify, and delete snapshots,\n * `PRIVILEGE_SUPPORT_READ` - View support configuration and status,\n * `PRIVILEGE_SUPPORT_WRITE` - Modify cloud-based monitoring and remote management,\n * `PRIVILEGE_TENANT_READ` - View any tenant information,\n * `PRIVILEGE_TENANT_WRITE` - Create, edit or delete tenants,\n * `PRIVILEGE_TEST_ONLY` - Test only actions,\n * `PRIVILEGE_TIME_READ` - View time and time settings,\n * `PRIVILEGE_TIME_WRITE` - Modify time settings,\n * `PRIVILEGE_UNCONFIGURED_NODE_READ` - List unconfigured Qumulo nodes,\n * `PRIVILEGE_UPGRADE_READ` - View upgrade configuration and status,\n * `PRIVILEGE_UPGRADE_WRITE` - Perform upgrades,\n * `PRIVILEGE_WEB_UI_SETTINGS_WRITE` - Modify web UI settings"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "session"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/session/roles": {
            "get": {
                "summary": "Retrieve a list of all the roles assigned to the current user, including those assigned to a group to which the current user belongs.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "session"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/session/kv/{id}/": {
            "post": {
                "summary": "Create key-value pair with specified key and value",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The user's unique ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "key": {
                                            "type": "string"
                                        },
                                        "value": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "session"
                ],
                "deprecated": true,
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "key": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/session/kv/{id}/{key}": {
            "get": {
                "summary": "Get key-value pair",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The user's unique ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "path",
                        "description": "Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "key": {
                                            "type": "string"
                                        },
                                        "value": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "session"
                ],
                "deprecated": true,
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            },
            "put": {
                "summary": "Modify the value of a key-value pair",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The user's unique ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "path",
                        "description": "Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "key": {
                                            "type": "string"
                                        },
                                        "value": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "session"
                ],
                "deprecated": true,
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "key": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete key-value pair",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The user's unique ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "path",
                        "description": "Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success"
                    }
                },
                "tags": [
                    "session"
                ],
                "deprecated": true,
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/ad/settings": {
            "get": {
                "summary": "Gets advanced Active Directory settings.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "signing": {
                                            "type": "string",
                                            "enum": [
                                                "NO_SIGNING",
                                                "WANT_SIGNING",
                                                "REQUIRE_SIGNING"
                                            ],
                                            "description": "Setting for DCERPC signing; only use if sealing is not negotiated:\n * `NO_SIGNING` - Do not use DCERPC signing.,\n * `REQUIRE_SIGNING` - Require the use of DCERPC signing.,\n * `WANT_SIGNING` - Prefer to use DCERPC signing; allow server to decide."
                                        },
                                        "sealing": {
                                            "type": "string",
                                            "enum": [
                                                "NO_SEALING",
                                                "WANT_SEALING",
                                                "REQUIRE_SEALING"
                                            ],
                                            "description": "Setting for DCERPC sealing.:\n * `NO_SEALING` - Do not use sealing.,\n * `REQUIRE_SEALING` - Require the use of sealing.,\n * `WANT_SEALING` - Prefer to use sealing; allow server to decide."
                                        },
                                        "crypto": {
                                            "type": "string",
                                            "enum": [
                                                "NO_AES",
                                                "WANT_AES",
                                                "REQUIRE_AES"
                                            ],
                                            "description": "Setting for authenticator and sealing crypto.:\n * `NO_AES` - Do not use AES.,\n * `REQUIRE_AES` - Require the use of AES.,\n * `WANT_AES` - Prefer use of AES; allow server to decide."
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "ad"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            },
            "put": {
                "summary": "Sets advanced Active Directory settings.",
                "parameters": [
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "signing": {
                                            "type": "string",
                                            "enum": [
                                                "NO_SIGNING",
                                                "WANT_SIGNING",
                                                "REQUIRE_SIGNING"
                                            ],
                                            "description": "Setting for DCERPC signing; only use if sealing is not negotiated:\n * `NO_SIGNING` - Do not use DCERPC signing.,\n * `REQUIRE_SIGNING` - Require the use of DCERPC signing.,\n * `WANT_SIGNING` - Prefer to use DCERPC signing; allow server to decide."
                                        },
                                        "sealing": {
                                            "type": "string",
                                            "enum": [
                                                "NO_SEALING",
                                                "WANT_SEALING",
                                                "REQUIRE_SEALING"
                                            ],
                                            "description": "Setting for DCERPC sealing.:\n * `NO_SEALING` - Do not use sealing.,\n * `REQUIRE_SEALING` - Require the use of sealing.,\n * `WANT_SEALING` - Prefer to use sealing; allow server to decide."
                                        },
                                        "crypto": {
                                            "type": "string",
                                            "enum": [
                                                "NO_AES",
                                                "WANT_AES",
                                                "REQUIRE_AES"
                                            ],
                                            "description": "Setting for authenticator and sealing crypto.:\n * `NO_AES` - Do not use AES.,\n * `REQUIRE_AES` - Require the use of AES.,\n * `WANT_AES` - Prefer use of AES; allow server to decide."
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "ad"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "signing": {
                                        "type": "string",
                                        "enum": [
                                            "NO_SIGNING",
                                            "WANT_SIGNING",
                                            "REQUIRE_SIGNING"
                                        ],
                                        "description": "Setting for DCERPC signing; only use if sealing is not negotiated:\n * `NO_SIGNING` - Do not use DCERPC signing.,\n * `REQUIRE_SIGNING` - Require the use of DCERPC signing.,\n * `WANT_SIGNING` - Prefer to use DCERPC signing; allow server to decide."
                                    },
                                    "sealing": {
                                        "type": "string",
                                        "enum": [
                                            "NO_SEALING",
                                            "WANT_SEALING",
                                            "REQUIRE_SEALING"
                                        ],
                                        "description": "Setting for DCERPC sealing.:\n * `NO_SEALING` - Do not use sealing.,\n * `REQUIRE_SEALING` - Require the use of sealing.,\n * `WANT_SEALING` - Prefer to use sealing; allow server to decide."
                                    },
                                    "crypto": {
                                        "type": "string",
                                        "enum": [
                                            "NO_AES",
                                            "WANT_AES",
                                            "REQUIRE_AES"
                                        ],
                                        "description": "Setting for authenticator and sealing crypto.:\n * `NO_AES` - Do not use AES.,\n * `REQUIRE_AES` - Require the use of AES.,\n * `WANT_AES` - Prefer use of AES; allow server to decide."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/ad/status": {
            "get": {
                "summary": "Get Active Directory configuration and status.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "NOT_IN_DOMAIN",
                                                "JOINED_TO_DOMAIN"
                                            ],
                                            "description": "status:\n * `JOINED_TO_DOMAIN` - JOINED_TO_DOMAIN,\n * `NOT_IN_DOMAIN` - NOT_IN_DOMAIN"
                                        },
                                        "domain": {
                                            "type": "string"
                                        },
                                        "ou": {
                                            "type": "string"
                                        },
                                        "use_ad_posix_attributes": {
                                            "type": "boolean"
                                        },
                                        "base_dn": {
                                            "type": "string"
                                        },
                                        "domain_netbios": {
                                            "type": "string"
                                        },
                                        "dcs": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "address": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "ldap_connection_states": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "node_id": {
                                                        "type": "number"
                                                    },
                                                    "servers": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "bind_uri": {
                                                                    "type": "string"
                                                                },
                                                                "kdc_address": {
                                                                    "type": "string"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "bind_domain": {
                                                        "type": "string"
                                                    },
                                                    "bind_account": {
                                                        "type": "string"
                                                    },
                                                    "base_dn_vec": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "health": {
                                                        "type": "string",
                                                        "enum": [
                                                            "NO_RECENT_ERROR",
                                                            "INTERMITTENT_ERROR",
                                                            "SUSTAINED_ERROR"
                                                        ],
                                                        "description": "health:\n * `INTERMITTENT_ERROR` - LDAP_HEALTH_INTERMITTENT_ERROR,\n * `NO_RECENT_ERROR` - LDAP_HEALTH_NO_RECENT_ERROR,\n * `SUSTAINED_ERROR` - LDAP_HEALTH_SUSTAINED_ERROR"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "ad"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/ad/monitor": {
            "get": {
                "summary": "Gets details on a join or leave operation.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "LEAVE_SUCCEEDED",
                                                "JOIN_SUCCEEDED",
                                                "LEAVE_FAILED",
                                                "JOIN_FAILED",
                                                "LEAVE_IN_PROGRESS",
                                                "JOIN_IN_PROGRESS",
                                                "RECONFIGURE_IN_PROGRESS"
                                            ],
                                            "description": "status:\n * `JOIN_FAILED` - JOIN_FAILED,\n * `JOIN_IN_PROGRESS` - JOIN_IN_PROGRESS,\n * `JOIN_SUCCEEDED` - JOIN_SUCCEEDED,\n * `LEAVE_FAILED` - LEAVE_FAILED,\n * `LEAVE_IN_PROGRESS` - LEAVE_IN_PROGRESS,\n * `LEAVE_SUCCEEDED` - LEAVE_SUCCEEDED,\n * `RECONFIGURE_IN_PROGRESS` - RECONFIGURE_IN_PROGRESS"
                                        },
                                        "domain": {
                                            "type": "string"
                                        },
                                        "ou": {
                                            "type": "string"
                                        },
                                        "last_error": {
                                            "type": "object",
                                            "properties": {
                                                "module": {
                                                    "type": "string"
                                                },
                                                "error_class": {
                                                    "type": "string"
                                                },
                                                "description": {
                                                    "type": "string"
                                                },
                                                "stack": {
                                                    "type": "string"
                                                },
                                                "user_visible": {
                                                    "type": "boolean"
                                                }
                                            }
                                        },
                                        "last_action_time": {
                                            "type": "string"
                                        },
                                        "use_ad_posix_attributes": {
                                            "type": "boolean"
                                        },
                                        "base_dn": {
                                            "type": "string"
                                        },
                                        "domain_netbios": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "ad"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/ad/join": {
            "post": {
                "summary": "Joins the cluster to an Active Directory domain.",
                "parameters": [],
                "responses": {
                    "202": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "monitor_uri": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "ad"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "domain": {
                                        "type": "string"
                                    },
                                    "domain_netbios": {
                                        "type": "string"
                                    },
                                    "user": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "ou": {
                                        "type": "string"
                                    },
                                    "use_ad_posix_attributes": {
                                        "type": "boolean"
                                    },
                                    "base_dn": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/ad/reconfigure": {
            "post": {
                "summary": "Enables/disables POSIX attributes, sets Base DN.",
                "parameters": [],
                "responses": {
                    "202": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "monitor_uri": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "ad"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "use_ad_posix_attributes": {
                                        "type": "boolean"
                                    },
                                    "base_dn": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/ad/leave": {
            "post": {
                "summary": "Removes the cluster from Active Directory.",
                "parameters": [],
                "responses": {
                    "202": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "monitor_uri": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "ad"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "domain": {
                                        "type": "string"
                                    },
                                    "user": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/ad/cancel": {
            "post": {
                "summary": "Cancel current join or leave operation.",
                "parameters": [],
                "responses": {
                    "202": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "monitor_uri": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "ad"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/ad/clear-cache": {
            "post": {
                "summary": "Clear the AD cache containing cached entries for UID and SID mappings. This API is deprecated in favor of /v1/auth/clear-cache.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success"
                    }
                },
                "tags": [
                    "ad"
                ],
                "deprecated": true,
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/ad/distinguished-names/{dn}/object": {
            "get": {
                "summary": "Return the AD account object that has the given distinguished name.",
                "parameters": [
                    {
                        "name": "dn",
                        "in": "path",
                        "description": "The distinguished name to use to look up an AD user or group.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "dn": {
                                            "type": "string"
                                        },
                                        "sid": {
                                            "type": "string"
                                        },
                                        "uid": {
                                            "type": "number"
                                        },
                                        "gid": {
                                            "type": "number"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "groups": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "primary_group_sid": {
                                            "type": "string"
                                        },
                                        "classes": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "ad"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/ad/usernames/{username}/sids/": {
            "get": {
                "summary": "Return the SIDs for the given username as found by querying the domain controller for the domain the cluster is joined to.",
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "description": "The username to use to look up SIDs",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "ad"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/ad/usernames/{username}/objects/": {
            "get": {
                "summary": "Return any AD account objects that have the given sAMAccountName.",
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "description": "The sAMAccountName to use to look up AD users or groups.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "dn": {
                                                "type": "string"
                                            },
                                            "sid": {
                                                "type": "string"
                                            },
                                            "uid": {
                                                "type": "number"
                                            },
                                            "gid": {
                                                "type": "number"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "groups": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            },
                                            "primary_group_sid": {
                                                "type": "string"
                                            },
                                            "classes": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "ad"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/ad/uids/{uid}/sids/": {
            "get": {
                "summary": "Return the SIDs for the given UID as found by issuing an AD query against the current domain the cluster is joined to.",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "The UID to use to look up its SIDs",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "ad"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/ad/sids/{sid}/uid": {
            "get": {
                "summary": "Return the UID for the given SID as found by issuing an AD query against the current domain the cluster is joined to.",
                "parameters": [
                    {
                        "name": "sid",
                        "in": "path",
                        "description": "The SID to use to look up a UID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "uid": {
                                            "type": "number"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "ad"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/ad/sids/{sid}/username": {
            "get": {
                "summary": "Return the Username for the given SID as found by querying the domain controller for the domain the cluster is joined to.",
                "parameters": [
                    {
                        "name": "sid",
                        "in": "path",
                        "description": "The SID to use to looukup a username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "ad"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/ad/sids/{sid}/gid": {
            "get": {
                "summary": "Return the GID for the given group SID as found by issuing an AD query against the current domain the cluster is joined to.",
                "parameters": [
                    {
                        "name": "sid",
                        "in": "path",
                        "description": "The group SID to use to look up a GID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "gid": {
                                            "type": "number"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "ad"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/ad/sids/{sid}/object": {
            "get": {
                "summary": "Return the AD account object that has the given SID.",
                "parameters": [
                    {
                        "name": "sid",
                        "in": "path",
                        "description": "The SID to use to look up an AD user or group.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "dn": {
                                            "type": "string"
                                        },
                                        "sid": {
                                            "type": "string"
                                        },
                                        "uid": {
                                            "type": "number"
                                        },
                                        "gid": {
                                            "type": "number"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "groups": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "primary_group_sid": {
                                            "type": "string"
                                        },
                                        "classes": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "ad"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/ad/gids/{gid}/sids/": {
            "get": {
                "summary": "Return the SIDs for the given GID as found by issuing an AD query against the current domain the cluster is joined to.",
                "parameters": [
                    {
                        "name": "gid",
                        "in": "path",
                        "description": "The GID to use to look up its SIDs",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "ad"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/ad/sids/{sid}/expanded-groups/": {
            "get": {
                "summary": "Return the SIDs of all the groups that the given SID is a member of, (including all nested groups).",
                "parameters": [
                    {
                        "name": "sid",
                        "in": "path",
                        "description": "The SID to use to look up the SIDs of all the groups that this SID belongs to (this includes all nested groups).",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "sid": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "ad"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/analytics/time-series/": {
            "get": {
                "summary": "Returns all time series data maintained by the cluster.",
                "parameters": [
                    {
                        "name": "begin-time",
                        "in": "query",
                        "description": "Lower bound on intervals returned, in epoch seconds.",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "times": {
                                                "type": "array",
                                                "items": {
                                                    "type": "number"
                                                }
                                            },
                                            "values": {
                                                "type": "array",
                                                "items": {
                                                    "type": "number"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "analytics"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/analytics/activity/current": {
            "get": {
                "summary": "Returns the current sampled IOPS and throughput from the cluster.",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Filters activity to a specific type. If not specified, all activity is returned.:\n * `file-iops-read` - file-iops-read,\n * `file-iops-write` - file-iops-write,\n * `file-throughput-read` - file-throughput-read,\n * `file-throughput-write` - file-throughput-write,\n * `metadata-iops-read` - metadata-iops-read,\n * `metadata-iops-write` - metadata-iops-write",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "file-iops-read",
                                "file-iops-write",
                                "metadata-iops-read",
                                "metadata-iops-write",
                                "file-throughput-read",
                                "file-throughput-write"
                            ],
                            "description": "Filters activity to a specific type. If not specified, all activity is returned.:\n * `file-iops-read` - file-iops-read,\n * `file-iops-write` - file-iops-write,\n * `file-throughput-read` - file-throughput-read,\n * `file-throughput-write` - file-throughput-write,\n * `metadata-iops-read` - metadata-iops-read,\n * `metadata-iops-write` - metadata-iops-write"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "entries": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string"
                                                    },
                                                    "ip": {
                                                        "type": "string"
                                                    },
                                                    "rate": {
                                                        "type": "number"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "enum": [
                                                            "file-iops-read",
                                                            "file-iops-write",
                                                            "metadata-iops-read",
                                                            "metadata-iops-write",
                                                            "file-throughput-read",
                                                            "file-throughput-write"
                                                        ],
                                                        "description": "type:\n * `file-iops-read` - HEAT_OP_TYPE_FILE_IOPS_READ,\n * `file-iops-write` - HEAT_OP_TYPE_FILE_IOPS_WRITE,\n * `file-throughput-read` - HEAT_OP_TYPE_FILE_THROUGHPUT_READ,\n * `file-throughput-write` - HEAT_OP_TYPE_FILE_THROUGHPUT_WRITE,\n * `metadata-iops-read` - HEAT_OP_TYPE_METADATA_IOPS_READ,\n * `metadata-iops-write` - HEAT_OP_TYPE_METADATA_IOPS_WRITE"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "analytics"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/analytics/capacity-history/": {
            "get": {
                "summary": "Returns capacity history data for the cluster. Does not return entries for timeslots without capacity data. Returned history data will be sorted by ascending time.",
                "parameters": [
                    {
                        "name": "begin-time",
                        "in": "query",
                        "description": "Lower bound on history returned, in epoch seconds.",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "end-time",
                        "in": "query",
                        "description": "Upper bound on history returned, in epoch seconds. If not specified, defaults to the current system time.",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "interval",
                        "in": "query",
                        "description": "Sampling interval. If not specified, defaults to 'hourly'.:\n * `daily` - daily,\n * `hourly` - hourly,\n * `weekly` - weekly",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "hourly",
                                "daily",
                                "weekly"
                            ],
                            "description": "Sampling interval. If not specified, defaults to 'hourly'.:\n * `daily` - daily,\n * `hourly` - hourly,\n * `weekly` - weekly"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "period_start_time": {
                                                "type": "number"
                                            },
                                            "capacity_used": {
                                                "type": "string"
                                            },
                                            "data_used": {
                                                "type": "string"
                                            },
                                            "metadata_used": {
                                                "type": "string"
                                            },
                                            "snapshot_used": {
                                                "type": "string"
                                            },
                                            "total_usable": {
                                                "type": "string"
                                            },
                                            "details_status": {
                                                "type": "string",
                                                "enum": [
                                                    "AVAILABLE",
                                                    "UNAVAILABLE",
                                                    "PENDING"
                                                ],
                                                "description": "details_status:\n * `AVAILABLE` - DETAILED_PATH_CAPACITY_AVAILABLE,\n * `PENDING` - DETAILED_PATH_CAPACITY_PENDING,\n * `UNAVAILABLE` - DETAILED_PATH_CAPACITY_UNAVAILABLE"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "analytics"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/analytics/capacity-history/{timestamp}/": {
            "get": {
                "summary": "Returns all paths using more than 0.1% of overall used capacity at a given timestamp. A path that meets the threshold with many items smaller than the threshold will be aggregated. Individual items above the threshold will be reported separately.",
                "parameters": [
                    {
                        "name": "timestamp",
                        "in": "path",
                        "description": "Time in epoch seconds",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "threshold_for_inclusion": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "AVAILABLE",
                                                "UNAVAILABLE",
                                                "PENDING"
                                            ],
                                            "description": "status:\n * `AVAILABLE` - DETAILED_PATH_CAPACITY_AVAILABLE,\n * `PENDING` - DETAILED_PATH_CAPACITY_PENDING,\n * `UNAVAILABLE` - DETAILED_PATH_CAPACITY_UNAVAILABLE"
                                        },
                                        "largest_paths": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "capacity_used": {
                                                        "type": "string"
                                                    },
                                                    "path": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "analytics"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/audit/syslog/config": {
            "get": {
                "summary": "Retrieves audit log syslog configuration for the cluster.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "enabled": {
                                            "type": "boolean"
                                        },
                                        "server_address": {
                                            "type": "string"
                                        },
                                        "server_port": {
                                            "type": "number"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "audit"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            },
            "put": {
                "summary": "Modifies audit log syslog configuration for the cluster.",
                "parameters": [
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "enabled": {
                                            "type": "boolean"
                                        },
                                        "server_address": {
                                            "type": "string"
                                        },
                                        "server_port": {
                                            "type": "number"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "audit"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "enabled": {
                                        "type": "boolean"
                                    },
                                    "server_address": {
                                        "type": "string"
                                    },
                                    "server_port": {
                                        "type": "number"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Modifies audit log syslog configuration for the cluster.",
                "parameters": [
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "enabled": {
                                            "type": "boolean"
                                        },
                                        "server_address": {
                                            "type": "string"
                                        },
                                        "server_port": {
                                            "type": "number"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "audit"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "enabled": {
                                        "type": "boolean"
                                    },
                                    "server_address": {
                                        "type": "string"
                                    },
                                    "server_port": {
                                        "type": "number"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/audit/syslog/status": {
            "get": {
                "summary": "Retrieves the syslog connection status of audit log.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "connection_status": {
                                            "type": "string",
                                            "enum": [
                                                "AUDIT_LOG_CONNECTED",
                                                "AUDIT_LOG_CONNECTING",
                                                "AUDIT_LOG_DISABLED",
                                                "AUDIT_LOG_DISCONNECTED"
                                            ],
                                            "description": "The current connection status of the audit logger.:\n * `AUDIT_LOG_CONNECTED` - AUDIT_LOG_CONNECTED,\n * `AUDIT_LOG_CONNECTING` - AUDIT_LOG_CONNECTING,\n * `AUDIT_LOG_DISABLED` - AUDIT_LOG_DISABLED,\n * `AUDIT_LOG_DISCONNECTED` - AUDIT_LOG_DISCONNECTED"
                                        },
                                        "error_message": {
                                            "type": "string"
                                        },
                                        "error_details": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "audit"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/audit/cloudwatch/config": {
            "get": {
                "summary": "Retrieves audit log CloudWatch configuration for the cluster.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "enabled": {
                                            "type": "boolean"
                                        },
                                        "log_group_name": {
                                            "type": "string"
                                        },
                                        "region": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "audit"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            },
            "put": {
                "summary": "Sets audit log CloudWatch configuration for the cluster.",
                "parameters": [
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "enabled": {
                                            "type": "boolean"
                                        },
                                        "log_group_name": {
                                            "type": "string"
                                        },
                                        "region": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "audit"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "enabled": {
                                        "type": "boolean"
                                    },
                                    "log_group_name": {
                                        "type": "string"
                                    },
                                    "region": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Modifies audit log CloudWatch configuration for the cluster.",
                "parameters": [
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "enabled": {
                                            "type": "boolean"
                                        },
                                        "log_group_name": {
                                            "type": "string"
                                        },
                                        "region": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "audit"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "enabled": {
                                        "type": "boolean"
                                    },
                                    "log_group_name": {
                                        "type": "string"
                                    },
                                    "region": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/audit/cloudwatch/status": {
            "get": {
                "summary": "Retrieves audit log CloudWatch status for the cluster.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success"
                    }
                },
                "tags": [
                    "audit"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/auth/identity/find": {
            "post": {
                "summary": "Search for identity and expand all fields.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "domain": {
                                            "type": "string",
                                            "enum": [
                                                "LOCAL",
                                                "API_NULL_DOMAIN",
                                                "WORLD",
                                                "POSIX_USER",
                                                "POSIX_GROUP",
                                                "ACTIVE_DIRECTORY",
                                                "API_INVALID_DOMAIN",
                                                "API_RESERVED_DOMAIN",
                                                "API_INTERNAL_DOMAIN",
                                                "API_OPERATOR_DOMAIN",
                                                "API_CREATOR_DOMAIN"
                                            ],
                                            "description": "domain:\n * `ACTIVE_DIRECTORY` - ACTIVE_DIRECTORY,\n * `API_CREATOR_DOMAIN` - API_CREATOR_DOMAIN,\n * `API_INTERNAL_DOMAIN` - API_INTERNAL_DOMAIN,\n * `API_INVALID_DOMAIN` - API_INVALID_DOMAIN,\n * `API_NULL_DOMAIN` - API_NULL_DOMAIN,\n * `API_OPERATOR_DOMAIN` - API_OPERATOR_DOMAIN,\n * `API_RESERVED_DOMAIN` - API_RESERVED_DOMAIN,\n * `LOCAL` - LOCAL,\n * `POSIX_GROUP` - POSIX_GROUP,\n * `POSIX_USER` - POSIX_USER,\n * `WORLD` - WORLD"
                                        },
                                        "auth_id": {
                                            "type": "string"
                                        },
                                        "uid": {
                                            "type": "number"
                                        },
                                        "gid": {
                                            "type": "number"
                                        },
                                        "sid": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "auth"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "domain": {
                                        "type": "string",
                                        "enum": [
                                            "LOCAL",
                                            "API_NULL_DOMAIN",
                                            "WORLD",
                                            "POSIX_USER",
                                            "POSIX_GROUP",
                                            "ACTIVE_DIRECTORY",
                                            "API_INVALID_DOMAIN",
                                            "API_RESERVED_DOMAIN",
                                            "API_INTERNAL_DOMAIN",
                                            "API_OPERATOR_DOMAIN",
                                            "API_CREATOR_DOMAIN"
                                        ],
                                        "description": "domain:\n * `ACTIVE_DIRECTORY` - ACTIVE_DIRECTORY,\n * `API_CREATOR_DOMAIN` - API_CREATOR_DOMAIN,\n * `API_INTERNAL_DOMAIN` - API_INTERNAL_DOMAIN,\n * `API_INVALID_DOMAIN` - API_INVALID_DOMAIN,\n * `API_NULL_DOMAIN` - API_NULL_DOMAIN,\n * `API_OPERATOR_DOMAIN` - API_OPERATOR_DOMAIN,\n * `API_RESERVED_DOMAIN` - API_RESERVED_DOMAIN,\n * `LOCAL` - LOCAL,\n * `POSIX_GROUP` - POSIX_GROUP,\n * `POSIX_USER` - POSIX_USER,\n * `WORLD` - WORLD"
                                    },
                                    "auth_id": {
                                        "type": "string"
                                    },
                                    "uid": {
                                        "type": "number"
                                    },
                                    "gid": {
                                        "type": "number"
                                    },
                                    "sid": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/auth/identity/expand": {
            "post": {
                "summary": "Find all equivalents and the group membership of the given identity.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "object",
                                            "properties": {
                                                "domain": {
                                                    "type": "string",
                                                    "enum": [
                                                        "LOCAL",
                                                        "API_NULL_DOMAIN",
                                                        "WORLD",
                                                        "POSIX_USER",
                                                        "POSIX_GROUP",
                                                        "ACTIVE_DIRECTORY",
                                                        "API_INVALID_DOMAIN",
                                                        "API_RESERVED_DOMAIN",
                                                        "API_INTERNAL_DOMAIN",
                                                        "API_OPERATOR_DOMAIN",
                                                        "API_CREATOR_DOMAIN"
                                                    ],
                                                    "description": "domain:\n * `ACTIVE_DIRECTORY` - ACTIVE_DIRECTORY,\n * `API_CREATOR_DOMAIN` - API_CREATOR_DOMAIN,\n * `API_INTERNAL_DOMAIN` - API_INTERNAL_DOMAIN,\n * `API_INVALID_DOMAIN` - API_INVALID_DOMAIN,\n * `API_NULL_DOMAIN` - API_NULL_DOMAIN,\n * `API_OPERATOR_DOMAIN` - API_OPERATOR_DOMAIN,\n * `API_RESERVED_DOMAIN` - API_RESERVED_DOMAIN,\n * `LOCAL` - LOCAL,\n * `POSIX_GROUP` - POSIX_GROUP,\n * `POSIX_USER` - POSIX_USER,\n * `WORLD` - WORLD"
                                                },
                                                "auth_id": {
                                                    "type": "string"
                                                },
                                                "uid": {
                                                    "type": "number"
                                                },
                                                "gid": {
                                                    "type": "number"
                                                },
                                                "sid": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "type": {
                                            "type": "string",
                                            "enum": [
                                                "UNKNOWN",
                                                "USER",
                                                "GROUP"
                                            ],
                                            "description": "Whether the expanded identity is a user, group, or indeterminate.:\n * `GROUP` - ID_IS_GROUP,\n * `UNKNOWN` - ID_TYPE_UNKNOWN,\n * `USER` - ID_IS_USER"
                                        },
                                        "smb_id": {
                                            "type": "object",
                                            "properties": {
                                                "domain": {
                                                    "type": "string",
                                                    "enum": [
                                                        "LOCAL",
                                                        "API_NULL_DOMAIN",
                                                        "WORLD",
                                                        "POSIX_USER",
                                                        "POSIX_GROUP",
                                                        "ACTIVE_DIRECTORY",
                                                        "API_INVALID_DOMAIN",
                                                        "API_RESERVED_DOMAIN",
                                                        "API_INTERNAL_DOMAIN",
                                                        "API_OPERATOR_DOMAIN",
                                                        "API_CREATOR_DOMAIN"
                                                    ],
                                                    "description": "domain:\n * `ACTIVE_DIRECTORY` - ACTIVE_DIRECTORY,\n * `API_CREATOR_DOMAIN` - API_CREATOR_DOMAIN,\n * `API_INTERNAL_DOMAIN` - API_INTERNAL_DOMAIN,\n * `API_INVALID_DOMAIN` - API_INVALID_DOMAIN,\n * `API_NULL_DOMAIN` - API_NULL_DOMAIN,\n * `API_OPERATOR_DOMAIN` - API_OPERATOR_DOMAIN,\n * `API_RESERVED_DOMAIN` - API_RESERVED_DOMAIN,\n * `LOCAL` - LOCAL,\n * `POSIX_GROUP` - POSIX_GROUP,\n * `POSIX_USER` - POSIX_USER,\n * `WORLD` - WORLD"
                                                },
                                                "auth_id": {
                                                    "type": "string"
                                                },
                                                "uid": {
                                                    "type": "number"
                                                },
                                                "gid": {
                                                    "type": "number"
                                                },
                                                "sid": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "nfs_id": {
                                            "type": "object",
                                            "properties": {
                                                "domain": {
                                                    "type": "string",
                                                    "enum": [
                                                        "LOCAL",
                                                        "API_NULL_DOMAIN",
                                                        "WORLD",
                                                        "POSIX_USER",
                                                        "POSIX_GROUP",
                                                        "ACTIVE_DIRECTORY",
                                                        "API_INVALID_DOMAIN",
                                                        "API_RESERVED_DOMAIN",
                                                        "API_INTERNAL_DOMAIN",
                                                        "API_OPERATOR_DOMAIN",
                                                        "API_CREATOR_DOMAIN"
                                                    ],
                                                    "description": "domain:\n * `ACTIVE_DIRECTORY` - ACTIVE_DIRECTORY,\n * `API_CREATOR_DOMAIN` - API_CREATOR_DOMAIN,\n * `API_INTERNAL_DOMAIN` - API_INTERNAL_DOMAIN,\n * `API_INVALID_DOMAIN` - API_INVALID_DOMAIN,\n * `API_NULL_DOMAIN` - API_NULL_DOMAIN,\n * `API_OPERATOR_DOMAIN` - API_OPERATOR_DOMAIN,\n * `API_RESERVED_DOMAIN` - API_RESERVED_DOMAIN,\n * `LOCAL` - LOCAL,\n * `POSIX_GROUP` - POSIX_GROUP,\n * `POSIX_USER` - POSIX_USER,\n * `WORLD` - WORLD"
                                                },
                                                "auth_id": {
                                                    "type": "string"
                                                },
                                                "uid": {
                                                    "type": "number"
                                                },
                                                "gid": {
                                                    "type": "number"
                                                },
                                                "sid": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "equivalent_ids": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "domain": {
                                                        "type": "string",
                                                        "enum": [
                                                            "LOCAL",
                                                            "API_NULL_DOMAIN",
                                                            "WORLD",
                                                            "POSIX_USER",
                                                            "POSIX_GROUP",
                                                            "ACTIVE_DIRECTORY",
                                                            "API_INVALID_DOMAIN",
                                                            "API_RESERVED_DOMAIN",
                                                            "API_INTERNAL_DOMAIN",
                                                            "API_OPERATOR_DOMAIN",
                                                            "API_CREATOR_DOMAIN"
                                                        ],
                                                        "description": "domain:\n * `ACTIVE_DIRECTORY` - ACTIVE_DIRECTORY,\n * `API_CREATOR_DOMAIN` - API_CREATOR_DOMAIN,\n * `API_INTERNAL_DOMAIN` - API_INTERNAL_DOMAIN,\n * `API_INVALID_DOMAIN` - API_INVALID_DOMAIN,\n * `API_NULL_DOMAIN` - API_NULL_DOMAIN,\n * `API_OPERATOR_DOMAIN` - API_OPERATOR_DOMAIN,\n * `API_RESERVED_DOMAIN` - API_RESERVED_DOMAIN,\n * `LOCAL` - LOCAL,\n * `POSIX_GROUP` - POSIX_GROUP,\n * `POSIX_USER` - POSIX_USER,\n * `WORLD` - WORLD"
                                                    },
                                                    "auth_id": {
                                                        "type": "string"
                                                    },
                                                    "uid": {
                                                        "type": "number"
                                                    },
                                                    "gid": {
                                                        "type": "number"
                                                    },
                                                    "sid": {
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "group_ids": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "domain": {
                                                        "type": "string",
                                                        "enum": [
                                                            "LOCAL",
                                                            "API_NULL_DOMAIN",
                                                            "WORLD",
                                                            "POSIX_USER",
                                                            "POSIX_GROUP",
                                                            "ACTIVE_DIRECTORY",
                                                            "API_INVALID_DOMAIN",
                                                            "API_RESERVED_DOMAIN",
                                                            "API_INTERNAL_DOMAIN",
                                                            "API_OPERATOR_DOMAIN",
                                                            "API_CREATOR_DOMAIN"
                                                        ],
                                                        "description": "domain:\n * `ACTIVE_DIRECTORY` - ACTIVE_DIRECTORY,\n * `API_CREATOR_DOMAIN` - API_CREATOR_DOMAIN,\n * `API_INTERNAL_DOMAIN` - API_INTERNAL_DOMAIN,\n * `API_INVALID_DOMAIN` - API_INVALID_DOMAIN,\n * `API_NULL_DOMAIN` - API_NULL_DOMAIN,\n * `API_OPERATOR_DOMAIN` - API_OPERATOR_DOMAIN,\n * `API_RESERVED_DOMAIN` - API_RESERVED_DOMAIN,\n * `LOCAL` - LOCAL,\n * `POSIX_GROUP` - POSIX_GROUP,\n * `POSIX_USER` - POSIX_USER,\n * `WORLD` - WORLD"
                                                    },
                                                    "auth_id": {
                                                        "type": "string"
                                                    },
                                                    "uid": {
                                                        "type": "number"
                                                    },
                                                    "gid": {
                                                        "type": "number"
                                                    },
                                                    "sid": {
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "auth"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "object",
                                        "properties": {
                                            "domain": {
                                                "type": "string",
                                                "enum": [
                                                    "LOCAL",
                                                    "API_NULL_DOMAIN",
                                                    "WORLD",
                                                    "POSIX_USER",
                                                    "POSIX_GROUP",
                                                    "ACTIVE_DIRECTORY",
                                                    "API_INVALID_DOMAIN",
                                                    "API_RESERVED_DOMAIN",
                                                    "API_INTERNAL_DOMAIN",
                                                    "API_OPERATOR_DOMAIN",
                                                    "API_CREATOR_DOMAIN"
                                                ],
                                                "description": "domain:\n * `ACTIVE_DIRECTORY` - ACTIVE_DIRECTORY,\n * `API_CREATOR_DOMAIN` - API_CREATOR_DOMAIN,\n * `API_INTERNAL_DOMAIN` - API_INTERNAL_DOMAIN,\n * `API_INVALID_DOMAIN` - API_INVALID_DOMAIN,\n * `API_NULL_DOMAIN` - API_NULL_DOMAIN,\n * `API_OPERATOR_DOMAIN` - API_OPERATOR_DOMAIN,\n * `API_RESERVED_DOMAIN` - API_RESERVED_DOMAIN,\n * `LOCAL` - LOCAL,\n * `POSIX_GROUP` - POSIX_GROUP,\n * `POSIX_USER` - POSIX_USER,\n * `WORLD` - WORLD"
                                            },
                                            "auth_id": {
                                                "type": "string"
                                            },
                                            "uid": {
                                                "type": "number"
                                            },
                                            "gid": {
                                                "type": "number"
                                            },
                                            "sid": {
                                                "type": "string"
                                            },
                                            "name": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "equivalent_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "domain": {
                                                    "type": "string",
                                                    "enum": [
                                                        "LOCAL",
                                                        "API_NULL_DOMAIN",
                                                        "WORLD",
                                                        "POSIX_USER",
                                                        "POSIX_GROUP",
                                                        "ACTIVE_DIRECTORY",
                                                        "API_INVALID_DOMAIN",
                                                        "API_RESERVED_DOMAIN",
                                                        "API_INTERNAL_DOMAIN",
                                                        "API_OPERATOR_DOMAIN",
                                                        "API_CREATOR_DOMAIN"
                                                    ],
                                                    "description": "domain:\n * `ACTIVE_DIRECTORY` - ACTIVE_DIRECTORY,\n * `API_CREATOR_DOMAIN` - API_CREATOR_DOMAIN,\n * `API_INTERNAL_DOMAIN` - API_INTERNAL_DOMAIN,\n * `API_INVALID_DOMAIN` - API_INVALID_DOMAIN,\n * `API_NULL_DOMAIN` - API_NULL_DOMAIN,\n * `API_OPERATOR_DOMAIN` - API_OPERATOR_DOMAIN,\n * `API_RESERVED_DOMAIN` - API_RESERVED_DOMAIN,\n * `LOCAL` - LOCAL,\n * `POSIX_GROUP` - POSIX_GROUP,\n * `POSIX_USER` - POSIX_USER,\n * `WORLD` - WORLD"
                                                },
                                                "auth_id": {
                                                    "type": "string"
                                                },
                                                "uid": {
                                                    "type": "number"
                                                },
                                                "gid": {
                                                    "type": "number"
                                                },
                                                "sid": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "group_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "domain": {
                                                    "type": "string",
                                                    "enum": [
                                                        "LOCAL",
                                                        "API_NULL_DOMAIN",
                                                        "WORLD",
                                                        "POSIX_USER",
                                                        "POSIX_GROUP",
                                                        "ACTIVE_DIRECTORY",
                                                        "API_INVALID_DOMAIN",
                                                        "API_RESERVED_DOMAIN",
                                                        "API_INTERNAL_DOMAIN",
                                                        "API_OPERATOR_DOMAIN",
                                                        "API_CREATOR_DOMAIN"
                                                    ],
                                                    "description": "domain:\n * `ACTIVE_DIRECTORY` - ACTIVE_DIRECTORY,\n * `API_CREATOR_DOMAIN` - API_CREATOR_DOMAIN,\n * `API_INTERNAL_DOMAIN` - API_INTERNAL_DOMAIN,\n * `API_INVALID_DOMAIN` - API_INVALID_DOMAIN,\n * `API_NULL_DOMAIN` - API_NULL_DOMAIN,\n * `API_OPERATOR_DOMAIN` - API_OPERATOR_DOMAIN,\n * `API_RESERVED_DOMAIN` - API_RESERVED_DOMAIN,\n * `LOCAL` - LOCAL,\n * `POSIX_GROUP` - POSIX_GROUP,\n * `POSIX_USER` - POSIX_USER,\n * `WORLD` - WORLD"
                                                },
                                                "auth_id": {
                                                    "type": "string"
                                                },
                                                "uid": {
                                                    "type": "number"
                                                },
                                                "gid": {
                                                    "type": "number"
                                                },
                                                "sid": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/auth/user-defined-mappings/": {
            "put": {
                "summary": "Replace the configured set of AD/LDAP static user defined mappings with the supplied set.",
                "parameters": [
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "down_level_logon_name": {
                                                "type": "string"
                                            },
                                            "ldap_name": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "auth"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "down_level_logon_name": {
                                            "type": "string"
                                        },
                                        "ldap_name": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Get the configured set of AD/LDAP static user defined mappings.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "down_level_logon_name": {
                                                "type": "string"
                                            },
                                            "ldap_name": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "auth"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/auth/clear-cache": {
            "post": {
                "summary": "Clear all cached authentication information.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success"
                    }
                },
                "tags": [
                    "auth"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/auth/kerberos-keytab": {
            "get": {
                "summary": "Get the entries from the current keytab configuration",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "entries": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "principal": {
                                                        "type": "string"
                                                    },
                                                    "version": {
                                                        "type": "number"
                                                    },
                                                    "enctype": {
                                                        "type": "string",
                                                        "enum": [
                                                            "KERBEROS_ENCRYPTION_TYPE_NULL",
                                                            "KERBEROS_ENCRYPTION_TYPE_DES_CBC_CRC",
                                                            "KERBEROS_ENCRYPTION_TYPE_DES_CBC_MD4",
                                                            "KERBEROS_ENCRYPTION_TYPE_DES_CBC_MD5",
                                                            "KERBEROS_ENCRYPTION_TYPE_DES3_CBC_MD5",
                                                            "KERBEROS_ENCRYPTION_TYPE_OLD_DES3_CBC_SHA1",
                                                            "KERBEROS_ENCRYPTION_TYPE_SIGN_DSA_GENERATE",
                                                            "KERBEROS_ENCRYPTION_TYPE_ENCRYPT_RSA_PRIV",
                                                            "KERBEROS_ENCRYPTION_TYPE_ENCRYPT_RSA_PUB",
                                                            "KERBEROS_ENCRYPTION_TYPE_DES3_CBC_SHA1",
                                                            "KERBEROS_ENCRYPTION_TYPE_AES128_CTS_HMAC_SHA1_96",
                                                            "KERBEROS_ENCRYPTION_TYPE_AES256_CTS_HMAC_SHA1_96",
                                                            "KERBEROS_ENCRYPTION_TYPE_AES128_CTS_HMAC_SHA256_128",
                                                            "KERBEROS_ENCRYPTION_TYPE_AES256_CTS_HMAC_SHA384_192",
                                                            "KERBEROS_ENCRYPTION_TYPE_ARCFOUR_HMAC_MD5",
                                                            "KERBEROS_ENCRYPTION_TYPE_ARCFOUR_HMAC_MD5_56",
                                                            "KERBEROS_ENCRYPTION_TYPE_ENCTYPE_PK_CROSS",
                                                            "KERBEROS_ENCRYPTION_TYPE_ARCFOUR_MD4",
                                                            "KERBEROS_ENCRYPTION_TYPE_ARCFOUR_HMAC_OLD",
                                                            "KERBEROS_ENCRYPTION_TYPE_ARCFOUR_HMAC_OLD_EXP",
                                                            "KERBEROS_ENCRYPTION_TYPE_DES_CBC_NONE",
                                                            "KERBEROS_ENCRYPTION_TYPE_DES3_CBC_NONE",
                                                            "KERBEROS_ENCRYPTION_TYPE_DES_CFB64_NONE",
                                                            "KERBEROS_ENCRYPTION_TYPE_DES_PCBC_NONE",
                                                            "KERBEROS_ENCRYPTION_TYPE_DIGEST_MD5_NONE",
                                                            "KERBEROS_ENCRYPTION_TYPE_CRAM_MD5_NONE"
                                                        ],
                                                        "description": "enctype:\n * `KERBEROS_ENCRYPTION_TYPE_AES128_CTS_HMAC_SHA1_96` - KERBEROS_ENCRYPTION_TYPE_AES128_CTS_HMAC_SHA1_96,\n * `KERBEROS_ENCRYPTION_TYPE_AES128_CTS_HMAC_SHA256_128` - KERBEROS_ENCRYPTION_TYPE_AES128_CTS_HMAC_SHA256_128,\n * `KERBEROS_ENCRYPTION_TYPE_AES256_CTS_HMAC_SHA1_96` - KERBEROS_ENCRYPTION_TYPE_AES256_CTS_HMAC_SHA1_96,\n * `KERBEROS_ENCRYPTION_TYPE_AES256_CTS_HMAC_SHA384_192` - KERBEROS_ENCRYPTION_TYPE_AES256_CTS_HMAC_SHA384_192,\n * `KERBEROS_ENCRYPTION_TYPE_ARCFOUR_HMAC_MD5` - KERBEROS_ENCRYPTION_TYPE_ARCFOUR_HMAC_MD5,\n * `KERBEROS_ENCRYPTION_TYPE_ARCFOUR_HMAC_MD5_56` - KERBEROS_ENCRYPTION_TYPE_ARCFOUR_HMAC_MD5_56,\n * `KERBEROS_ENCRYPTION_TYPE_ARCFOUR_HMAC_OLD` - KERBEROS_ENCRYPTION_TYPE_ARCFOUR_HMAC_OLD,\n * `KERBEROS_ENCRYPTION_TYPE_ARCFOUR_HMAC_OLD_EXP` - KERBEROS_ENCRYPTION_TYPE_ARCFOUR_HMAC_OLD_EXP,\n * `KERBEROS_ENCRYPTION_TYPE_ARCFOUR_MD4` - KERBEROS_ENCRYPTION_TYPE_ARCFOUR_MD4,\n * `KERBEROS_ENCRYPTION_TYPE_CRAM_MD5_NONE` - KERBEROS_ENCRYPTION_TYPE_CRAM_MD5_NONE,\n * `KERBEROS_ENCRYPTION_TYPE_DES3_CBC_MD5` - KERBEROS_ENCRYPTION_TYPE_DES3_CBC_MD5,\n * `KERBEROS_ENCRYPTION_TYPE_DES3_CBC_NONE` - KERBEROS_ENCRYPTION_TYPE_DES3_CBC_NONE,\n * `KERBEROS_ENCRYPTION_TYPE_DES3_CBC_SHA1` - KERBEROS_ENCRYPTION_TYPE_DES3_CBC_SHA1,\n * `KERBEROS_ENCRYPTION_TYPE_DES_CBC_CRC` - KERBEROS_ENCRYPTION_TYPE_DES_CBC_CRC,\n * `KERBEROS_ENCRYPTION_TYPE_DES_CBC_MD4` - KERBEROS_ENCRYPTION_TYPE_DES_CBC_MD4,\n * `KERBEROS_ENCRYPTION_TYPE_DES_CBC_MD5` - KERBEROS_ENCRYPTION_TYPE_DES_CBC_MD5,\n * `KERBEROS_ENCRYPTION_TYPE_DES_CBC_NONE` - KERBEROS_ENCRYPTION_TYPE_DES_CBC_NONE,\n * `KERBEROS_ENCRYPTION_TYPE_DES_CFB64_NONE` - KERBEROS_ENCRYPTION_TYPE_DES_CFB64_NONE,\n * `KERBEROS_ENCRYPTION_TYPE_DES_PCBC_NONE` - KERBEROS_ENCRYPTION_TYPE_DES_PCBC_NONE,\n * `KERBEROS_ENCRYPTION_TYPE_DIGEST_MD5_NONE` - KERBEROS_ENCRYPTION_TYPE_DIGEST_MD5_NONE,\n * `KERBEROS_ENCRYPTION_TYPE_ENCRYPT_RSA_PRIV` - KERBEROS_ENCRYPTION_TYPE_ENCRYPT_RSA_PRIV,\n * `KERBEROS_ENCRYPTION_TYPE_ENCRYPT_RSA_PUB` - KERBEROS_ENCRYPTION_TYPE_ENCRYPT_RSA_PUB,\n * `KERBEROS_ENCRYPTION_TYPE_ENCTYPE_PK_CROSS` - KERBEROS_ENCRYPTION_TYPE_ENCTYPE_PK_CROSS,\n * `KERBEROS_ENCRYPTION_TYPE_NULL` - KERBEROS_ENCRYPTION_TYPE_NULL,\n * `KERBEROS_ENCRYPTION_TYPE_OLD_DES3_CBC_SHA1` - KERBEROS_ENCRYPTION_TYPE_OLD_DES3_CBC_SHA1,\n * `KERBEROS_ENCRYPTION_TYPE_SIGN_DSA_GENERATE` - KERBEROS_ENCRYPTION_TYPE_SIGN_DSA_GENERATE"
                                                    },
                                                    "key": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "number"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "auth"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            },
            "put": {
                "summary": "Set the Kerberos keytab from a generated keytab file",
                "parameters": [
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "entries": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "principal": {
                                                        "type": "string"
                                                    },
                                                    "version": {
                                                        "type": "number"
                                                    },
                                                    "enctype": {
                                                        "type": "string",
                                                        "enum": [
                                                            "KERBEROS_ENCRYPTION_TYPE_NULL",
                                                            "KERBEROS_ENCRYPTION_TYPE_DES_CBC_CRC",
                                                            "KERBEROS_ENCRYPTION_TYPE_DES_CBC_MD4",
                                                            "KERBEROS_ENCRYPTION_TYPE_DES_CBC_MD5",
                                                            "KERBEROS_ENCRYPTION_TYPE_DES3_CBC_MD5",
                                                            "KERBEROS_ENCRYPTION_TYPE_OLD_DES3_CBC_SHA1",
                                                            "KERBEROS_ENCRYPTION_TYPE_SIGN_DSA_GENERATE",
                                                            "KERBEROS_ENCRYPTION_TYPE_ENCRYPT_RSA_PRIV",
                                                            "KERBEROS_ENCRYPTION_TYPE_ENCRYPT_RSA_PUB",
                                                            "KERBEROS_ENCRYPTION_TYPE_DES3_CBC_SHA1",
                                                            "KERBEROS_ENCRYPTION_TYPE_AES128_CTS_HMAC_SHA1_96",
                                                            "KERBEROS_ENCRYPTION_TYPE_AES256_CTS_HMAC_SHA1_96",
                                                            "KERBEROS_ENCRYPTION_TYPE_AES128_CTS_HMAC_SHA256_128",
                                                            "KERBEROS_ENCRYPTION_TYPE_AES256_CTS_HMAC_SHA384_192",
                                                            "KERBEROS_ENCRYPTION_TYPE_ARCFOUR_HMAC_MD5",
                                                            "KERBEROS_ENCRYPTION_TYPE_ARCFOUR_HMAC_MD5_56",
                                                            "KERBEROS_ENCRYPTION_TYPE_ENCTYPE_PK_CROSS",
                                                            "KERBEROS_ENCRYPTION_TYPE_ARCFOUR_MD4",
                                                            "KERBEROS_ENCRYPTION_TYPE_ARCFOUR_HMAC_OLD",
                                                            "KERBEROS_ENCRYPTION_TYPE_ARCFOUR_HMAC_OLD_EXP",
                                                            "KERBEROS_ENCRYPTION_TYPE_DES_CBC_NONE",
                                                            "KERBEROS_ENCRYPTION_TYPE_DES3_CBC_NONE",
                                                            "KERBEROS_ENCRYPTION_TYPE_DES_CFB64_NONE",
                                                            "KERBEROS_ENCRYPTION_TYPE_DES_PCBC_NONE",
                                                            "KERBEROS_ENCRYPTION_TYPE_DIGEST_MD5_NONE",
                                                            "KERBEROS_ENCRYPTION_TYPE_CRAM_MD5_NONE"
                                                        ],
                                                        "description": "enctype:\n * `KERBEROS_ENCRYPTION_TYPE_AES128_CTS_HMAC_SHA1_96` - KERBEROS_ENCRYPTION_TYPE_AES128_CTS_HMAC_SHA1_96,\n * `KERBEROS_ENCRYPTION_TYPE_AES128_CTS_HMAC_SHA256_128` - KERBEROS_ENCRYPTION_TYPE_AES128_CTS_HMAC_SHA256_128,\n * `KERBEROS_ENCRYPTION_TYPE_AES256_CTS_HMAC_SHA1_96` - KERBEROS_ENCRYPTION_TYPE_AES256_CTS_HMAC_SHA1_96,\n * `KERBEROS_ENCRYPTION_TYPE_AES256_CTS_HMAC_SHA384_192` - KERBEROS_ENCRYPTION_TYPE_AES256_CTS_HMAC_SHA384_192,\n * `KERBEROS_ENCRYPTION_TYPE_ARCFOUR_HMAC_MD5` - KERBEROS_ENCRYPTION_TYPE_ARCFOUR_HMAC_MD5,\n * `KERBEROS_ENCRYPTION_TYPE_ARCFOUR_HMAC_MD5_56` - KERBEROS_ENCRYPTION_TYPE_ARCFOUR_HMAC_MD5_56,\n * `KERBEROS_ENCRYPTION_TYPE_ARCFOUR_HMAC_OLD` - KERBEROS_ENCRYPTION_TYPE_ARCFOUR_HMAC_OLD,\n * `KERBEROS_ENCRYPTION_TYPE_ARCFOUR_HMAC_OLD_EXP` - KERBEROS_ENCRYPTION_TYPE_ARCFOUR_HMAC_OLD_EXP,\n * `KERBEROS_ENCRYPTION_TYPE_ARCFOUR_MD4` - KERBEROS_ENCRYPTION_TYPE_ARCFOUR_MD4,\n * `KERBEROS_ENCRYPTION_TYPE_CRAM_MD5_NONE` - KERBEROS_ENCRYPTION_TYPE_CRAM_MD5_NONE,\n * `KERBEROS_ENCRYPTION_TYPE_DES3_CBC_MD5` - KERBEROS_ENCRYPTION_TYPE_DES3_CBC_MD5,\n * `KERBEROS_ENCRYPTION_TYPE_DES3_CBC_NONE` - KERBEROS_ENCRYPTION_TYPE_DES3_CBC_NONE,\n * `KERBEROS_ENCRYPTION_TYPE_DES3_CBC_SHA1` - KERBEROS_ENCRYPTION_TYPE_DES3_CBC_SHA1,\n * `KERBEROS_ENCRYPTION_TYPE_DES_CBC_CRC` - KERBEROS_ENCRYPTION_TYPE_DES_CBC_CRC,\n * `KERBEROS_ENCRYPTION_TYPE_DES_CBC_MD4` - KERBEROS_ENCRYPTION_TYPE_DES_CBC_MD4,\n * `KERBEROS_ENCRYPTION_TYPE_DES_CBC_MD5` - KERBEROS_ENCRYPTION_TYPE_DES_CBC_MD5,\n * `KERBEROS_ENCRYPTION_TYPE_DES_CBC_NONE` - KERBEROS_ENCRYPTION_TYPE_DES_CBC_NONE,\n * `KERBEROS_ENCRYPTION_TYPE_DES_CFB64_NONE` - KERBEROS_ENCRYPTION_TYPE_DES_CFB64_NONE,\n * `KERBEROS_ENCRYPTION_TYPE_DES_PCBC_NONE` - KERBEROS_ENCRYPTION_TYPE_DES_PCBC_NONE,\n * `KERBEROS_ENCRYPTION_TYPE_DIGEST_MD5_NONE` - KERBEROS_ENCRYPTION_TYPE_DIGEST_MD5_NONE,\n * `KERBEROS_ENCRYPTION_TYPE_ENCRYPT_RSA_PRIV` - KERBEROS_ENCRYPTION_TYPE_ENCRYPT_RSA_PRIV,\n * `KERBEROS_ENCRYPTION_TYPE_ENCRYPT_RSA_PUB` - KERBEROS_ENCRYPTION_TYPE_ENCRYPT_RSA_PUB,\n * `KERBEROS_ENCRYPTION_TYPE_ENCTYPE_PK_CROSS` - KERBEROS_ENCRYPTION_TYPE_ENCTYPE_PK_CROSS,\n * `KERBEROS_ENCRYPTION_TYPE_NULL` - KERBEROS_ENCRYPTION_TYPE_NULL,\n * `KERBEROS_ENCRYPTION_TYPE_OLD_DES3_CBC_SHA1` - KERBEROS_ENCRYPTION_TYPE_OLD_DES3_CBC_SHA1,\n * `KERBEROS_ENCRYPTION_TYPE_SIGN_DSA_GENERATE` - KERBEROS_ENCRYPTION_TYPE_SIGN_DSA_GENERATE"
                                                    },
                                                    "key": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "number"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "auth"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        },
                        "application/octet-stream": {
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete the current Kerberos keytab configuration",
                "parameters": [
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success"
                    }
                },
                "tags": [
                    "auth"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/auth/kerberos-settings": {
            "get": {
                "summary": "Get the Kerberos settings",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "use_alt_security_identities_mapping": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "auth"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            },
            "put": {
                "summary": "Set the Kerberos settings",
                "parameters": [
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "use_alt_security_identities_mapping": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "auth"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "use_alt_security_identities_mapping": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/auth/local-username/{username}/related-identities/": {
            "get": {
                "summary": "Given a local username, return all related identities (equivalents in other domains, and containing groups).",
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "description": "The local username to expand.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id_type": {
                                                "type": "string",
                                                "enum": [
                                                    "LOCAL_USER",
                                                    "LOCAL_GROUP",
                                                    "NFS_GID",
                                                    "NFS_UID",
                                                    "SMB_SID",
                                                    "INTERNAL",
                                                    "QUMULO_OPERATOR"
                                                ],
                                                "description": "id_type:\n * `INTERNAL` - INTERNAL,\n * `LOCAL_GROUP` - LOCAL_GROUP,\n * `LOCAL_USER` - LOCAL_USER,\n * `NFS_GID` - NFS_GID,\n * `NFS_UID` - NFS_UID,\n * `QUMULO_OPERATOR` - QUMULO_OPERATOR,\n * `SMB_SID` - SMB_SID"
                                            },
                                            "id_value": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "auth"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/auth/posix-uids/{id}/related-identities/": {
            "get": {
                "summary": "Given a POSIX UID, return all related identities (equivalents in other domains, and containing groups).",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The POSIX UID to expand.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id_type": {
                                                "type": "string",
                                                "enum": [
                                                    "LOCAL_USER",
                                                    "LOCAL_GROUP",
                                                    "NFS_GID",
                                                    "NFS_UID",
                                                    "SMB_SID",
                                                    "INTERNAL",
                                                    "QUMULO_OPERATOR"
                                                ],
                                                "description": "id_type:\n * `INTERNAL` - INTERNAL,\n * `LOCAL_GROUP` - LOCAL_GROUP,\n * `LOCAL_USER` - LOCAL_USER,\n * `NFS_GID` - NFS_GID,\n * `NFS_UID` - NFS_UID,\n * `QUMULO_OPERATOR` - QUMULO_OPERATOR,\n * `SMB_SID` - SMB_SID"
                                            },
                                            "id_value": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "auth"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/auth/posix-gids/{id}/related-identities/": {
            "get": {
                "summary": "Given a POSIX GID, return all related identities (equivalents in other domains, and containing groups).",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The POSIX GID to expand.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id_type": {
                                                "type": "string",
                                                "enum": [
                                                    "LOCAL_USER",
                                                    "LOCAL_GROUP",
                                                    "NFS_GID",
                                                    "NFS_UID",
                                                    "SMB_SID",
                                                    "INTERNAL",
                                                    "QUMULO_OPERATOR"
                                                ],
                                                "description": "id_type:\n * `INTERNAL` - INTERNAL,\n * `LOCAL_GROUP` - LOCAL_GROUP,\n * `LOCAL_USER` - LOCAL_USER,\n * `NFS_GID` - NFS_GID,\n * `NFS_UID` - NFS_UID,\n * `QUMULO_OPERATOR` - QUMULO_OPERATOR,\n * `SMB_SID` - SMB_SID"
                                            },
                                            "id_value": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "auth"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/auth/identities/{id}/attributes": {
            "get": {
                "summary": "Get the identity attributes for an identity.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "URI parameter id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "home_directory": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "auth"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            },
            "put": {
                "summary": "Set the identity attributes for an identity.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "URI parameter id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "home_directory": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "auth"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "home_directory": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete the identity attributes for an identity.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "URI parameter id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success"
                    }
                },
                "tags": [
                    "auth"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/auth/auth-ids/{id}/related-identities/": {
            "get": {
                "summary": "Given an auth_id of any kind, return all related identities (equivalents in other domains, and containing groups).",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The auth_id to expand to all its related identities.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id_type": {
                                                "type": "string",
                                                "enum": [
                                                    "LOCAL_USER",
                                                    "LOCAL_GROUP",
                                                    "NFS_GID",
                                                    "NFS_UID",
                                                    "SMB_SID",
                                                    "INTERNAL",
                                                    "QUMULO_OPERATOR"
                                                ],
                                                "description": "id_type:\n * `INTERNAL` - INTERNAL,\n * `LOCAL_GROUP` - LOCAL_GROUP,\n * `LOCAL_USER` - LOCAL_USER,\n * `NFS_GID` - NFS_GID,\n * `NFS_UID` - NFS_UID,\n * `QUMULO_OPERATOR` - QUMULO_OPERATOR,\n * `SMB_SID` - SMB_SID"
                                            },
                                            "id_value": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "auth"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/auth/sids/{id}/related-identities/": {
            "get": {
                "summary": "Given a Windows NT Security IDentifier, return all related identities (equivalents in other domains, and containing groups).",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Windows NT security identifier to expand.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id_type": {
                                                "type": "string",
                                                "enum": [
                                                    "LOCAL_USER",
                                                    "LOCAL_GROUP",
                                                    "NFS_GID",
                                                    "NFS_UID",
                                                    "SMB_SID",
                                                    "INTERNAL",
                                                    "QUMULO_OPERATOR"
                                                ],
                                                "description": "id_type:\n * `INTERNAL` - INTERNAL,\n * `LOCAL_GROUP` - LOCAL_GROUP,\n * `LOCAL_USER` - LOCAL_USER,\n * `NFS_GID` - NFS_GID,\n * `NFS_UID` - NFS_UID,\n * `QUMULO_OPERATOR` - QUMULO_OPERATOR,\n * `SMB_SID` - SMB_SID"
                                            },
                                            "id_value": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "auth"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v2/cluster/create": {
            "post": {
                "summary": "Form a cluster with the given set of node UUIDs and admin password.",
                "parameters": [],
                "responses": {
                    "202": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "monitor_uri": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "cluster"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "eula_accepted": {
                                        "type": "boolean"
                                    },
                                    "cluster_name": {
                                        "type": "string"
                                    },
                                    "node_uuids": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "node_ips": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "admin_password": {
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "host_instance_id": {
                                        "type": "string"
                                    },
                                    "blocks_per_stripe": {
                                        "type": "number"
                                    },
                                    "max_drive_failures": {
                                        "type": "number"
                                    },
                                    "max_node_failures": {
                                        "type": "number"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/cluster/calculate-supported-protection-info": {
            "post": {
                "summary": "Returns list of supported data protection stripe configuration(s). This includes the stripe width and usable capacity using that width. For use with unconfigured nodes only.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "supported_configs": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "blocks_per_stripe": {
                                                        "type": "number"
                                                    },
                                                    "max_drive_failures": {
                                                        "type": "number"
                                                    },
                                                    "max_node_failures": {
                                                        "type": "number"
                                                    },
                                                    "max_cluster_node_count": {
                                                        "type": "number"
                                                    },
                                                    "usable_capacity_in_bytes": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "cluster"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "node_uuids": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "node_ips": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/cluster/protection/status": {
            "get": {
                "summary": "Gets detailed status information for the data protection of the cluster.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "blocks_per_stripe": {
                                            "type": "number"
                                        },
                                        "data_blocks_per_stripe": {
                                            "type": "number"
                                        },
                                        "protection_system_type": {
                                            "type": "string"
                                        },
                                        "max_node_failures": {
                                            "type": "number"
                                        },
                                        "max_drive_failures": {
                                            "type": "number"
                                        },
                                        "max_drive_spares": {
                                            "type": "number"
                                        },
                                        "remaining_node_failures": {
                                            "type": "number"
                                        },
                                        "remaining_drive_failures": {
                                            "type": "number"
                                        },
                                        "pending_configuration": {
                                            "type": "object",
                                            "properties": {
                                                "blocks_per_stripe": {
                                                    "type": "number"
                                                },
                                                "max_drive_failures": {
                                                    "type": "number"
                                                },
                                                "max_node_failures": {
                                                    "type": "number"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "cluster"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/cluster/calculate-node-add-capacity": {
            "post": {
                "summary": "Calculate changes to cluster usable capacity from a proposed node-add operation.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "new_usable_capacity_in_bytes": {
                                            "type": "string"
                                        },
                                        "increase_from_current_usable_capacity_in_bytes": {
                                            "type": "string"
                                        },
                                        "node_add_capacity_optimized_for_fault_tolerance": {
                                            "type": "object",
                                            "properties": {
                                                "new_usable_capacity_in_bytes": {
                                                    "type": "string"
                                                },
                                                "increase_from_current_usable_capacity_in_bytes": {
                                                    "type": "string"
                                                },
                                                "max_node_failures": {
                                                    "type": "number"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "cluster"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "node_uuids": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "node_ips": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/cluster/nodes/": {
            "get": {
                "summary": "List nodes.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "number"
                                            },
                                            "node_status": {
                                                "type": "string"
                                            },
                                            "node_name": {
                                                "type": "string"
                                            },
                                            "uuid": {
                                                "type": "string"
                                            },
                                            "label": {
                                                "type": "string"
                                            },
                                            "model_number": {
                                                "type": "string"
                                            },
                                            "serial_number": {
                                                "type": "string"
                                            },
                                            "mac_address": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "cluster"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            },
            "post": {
                "summary": "Add one or more unconfigured nodes with the given node uuids and admin password. NOTE: This API will return status code 405 if you call this on an unconfigured node.",
                "parameters": [],
                "responses": {
                    "202": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "monitor_uri": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "cluster"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "node_uuids": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "node_ips": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "optimize_node_fault_tolerance_over_usable_capacity": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/cluster/nodes/chassis/": {
            "get": {
                "summary": "List the status of the chassis for nodes.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "number"
                                            },
                                            "light_visible": {
                                                "type": "boolean"
                                            },
                                            "psu_statuses": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string"
                                                        },
                                                        "state": {
                                                            "type": "string",
                                                            "enum": [
                                                                "UNKNOWN",
                                                                "MISSING",
                                                                "NO AC",
                                                                "GOOD"
                                                            ],
                                                            "description": "state:\n * `GOOD` - PSU_STATE_GOOD,\n * `MISSING` - PSU_STATE_MISSING,\n * `NO AC` - PSU_STATE_NO_AC,\n * `UNKNOWN` - PSU_STATE_UNKNOWN"
                                                        },
                                                        "location": {
                                                            "type": "string",
                                                            "enum": [
                                                                "right",
                                                                "left",
                                                                "top",
                                                                "bottom"
                                                            ],
                                                            "description": "location:\n * `bottom` - PSU_LOCATION_BOTTOM,\n * `left` - PSU_LOCATION_LEFT,\n * `right` - PSU_LOCATION_RIGHT,\n * `top` - PSU_LOCATION_TOP"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "cluster"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/cluster/restriper/status": {
            "get": {
                "summary": "Get current status of restriper, including data protection status and current restripe phase (if running).",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string"
                                        },
                                        "data_at_risk": {
                                            "type": "boolean"
                                        },
                                        "blocked_reason": {
                                            "type": "string"
                                        },
                                        "phase": {
                                            "type": "string"
                                        },
                                        "elapsed_seconds": {
                                            "type": "number"
                                        },
                                        "estimated_seconds_left": {
                                            "type": "number"
                                        },
                                        "percent_complete": {
                                            "type": "number"
                                        },
                                        "coordinator_node": {
                                            "type": "number"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "cluster"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/cluster/nodes/{id}": {
            "get": {
                "summary": "Retrieve node-specific info, such as serial number, mac address, uuid, etc",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The unique ID of the node",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "number"
                                        },
                                        "node_status": {
                                            "type": "string"
                                        },
                                        "node_name": {
                                            "type": "string"
                                        },
                                        "uuid": {
                                            "type": "string"
                                        },
                                        "label": {
                                            "type": "string"
                                        },
                                        "model_number": {
                                            "type": "string"
                                        },
                                        "serial_number": {
                                            "type": "string"
                                        },
                                        "mac_address": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "cluster"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/cluster/nodes/{id}/identify": {
            "post": {
                "summary": "Turn the identification light on the node on or off. There may be a slight delay for the change to take effect.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The unique ID of the node",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success"
                    }
                },
                "tags": [
                    "cluster"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "light_visible": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/cluster/nodes/{id}/chassis": {
            "get": {
                "summary": "List the status of the chassis for a node. In particular, it gives the node_id and status of the identifier light.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The unique ID of the node",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "number"
                                        },
                                        "light_visible": {
                                            "type": "boolean"
                                        },
                                        "psu_statuses": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "state": {
                                                        "type": "string",
                                                        "enum": [
                                                            "UNKNOWN",
                                                            "MISSING",
                                                            "NO AC",
                                                            "GOOD"
                                                        ],
                                                        "description": "state:\n * `GOOD` - PSU_STATE_GOOD,\n * `MISSING` - PSU_STATE_MISSING,\n * `NO AC` - PSU_STATE_NO_AC,\n * `UNKNOWN` - PSU_STATE_UNKNOWN"
                                                    },
                                                    "location": {
                                                        "type": "string",
                                                        "enum": [
                                                            "right",
                                                            "left",
                                                            "top",
                                                            "bottom"
                                                        ],
                                                        "description": "location:\n * `bottom` - PSU_LOCATION_BOTTOM,\n * `left` - PSU_LOCATION_LEFT,\n * `right` - PSU_LOCATION_RIGHT,\n * `top` - PSU_LOCATION_TOP"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "cluster"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/cluster/settings": {
            "get": {
                "summary": "Returns cluster settings.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "cluster_name": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "cluster"
                ]
            },
            "put": {
                "summary": "Set the name of the cluster",
                "parameters": [
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "cluster_name": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "cluster"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "cluster_name": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/cluster/settings/ssl": {
            "put": {
                "summary": "Set the SSL certificates used by the cluster. Mostly used for HTTP traffic.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success"
                    }
                },
                "tags": [
                    "cluster"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "certificate": {
                                        "type": "string"
                                    },
                                    "private_key": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/cluster/settings/ssl/certificate": {
            "put": {
                "summary": "Set the SSL certificates used by the cluster to authenticate its own identity.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success"
                    }
                },
                "tags": [
                    "cluster"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "certificate": {
                                        "type": "string"
                                    },
                                    "private_key": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/cluster/settings/ssl/ca-certificate": {
            "put": {
                "summary": "Set the SSL certificate authority the cluster trusts when authenticating outbound connections.",
                "parameters": [
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "ca_certificate": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "cluster"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "ca_certificate": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Get the SSL certificate authority the cluster trusts when authenticating outbound connections.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "ca_certificate": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "cluster"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            },
            "delete": {
                "summary": "Delete the SSL certificate authority the cluster trusts when authenticating outbound connections.",
                "parameters": [
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success"
                    }
                },
                "tags": [
                    "cluster"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/cluster/slots/": {
            "get": {
                "summary": "List slots.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "node_id": {
                                                "type": "number"
                                            },
                                            "slot": {
                                                "type": "number"
                                            },
                                            "state": {
                                                "type": "string",
                                                "enum": [
                                                    "empty",
                                                    "healthy",
                                                    "missing",
                                                    "dead",
                                                    "wrong_node",
                                                    "wrong_cluster",
                                                    "wrong_version"
                                                ],
                                                "description": "Disk slot state (healthy, dead, empty):\n * `dead` - API_DEVICE_UI_STATE_DEAD,\n * `empty` - API_DEVICE_UI_STATE_EMPTY,\n * `healthy` - API_DEVICE_UI_STATE_HEALTHY,\n * `missing` - API_DEVICE_UI_STATE_MISSING,\n * `wrong_cluster` - API_DEVICE_UI_STATE_WRONG_CLUSTER,\n * `wrong_node` - API_DEVICE_UI_STATE_WRONG_NODE,\n * `wrong_version` - API_DEVICE_UI_STATE_WRONG_VERSION"
                                            },
                                            "slot_type": {
                                                "type": "string",
                                                "enum": [
                                                    "SSD",
                                                    "HDD",
                                                    "Premium Page Blob",
                                                    "Standard Page Blob"
                                                ],
                                                "description": "Device type for slot (SSD, HDD):\n * `HDD` - API_DEVICE_SLOT_TYPE_SPINNING_DISK,\n * `Premium Page Blob` - API_DEVICE_SLOT_TYPE_PREMIUM_PAGE_BLOB,\n * `SSD` - API_DEVICE_SLOT_TYPE_SSD,\n * `Standard Page Blob` - API_DEVICE_SLOT_TYPE_STANDARD_PAGE_BLOB"
                                            },
                                            "disk_type": {
                                                "type": "string"
                                            },
                                            "disk_model": {
                                                "type": "string"
                                            },
                                            "disk_serial_number": {
                                                "type": "string"
                                            },
                                            "capacity": {
                                                "type": "string"
                                            },
                                            "raw_capacity": {
                                                "type": "string"
                                            },
                                            "minimum_raw_capacity": {
                                                "type": "string"
                                            },
                                            "high_endurance": {
                                                "type": "boolean"
                                            },
                                            "drive_bay": {
                                                "type": "string"
                                            },
                                            "led_pattern": {
                                                "type": "string",
                                                "enum": [
                                                    "LED_PATTERN_NORMAL",
                                                    "LED_PATTERN_LOCATE",
                                                    "LED_PATTERN_FAILURE"
                                                ],
                                                "description": "Current state of the slot's LED:\n * `LED_PATTERN_FAILURE` - failure,\n * `LED_PATTERN_LOCATE` - locate,\n * `LED_PATTERN_NORMAL` - normal"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "cluster"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/cluster/slots/{id}": {
            "get": {
                "summary": "Retrieve info about the disk slot, such as its capacity, type, model, etc.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The unique ID of the disk slot",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "node_id": {
                                            "type": "number"
                                        },
                                        "slot": {
                                            "type": "number"
                                        },
                                        "state": {
                                            "type": "string",
                                            "enum": [
                                                "empty",
                                                "healthy",
                                                "missing",
                                                "dead",
                                                "wrong_node",
                                                "wrong_cluster",
                                                "wrong_version"
                                            ],
                                            "description": "Disk slot state (healthy, dead, empty):\n * `dead` - API_DEVICE_UI_STATE_DEAD,\n * `empty` - API_DEVICE_UI_STATE_EMPTY,\n * `healthy` - API_DEVICE_UI_STATE_HEALTHY,\n * `missing` - API_DEVICE_UI_STATE_MISSING,\n * `wrong_cluster` - API_DEVICE_UI_STATE_WRONG_CLUSTER,\n * `wrong_node` - API_DEVICE_UI_STATE_WRONG_NODE,\n * `wrong_version` - API_DEVICE_UI_STATE_WRONG_VERSION"
                                        },
                                        "slot_type": {
                                            "type": "string",
                                            "enum": [
                                                "SSD",
                                                "HDD",
                                                "Premium Page Blob",
                                                "Standard Page Blob"
                                            ],
                                            "description": "Device type for slot (SSD, HDD):\n * `HDD` - API_DEVICE_SLOT_TYPE_SPINNING_DISK,\n * `Premium Page Blob` - API_DEVICE_SLOT_TYPE_PREMIUM_PAGE_BLOB,\n * `SSD` - API_DEVICE_SLOT_TYPE_SSD,\n * `Standard Page Blob` - API_DEVICE_SLOT_TYPE_STANDARD_PAGE_BLOB"
                                        },
                                        "disk_type": {
                                            "type": "string"
                                        },
                                        "disk_model": {
                                            "type": "string"
                                        },
                                        "disk_serial_number": {
                                            "type": "string"
                                        },
                                        "capacity": {
                                            "type": "string"
                                        },
                                        "raw_capacity": {
                                            "type": "string"
                                        },
                                        "minimum_raw_capacity": {
                                            "type": "string"
                                        },
                                        "high_endurance": {
                                            "type": "boolean"
                                        },
                                        "drive_bay": {
                                            "type": "string"
                                        },
                                        "led_pattern": {
                                            "type": "string",
                                            "enum": [
                                                "LED_PATTERN_NORMAL",
                                                "LED_PATTERN_LOCATE",
                                                "LED_PATTERN_FAILURE"
                                            ],
                                            "description": "Current state of the slot's LED:\n * `LED_PATTERN_FAILURE` - failure,\n * `LED_PATTERN_LOCATE` - locate,\n * `LED_PATTERN_NORMAL` - normal"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "cluster"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            },
            "patch": {
                "summary": "Control the slot's locate LED.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The unique ID of the disk slot",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "node_id": {
                                            "type": "number"
                                        },
                                        "slot": {
                                            "type": "number"
                                        },
                                        "state": {
                                            "type": "string",
                                            "enum": [
                                                "empty",
                                                "healthy",
                                                "missing",
                                                "dead",
                                                "wrong_node",
                                                "wrong_cluster",
                                                "wrong_version"
                                            ],
                                            "description": "Disk slot state (healthy, dead, empty):\n * `dead` - API_DEVICE_UI_STATE_DEAD,\n * `empty` - API_DEVICE_UI_STATE_EMPTY,\n * `healthy` - API_DEVICE_UI_STATE_HEALTHY,\n * `missing` - API_DEVICE_UI_STATE_MISSING,\n * `wrong_cluster` - API_DEVICE_UI_STATE_WRONG_CLUSTER,\n * `wrong_node` - API_DEVICE_UI_STATE_WRONG_NODE,\n * `wrong_version` - API_DEVICE_UI_STATE_WRONG_VERSION"
                                        },
                                        "slot_type": {
                                            "type": "string",
                                            "enum": [
                                                "SSD",
                                                "HDD",
                                                "Premium Page Blob",
                                                "Standard Page Blob"
                                            ],
                                            "description": "Device type for slot (SSD, HDD):\n * `HDD` - API_DEVICE_SLOT_TYPE_SPINNING_DISK,\n * `Premium Page Blob` - API_DEVICE_SLOT_TYPE_PREMIUM_PAGE_BLOB,\n * `SSD` - API_DEVICE_SLOT_TYPE_SSD,\n * `Standard Page Blob` - API_DEVICE_SLOT_TYPE_STANDARD_PAGE_BLOB"
                                        },
                                        "disk_type": {
                                            "type": "string"
                                        },
                                        "disk_model": {
                                            "type": "string"
                                        },
                                        "disk_serial_number": {
                                            "type": "string"
                                        },
                                        "capacity": {
                                            "type": "string"
                                        },
                                        "raw_capacity": {
                                            "type": "string"
                                        },
                                        "minimum_raw_capacity": {
                                            "type": "string"
                                        },
                                        "high_endurance": {
                                            "type": "boolean"
                                        },
                                        "drive_bay": {
                                            "type": "string"
                                        },
                                        "led_pattern": {
                                            "type": "string",
                                            "enum": [
                                                "LED_PATTERN_NORMAL",
                                                "LED_PATTERN_LOCATE",
                                                "LED_PATTERN_FAILURE"
                                            ],
                                            "description": "Current state of the slot's LED:\n * `LED_PATTERN_FAILURE` - failure,\n * `LED_PATTERN_LOCATE` - locate,\n * `LED_PATTERN_NORMAL` - normal"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "cluster"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "led_pattern": {
                                        "type": "string",
                                        "enum": [
                                            "LED_PATTERN_NORMAL",
                                            "LED_PATTERN_LOCATE",
                                            "LED_PATTERN_FAILURE"
                                        ],
                                        "description": "led_pattern:\n * `LED_PATTERN_FAILURE` - failure,\n * `LED_PATTERN_LOCATE` - locate,\n * `LED_PATTERN_NORMAL` - normal"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/node/state": {
            "get": {
                "summary": "Retrieves node state of the node that the call was made to.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "node_id": {
                                            "type": "number"
                                        },
                                        "state": {
                                            "type": "string",
                                            "enum": [
                                                "UNCONFIGURED",
                                                "STOPPED",
                                                "PAUSED",
                                                "ACTIVE"
                                            ],
                                            "description": "The state of the node:\n * `ACTIVE` - Configured node part of active quorum,\n * `PAUSED` - Configured node part of paused quorum,\n * `STOPPED` - Configured node not part of quorum,\n * `UNCONFIGURED` - Unconfigured node"
                                        },
                                        "cluster_id": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "node"
                ]
            }
        },
        "/v1/dns/resolve/": {
            "post": {
                "summary": "Deprecated. Use /v1/dns/resolve-ips-to-names instead.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "ip_address": {
                                                "type": "string"
                                            },
                                            "hostname": {
                                                "type": "string"
                                            },
                                            "result": {
                                                "type": "string",
                                                "enum": [
                                                    "OK",
                                                    "ERROR",
                                                    "NOT_FOUND",
                                                    "TIMEOUT"
                                                ],
                                                "description": "The status of the resolution:\n * `ERROR` - An error occurred while resolving the hostname,\n * `NOT_FOUND` - No hostname was found for the IP address,\n * `OK` - The hostname for the IP address was successfully resolved,\n * `TIMEOUT` - Timeout occurred before this address was resolved"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "dns"
                ],
                "deprecated": true,
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/dns/lookup-override-config": {
            "get": {
                "summary": "List the DNS lookup overrides configured on the cluster. These rules override any lookup results from the configured DNS servers and serve as static mappings between IP address and hostname",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "lookup_overrides": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "ip_address": {
                                                        "type": "string"
                                                    },
                                                    "aliases": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "dns"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            },
            "put": {
                "summary": "Overwrite the DNS lookup overrides configured on the cluster. These rules override any lookup results from the configured DNS servers and serve as static mappings between IP address and hostname",
                "parameters": [
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "lookup_overrides": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "ip_address": {
                                                        "type": "string"
                                                    },
                                                    "aliases": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "dns"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "lookup_overrides": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "ip_address": {
                                                    "type": "string"
                                                },
                                                "aliases": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/dns/resolve-ips-to-names": {
            "post": {
                "summary": "Resolve a list of IP addresses to canonical hostnames.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "ip_address": {
                                                "type": "string"
                                            },
                                            "hostname": {
                                                "type": "string"
                                            },
                                            "result": {
                                                "type": "string",
                                                "enum": [
                                                    "OK",
                                                    "ERROR",
                                                    "NOT_FOUND",
                                                    "TIMEOUT"
                                                ],
                                                "description": "The status of the resolution:\n * `ERROR` - An error occurred while resolving the hostname,\n * `NOT_FOUND` - No hostname was found for the IP address,\n * `OK` - The hostname for the IP address was successfully resolved,\n * `TIMEOUT` - Timeout occurred before this address was resolved"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "dns"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/dns/resolve-names-to-ips": {
            "post": {
                "summary": "Resolve a list of hostnames to their set of associated IP addresses.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "hostname": {
                                                "type": "string"
                                            },
                                            "ip_addresses": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            },
                                            "result": {
                                                "type": "string",
                                                "enum": [
                                                    "OK",
                                                    "ERROR",
                                                    "NOT_FOUND",
                                                    "TIMEOUT"
                                                ],
                                                "description": "The status of the resolution:\n * `ERROR` - An error occurred while resolving the hostname,\n * `NOT_FOUND` - No hostname was found for the IP address,\n * `OK` - The hostname for the IP address was successfully resolved,\n * `TIMEOUT` - Timeout occurred before this address was resolved"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "dns"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/files/quotas/": {
            "get": {
                "summary": "List all set directory quotas.",
                "parameters": [
                    {
                        "name": "after",
                        "in": "query",
                        "description": "Return entries after the given key (keys are returned in the paging object)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Return no more than this many entries; the system may choose a smaller limit.",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "quotas": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string"
                                                    },
                                                    "limit": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "files"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            },
            "post": {
                "summary": "Add a directory quota.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "limit": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "files"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string"
                                    },
                                    "limit": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/files/quotas/status/": {
            "get": {
                "summary": "List all directory quotas and their corresponding directories' paths and cumulative sizes.",
                "parameters": [
                    {
                        "name": "after",
                        "in": "query",
                        "description": "Return entries after the given key (keys are returned in the paging object)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Return no more than this many entries; the system may choose a smaller limit.",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "quotas": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string"
                                                    },
                                                    "path": {
                                                        "type": "string"
                                                    },
                                                    "limit": {
                                                        "type": "string"
                                                    },
                                                    "capacity_usage": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "files"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/files/quotas/status/{id}": {
            "get": {
                "summary": "Get the directory quota for a directory, its limit in bytes, and current capacity usage.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Directory ID (uint64)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "path": {
                                            "type": "string"
                                        },
                                        "limit": {
                                            "type": "string"
                                        },
                                        "capacity_usage": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "files"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/files/quotas/{id}": {
            "get": {
                "summary": "Get the directory quota for a directory and its limit in bytes",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Directory ID (uint64)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "limit": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "files"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            },
            "put": {
                "summary": "Modify the quota for a given directory.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Directory ID (uint64)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "limit": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "files"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string"
                                    },
                                    "limit": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete the quota for a given directory.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Directory ID (uint64)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success"
                    }
                },
                "tags": [
                    "files"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/encryption/rotate-keys": {
            "post": {
                "summary": "Rotate the encryption at rest keys.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success"
                    }
                },
                "tags": [
                    "encryption"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/encryption/status": {
            "get": {
                "summary": "View the status of encryption at rest.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "Encrypted",
                                                "Not Encrypted"
                                            ],
                                            "description": "Whether or not encryption at rest is enabled:\n * `Encrypted` - ENCRYPTION_STATUS_ENCRYPTED,\n * `Not Encrypted` - ENCRYPTION_STATUS_NOT_ENCRYPTED"
                                        },
                                        "last_key_rotation_time": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "encryption"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v0/ftp/settings": {
            "get": {
                "summary": "Retrieve the current FTP server settings. To see server status on all nodes, use Get FTP Server Status.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "enabled": {
                                            "type": "boolean"
                                        },
                                        "check_remote_host": {
                                            "type": "boolean"
                                        },
                                        "log_operations": {
                                            "type": "boolean"
                                        },
                                        "chroot_users": {
                                            "type": "boolean"
                                        },
                                        "allow_unencrypted_connections": {
                                            "type": "boolean"
                                        },
                                        "expand_wildcards": {
                                            "type": "boolean"
                                        },
                                        "anonymous_user": {
                                            "type": "object",
                                            "properties": {
                                                "id_type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "LOCAL_USER",
                                                        "LOCAL_GROUP",
                                                        "NFS_GID",
                                                        "NFS_UID",
                                                        "SMB_SID",
                                                        "INTERNAL",
                                                        "QUMULO_OPERATOR"
                                                    ],
                                                    "description": "id_type:\n * `INTERNAL` - INTERNAL,\n * `LOCAL_GROUP` - LOCAL_GROUP,\n * `LOCAL_USER` - LOCAL_USER,\n * `NFS_GID` - NFS_GID,\n * `NFS_UID` - NFS_UID,\n * `QUMULO_OPERATOR` - QUMULO_OPERATOR,\n * `SMB_SID` - SMB_SID"
                                                },
                                                "id_value": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "greeting": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "ftp"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            },
            "put": {
                "summary": "Modify the current FTP server settings. To see server status on all nodes, use Get FTP Server Status.",
                "parameters": [
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "enabled": {
                                            "type": "boolean"
                                        },
                                        "check_remote_host": {
                                            "type": "boolean"
                                        },
                                        "log_operations": {
                                            "type": "boolean"
                                        },
                                        "chroot_users": {
                                            "type": "boolean"
                                        },
                                        "allow_unencrypted_connections": {
                                            "type": "boolean"
                                        },
                                        "expand_wildcards": {
                                            "type": "boolean"
                                        },
                                        "anonymous_user": {
                                            "type": "object",
                                            "properties": {
                                                "id_type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "LOCAL_USER",
                                                        "LOCAL_GROUP",
                                                        "NFS_GID",
                                                        "NFS_UID",
                                                        "SMB_SID",
                                                        "INTERNAL",
                                                        "QUMULO_OPERATOR"
                                                    ],
                                                    "description": "id_type:\n * `INTERNAL` - INTERNAL,\n * `LOCAL_GROUP` - LOCAL_GROUP,\n * `LOCAL_USER` - LOCAL_USER,\n * `NFS_GID` - NFS_GID,\n * `NFS_UID` - NFS_UID,\n * `QUMULO_OPERATOR` - QUMULO_OPERATOR,\n * `SMB_SID` - SMB_SID"
                                                },
                                                "id_value": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "greeting": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "ftp"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "enabled": {
                                        "type": "boolean"
                                    },
                                    "check_remote_host": {
                                        "type": "boolean"
                                    },
                                    "log_operations": {
                                        "type": "boolean"
                                    },
                                    "chroot_users": {
                                        "type": "boolean"
                                    },
                                    "allow_unencrypted_connections": {
                                        "type": "boolean"
                                    },
                                    "expand_wildcards": {
                                        "type": "boolean"
                                    },
                                    "anonymous_user": {
                                        "type": "object",
                                        "properties": {
                                            "id_type": {
                                                "type": "string",
                                                "enum": [
                                                    "LOCAL_USER",
                                                    "LOCAL_GROUP",
                                                    "NFS_GID",
                                                    "NFS_UID",
                                                    "SMB_SID",
                                                    "INTERNAL",
                                                    "QUMULO_OPERATOR"
                                                ],
                                                "description": "id_type:\n * `INTERNAL` - INTERNAL,\n * `LOCAL_GROUP` - LOCAL_GROUP,\n * `LOCAL_USER` - LOCAL_USER,\n * `NFS_GID` - NFS_GID,\n * `NFS_UID` - NFS_UID,\n * `QUMULO_OPERATOR` - QUMULO_OPERATOR,\n * `SMB_SID` - SMB_SID"
                                            },
                                            "id_value": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "greeting": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Modify the current FTP server settings. To see server status on all nodes, use Get FTP Server Status.",
                "parameters": [
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "enabled": {
                                            "type": "boolean"
                                        },
                                        "check_remote_host": {
                                            "type": "boolean"
                                        },
                                        "log_operations": {
                                            "type": "boolean"
                                        },
                                        "chroot_users": {
                                            "type": "boolean"
                                        },
                                        "allow_unencrypted_connections": {
                                            "type": "boolean"
                                        },
                                        "expand_wildcards": {
                                            "type": "boolean"
                                        },
                                        "anonymous_user": {
                                            "type": "object",
                                            "properties": {
                                                "id_type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "LOCAL_USER",
                                                        "LOCAL_GROUP",
                                                        "NFS_GID",
                                                        "NFS_UID",
                                                        "SMB_SID",
                                                        "INTERNAL",
                                                        "QUMULO_OPERATOR"
                                                    ],
                                                    "description": "id_type:\n * `INTERNAL` - INTERNAL,\n * `LOCAL_GROUP` - LOCAL_GROUP,\n * `LOCAL_USER` - LOCAL_USER,\n * `NFS_GID` - NFS_GID,\n * `NFS_UID` - NFS_UID,\n * `QUMULO_OPERATOR` - QUMULO_OPERATOR,\n * `SMB_SID` - SMB_SID"
                                                },
                                                "id_value": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "greeting": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "ftp"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "enabled": {
                                        "type": "boolean"
                                    },
                                    "check_remote_host": {
                                        "type": "boolean"
                                    },
                                    "log_operations": {
                                        "type": "boolean"
                                    },
                                    "chroot_users": {
                                        "type": "boolean"
                                    },
                                    "allow_unencrypted_connections": {
                                        "type": "boolean"
                                    },
                                    "expand_wildcards": {
                                        "type": "boolean"
                                    },
                                    "anonymous_user": {
                                        "type": "object",
                                        "properties": {
                                            "id_type": {
                                                "type": "string",
                                                "enum": [
                                                    "LOCAL_USER",
                                                    "LOCAL_GROUP",
                                                    "NFS_GID",
                                                    "NFS_UID",
                                                    "SMB_SID",
                                                    "INTERNAL",
                                                    "QUMULO_OPERATOR"
                                                ],
                                                "description": "id_type:\n * `INTERNAL` - INTERNAL,\n * `LOCAL_GROUP` - LOCAL_GROUP,\n * `LOCAL_USER` - LOCAL_USER,\n * `NFS_GID` - NFS_GID,\n * `NFS_UID` - NFS_UID,\n * `QUMULO_OPERATOR` - QUMULO_OPERATOR,\n * `SMB_SID` - SMB_SID"
                                            },
                                            "id_value": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "greeting": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v0/ftp/status": {
            "get": {
                "summary": "Retrieve the current FTP server settings and the status of the server on each node.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "settings": {
                                            "type": "object",
                                            "properties": {
                                                "enabled": {
                                                    "type": "boolean"
                                                },
                                                "check_remote_host": {
                                                    "type": "boolean"
                                                },
                                                "log_operations": {
                                                    "type": "boolean"
                                                },
                                                "chroot_users": {
                                                    "type": "boolean"
                                                },
                                                "allow_unencrypted_connections": {
                                                    "type": "boolean"
                                                },
                                                "expand_wildcards": {
                                                    "type": "boolean"
                                                },
                                                "anonymous_user": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id_type": {
                                                            "type": "string",
                                                            "enum": [
                                                                "LOCAL_USER",
                                                                "LOCAL_GROUP",
                                                                "NFS_GID",
                                                                "NFS_UID",
                                                                "SMB_SID",
                                                                "INTERNAL",
                                                                "QUMULO_OPERATOR"
                                                            ],
                                                            "description": "id_type:\n * `INTERNAL` - INTERNAL,\n * `LOCAL_GROUP` - LOCAL_GROUP,\n * `LOCAL_USER` - LOCAL_USER,\n * `NFS_GID` - NFS_GID,\n * `NFS_UID` - NFS_UID,\n * `QUMULO_OPERATOR` - QUMULO_OPERATOR,\n * `SMB_SID` - SMB_SID"
                                                        },
                                                        "id_value": {
                                                            "type": "string"
                                                        }
                                                    }
                                                },
                                                "greeting": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "statuses": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "node_id": {
                                                        "type": "number"
                                                    },
                                                    "status": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "ftp"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/file-system": {
            "get": {
                "summary": "Retrieve general file system statistics.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "block_size_bytes": {
                                            "type": "number"
                                        },
                                        "total_size_bytes": {
                                            "type": "string"
                                        },
                                        "free_size_bytes": {
                                            "type": "string"
                                        },
                                        "snapshot_size_bytes": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "file-system"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/file-system/settings/permissions": {
            "put": {
                "summary": "Set permissions settings.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "mode": {
                                            "type": "string",
                                            "enum": [
                                                "NATIVE",
                                                "_DEPRECATED_MERGED_V1",
                                                "CROSS_PROTOCOL"
                                            ],
                                            "description": "mode:\n * `CROSS_PROTOCOL` - CROSS_PROTOCOL,\n * `NATIVE` - NATIVE,\n * `_DEPRECATED_MERGED_V1` - _DEPRECATED_MERGED_V1"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "file-system"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "mode": {
                                        "type": "string",
                                        "enum": [
                                            "NATIVE",
                                            "_DEPRECATED_MERGED_V1",
                                            "CROSS_PROTOCOL"
                                        ],
                                        "description": "mode:\n * `CROSS_PROTOCOL` - CROSS_PROTOCOL,\n * `NATIVE` - NATIVE,\n * `_DEPRECATED_MERGED_V1` - _DEPRECATED_MERGED_V1"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Get permissions settings.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "mode": {
                                            "type": "string",
                                            "enum": [
                                                "NATIVE",
                                                "_DEPRECATED_MERGED_V1",
                                                "CROSS_PROTOCOL"
                                            ],
                                            "description": "mode:\n * `CROSS_PROTOCOL` - CROSS_PROTOCOL,\n * `NATIVE` - NATIVE,\n * `_DEPRECATED_MERGED_V1` - _DEPRECATED_MERGED_V1"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "file-system"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/file-system/settings/atime": {
            "put": {
                "summary": "Set atime-related settings.",
                "parameters": [
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "enabled": {
                                            "type": "boolean"
                                        },
                                        "granularity": {
                                            "type": "string",
                                            "enum": [
                                                "HOUR",
                                                "DAY",
                                                "WEEK"
                                            ],
                                            "description": "Granularity for atime updates (HOUR/DAY/WEEEK):\n * `DAY` - ATIME_GRANULARITY_DAY,\n * `HOUR` - ATIME_GRANULARITY_HOUR,\n * `WEEK` - ATIME_GRANULARITY_WEEK"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "file-system"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "enabled": {
                                        "type": "boolean"
                                    },
                                    "granularity": {
                                        "type": "string",
                                        "enum": [
                                            "HOUR",
                                            "DAY",
                                            "WEEK"
                                        ],
                                        "description": "Granularity for atime updates (HOUR/DAY/WEEEK):\n * `DAY` - ATIME_GRANULARITY_DAY,\n * `HOUR` - ATIME_GRANULARITY_HOUR,\n * `WEEK` - ATIME_GRANULARITY_WEEK"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Update atime-related settings.",
                "parameters": [
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "enabled": {
                                            "type": "boolean"
                                        },
                                        "granularity": {
                                            "type": "string",
                                            "enum": [
                                                "HOUR",
                                                "DAY",
                                                "WEEK"
                                            ],
                                            "description": "Granularity for atime updates (HOUR/DAY/WEEEK):\n * `DAY` - ATIME_GRANULARITY_DAY,\n * `HOUR` - ATIME_GRANULARITY_HOUR,\n * `WEEK` - ATIME_GRANULARITY_WEEK"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "file-system"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "enabled": {
                                        "type": "boolean"
                                    },
                                    "granularity": {
                                        "type": "string",
                                        "enum": [
                                            "HOUR",
                                            "DAY",
                                            "WEEK"
                                        ],
                                        "description": "Granularity for atime updates (HOUR/DAY/WEEEK):\n * `DAY` - ATIME_GRANULARITY_DAY,\n * `HOUR` - ATIME_GRANULARITY_HOUR,\n * `WEEK` - ATIME_GRANULARITY_WEEK"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Get atime-related settings.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "enabled": {
                                            "type": "boolean"
                                        },
                                        "granularity": {
                                            "type": "string",
                                            "enum": [
                                                "HOUR",
                                                "DAY",
                                                "WEEK"
                                            ],
                                            "description": "Granularity for atime updates (HOUR/DAY/WEEEK):\n * `DAY` - ATIME_GRANULARITY_DAY,\n * `HOUR` - ATIME_GRANULARITY_HOUR,\n * `WEEK` - ATIME_GRANULARITY_WEEK"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "file-system"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/files/resolve": {
            "post": {
                "summary": "Return the full paths for each specified file ID. If a file has more than one path (due to hard links) a canonical path is chosen.",
                "parameters": [
                    {
                        "name": "snapshot",
                        "in": "query",
                        "description": "The snapshot ID that specifies the version of the files to resolve all the ids with. If not specified, use the head version.",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "path": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "files"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/files/locks/nlm/byte-range/": {
            "get": {
                "summary": "Return a list of all granted file locks that the specified machine owns.",
                "parameters": [
                    {
                        "name": "owner_name",
                        "in": "query",
                        "description": "The lock owner's name. The client provides the name. Typically, it is the client hostname.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "owner_address",
                        "in": "query",
                        "description": "The lock owner's address. This is the IP address of the machine that acquires the lock. If the machine's IP address changes, any existing lock entries are still listed under the old address.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "Return entries after the given key (keys are returned in the paging object)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Return no more than this many entries; the system may choose a smaller limit.",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "grants": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "file_id": {
                                                        "type": "string"
                                                    },
                                                    "stream_id": {
                                                        "type": "string"
                                                    },
                                                    "snapshot_id": {
                                                        "type": "string"
                                                    },
                                                    "mode": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "enum": [
                                                                "API_BYTE_RANGE_EXCLUSIVE",
                                                                "API_BYTE_RANGE_SHARED",
                                                                "API_BYTE_RANGE_READ_OP",
                                                                "API_BYTE_RANGE_WRITE_OP"
                                                            ],
                                                            "description": "mode:\n * `API_BYTE_RANGE_EXCLUSIVE` - API_BYTE_RANGE_EXCLUSIVE,\n * `API_BYTE_RANGE_READ_OP` - API_BYTE_RANGE_READ_OP,\n * `API_BYTE_RANGE_SHARED` - API_BYTE_RANGE_SHARED,\n * `API_BYTE_RANGE_WRITE_OP` - API_BYTE_RANGE_WRITE_OP"
                                                        }
                                                    },
                                                    "offset": {
                                                        "type": "string"
                                                    },
                                                    "size": {
                                                        "type": "string"
                                                    },
                                                    "owner_id": {
                                                        "type": "string"
                                                    },
                                                    "owner_name": {
                                                        "type": "string"
                                                    },
                                                    "owner_address": {
                                                        "type": "string"
                                                    },
                                                    "node_address": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "files"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            },
            "delete": {
                "summary": "Release all locks held by a particular client. This is dangerous, and should only be used after confirming that the client is dead.",
                "parameters": [
                    {
                        "name": "owner_name",
                        "in": "query",
                        "description": "The lock owner's name. The client provides the name. Typically, it is the client hostname.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "owner_address",
                        "in": "query",
                        "description": "The lock owner's address. This is the IP address of the machine that acquires the lock. If the machine's IP address changes, any existing lock entries are still listed under the old address.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success"
                    }
                },
                "tags": [
                    "files"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/files/locks/nlm/byte-range/waiters/": {
            "get": {
                "summary": "Return a list of all NLM byte range requests currently waiting on the specified machine.",
                "parameters": [
                    {
                        "name": "owner_name",
                        "in": "query",
                        "description": "The lock owner's name. The client provides the name. Typically, it is the client hostname.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "owner_address",
                        "in": "query",
                        "description": "The waiter's address. The IP address of the machine (the waiter) that sends the lock request. If the machine's IP address changes, any outstanding requests are still listed under the old address.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "Return entries after the given key (keys are returned in the paging object)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Return no more than this many entries; the system may choose a smaller limit.",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "waiters": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "file_id": {
                                                        "type": "string"
                                                    },
                                                    "stream_id": {
                                                        "type": "string"
                                                    },
                                                    "snapshot_id": {
                                                        "type": "string"
                                                    },
                                                    "mode": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "enum": [
                                                                "API_BYTE_RANGE_EXCLUSIVE",
                                                                "API_BYTE_RANGE_SHARED",
                                                                "API_BYTE_RANGE_READ_OP",
                                                                "API_BYTE_RANGE_WRITE_OP"
                                                            ],
                                                            "description": "mode:\n * `API_BYTE_RANGE_EXCLUSIVE` - API_BYTE_RANGE_EXCLUSIVE,\n * `API_BYTE_RANGE_READ_OP` - API_BYTE_RANGE_READ_OP,\n * `API_BYTE_RANGE_SHARED` - API_BYTE_RANGE_SHARED,\n * `API_BYTE_RANGE_WRITE_OP` - API_BYTE_RANGE_WRITE_OP"
                                                        }
                                                    },
                                                    "offset": {
                                                        "type": "string"
                                                    },
                                                    "size": {
                                                        "type": "string"
                                                    },
                                                    "owner_id": {
                                                        "type": "string"
                                                    },
                                                    "owner_name": {
                                                        "type": "string"
                                                    },
                                                    "owner_address": {
                                                        "type": "string"
                                                    },
                                                    "node_address": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "files"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/files/locks/smb/byte-range/": {
            "get": {
                "summary": "Return a list of all granted file locks that the specified machine owns.",
                "parameters": [
                    {
                        "name": "owner_address",
                        "in": "query",
                        "description": "IP Address of the client that owns the lock.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "Return entries after the given key (keys are returned in the paging object)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Return no more than this many entries; the system may choose a smaller limit.",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "grants": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "file_id": {
                                                        "type": "string"
                                                    },
                                                    "stream_id": {
                                                        "type": "string"
                                                    },
                                                    "snapshot_id": {
                                                        "type": "string"
                                                    },
                                                    "mode": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "enum": [
                                                                "API_BYTE_RANGE_EXCLUSIVE",
                                                                "API_BYTE_RANGE_SHARED",
                                                                "API_BYTE_RANGE_READ_OP",
                                                                "API_BYTE_RANGE_WRITE_OP"
                                                            ],
                                                            "description": "mode:\n * `API_BYTE_RANGE_EXCLUSIVE` - API_BYTE_RANGE_EXCLUSIVE,\n * `API_BYTE_RANGE_READ_OP` - API_BYTE_RANGE_READ_OP,\n * `API_BYTE_RANGE_SHARED` - API_BYTE_RANGE_SHARED,\n * `API_BYTE_RANGE_WRITE_OP` - API_BYTE_RANGE_WRITE_OP"
                                                        }
                                                    },
                                                    "offset": {
                                                        "type": "string"
                                                    },
                                                    "size": {
                                                        "type": "string"
                                                    },
                                                    "owner_id": {
                                                        "type": "string"
                                                    },
                                                    "owner_name": {
                                                        "type": "string"
                                                    },
                                                    "owner_address": {
                                                        "type": "string"
                                                    },
                                                    "node_address": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "files"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/files/locks/smb/share-mode/": {
            "get": {
                "summary": "Return a list of all granted file locks that the specified machine owns.",
                "parameters": [
                    {
                        "name": "owner_address",
                        "in": "query",
                        "description": "IP Address of the client that owns the lock.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "Return entries after the given key (keys are returned in the paging object)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Return no more than this many entries; the system may choose a smaller limit.",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "grants": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "file_id": {
                                                        "type": "string"
                                                    },
                                                    "stream_id": {
                                                        "type": "string"
                                                    },
                                                    "snapshot_id": {
                                                        "type": "string"
                                                    },
                                                    "mode": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "enum": [
                                                                "API_SHARE_MODE_READ",
                                                                "API_SHARE_MODE_WRITE",
                                                                "API_SHARE_MODE_DELETE",
                                                                "API_SHARE_MODE_EXCLUDE_READ",
                                                                "API_SHARE_MODE_EXCLUDE_WRITE",
                                                                "API_SHARE_MODE_EXCLUDE_DELETE"
                                                            ],
                                                            "description": "mode:\n * `API_SHARE_MODE_DELETE` - API_SHARE_MODE_DELETE,\n * `API_SHARE_MODE_EXCLUDE_DELETE` - API_SHARE_MODE_EXCLUDE_DELETE,\n * `API_SHARE_MODE_EXCLUDE_READ` - API_SHARE_MODE_EXCLUDE_READ,\n * `API_SHARE_MODE_EXCLUDE_WRITE` - API_SHARE_MODE_EXCLUDE_WRITE,\n * `API_SHARE_MODE_READ` - API_SHARE_MODE_READ,\n * `API_SHARE_MODE_WRITE` - API_SHARE_MODE_WRITE"
                                                        }
                                                    },
                                                    "owner_id": {
                                                        "type": "string"
                                                    },
                                                    "owner_address": {
                                                        "type": "string"
                                                    },
                                                    "node_address": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "files"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/files/locks/nfs4/byte-range/": {
            "get": {
                "summary": "Return a list of all granted file locks that the specified machine owns.",
                "parameters": [
                    {
                        "name": "owner_name",
                        "in": "query",
                        "description": "The lock owner's name. The client provides the name. Typically, it is the client hostname.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "owner_address",
                        "in": "query",
                        "description": "The lock owner's address. This is the IP address of the machine that acquires the lock. If the machine's IP address changes, any existing lock entries are still listed under the old address.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "Return entries after the given key (keys are returned in the paging object)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Return no more than this many entries; the system may choose a smaller limit.",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "grants": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "file_id": {
                                                        "type": "string"
                                                    },
                                                    "stream_id": {
                                                        "type": "string"
                                                    },
                                                    "snapshot_id": {
                                                        "type": "string"
                                                    },
                                                    "mode": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "enum": [
                                                                "API_BYTE_RANGE_EXCLUSIVE",
                                                                "API_BYTE_RANGE_SHARED",
                                                                "API_BYTE_RANGE_READ_OP",
                                                                "API_BYTE_RANGE_WRITE_OP"
                                                            ],
                                                            "description": "mode:\n * `API_BYTE_RANGE_EXCLUSIVE` - API_BYTE_RANGE_EXCLUSIVE,\n * `API_BYTE_RANGE_READ_OP` - API_BYTE_RANGE_READ_OP,\n * `API_BYTE_RANGE_SHARED` - API_BYTE_RANGE_SHARED,\n * `API_BYTE_RANGE_WRITE_OP` - API_BYTE_RANGE_WRITE_OP"
                                                        }
                                                    },
                                                    "offset": {
                                                        "type": "string"
                                                    },
                                                    "size": {
                                                        "type": "string"
                                                    },
                                                    "owner_id": {
                                                        "type": "string"
                                                    },
                                                    "owner_name": {
                                                        "type": "string"
                                                    },
                                                    "owner_address": {
                                                        "type": "string"
                                                    },
                                                    "node_address": {
                                                        "type": "string"
                                                    },
                                                    "client_id": {
                                                        "type": "string"
                                                    },
                                                    "state_id": {
                                                        "type": "string"
                                                    },
                                                    "node_id": {
                                                        "type": "number"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "files"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/files/{ref}": {
            "delete": {
                "summary": "Paths must be absolute and URL encoded.",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "The file ID (UInt64) or the absolute path to the file. This page handles the URL-encoding of the path.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success"
                    }
                },
                "tags": [
                    "files"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/files/{ref}/data": {
            "put": {
                "summary": "Replace the contents of the file with the body of the request. The target file must already exist, and the content-type of the request must be application/octet-stream.",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "The file ID (UInt64) or the absolute path to the file. This page handles the URL-encoding of the path.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "path": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "num_links": {
                                            "type": "number"
                                        },
                                        "type": {
                                            "type": "string",
                                            "enum": [
                                                "FS_FILE_TYPE_FILE",
                                                "FS_FILE_TYPE_DIRECTORY",
                                                "FS_FILE_TYPE_SYMLINK",
                                                "FS_FILE_TYPE_UNIX_PIPE",
                                                "FS_FILE_TYPE_UNIX_CHARACTER_DEVICE",
                                                "FS_FILE_TYPE_UNIX_BLOCK_DEVICE",
                                                "FS_FILE_TYPE_UNIX_SOCKET"
                                            ],
                                            "description": "Resource type:\n * `FS_FILE_TYPE_DIRECTORY` - FS_FILE_TYPE_DIRECTORY,\n * `FS_FILE_TYPE_FILE` - FS_FILE_TYPE_FILE,\n * `FS_FILE_TYPE_SYMLINK` - FS_FILE_TYPE_SYMLINK,\n * `FS_FILE_TYPE_UNIX_BLOCK_DEVICE` - FS_FILE_TYPE_UNIX_BLOCK_DEVICE,\n * `FS_FILE_TYPE_UNIX_CHARACTER_DEVICE` - FS_FILE_TYPE_UNIX_CHARACTER_DEVICE,\n * `FS_FILE_TYPE_UNIX_PIPE` - FS_FILE_TYPE_UNIX_PIPE,\n * `FS_FILE_TYPE_UNIX_SOCKET` - FS_FILE_TYPE_UNIX_SOCKET"
                                        },
                                        "major_minor_numbers": {
                                            "type": "object",
                                            "properties": {
                                                "major": {
                                                    "type": "number"
                                                },
                                                "minor": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "symlink_target_type": {
                                            "type": "string",
                                            "enum": [
                                                "FS_FILE_TYPE_UNKNOWN",
                                                "FS_FILE_TYPE_FILE",
                                                "FS_FILE_TYPE_DIRECTORY"
                                            ],
                                            "description": "The type of the target file if this file is a symlink:\n * `FS_FILE_TYPE_DIRECTORY` - API_SYMLINK_TARGET_DIRECTORY,\n * `FS_FILE_TYPE_FILE` - API_SYMLINK_TARGET_FILE,\n * `FS_FILE_TYPE_UNKNOWN` - API_SYMLINK_TARGET_UNKNOWN"
                                        },
                                        "file_number": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "mode": {
                                            "type": "string"
                                        },
                                        "owner": {
                                            "type": "string"
                                        },
                                        "owner_details": {
                                            "type": "object",
                                            "properties": {
                                                "id_type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "LOCAL_USER",
                                                        "LOCAL_GROUP",
                                                        "NFS_GID",
                                                        "NFS_UID",
                                                        "SMB_SID",
                                                        "INTERNAL",
                                                        "QUMULO_OPERATOR"
                                                    ],
                                                    "description": "id_type:\n * `INTERNAL` - INTERNAL,\n * `LOCAL_GROUP` - LOCAL_GROUP,\n * `LOCAL_USER` - LOCAL_USER,\n * `NFS_GID` - NFS_GID,\n * `NFS_UID` - NFS_UID,\n * `QUMULO_OPERATOR` - QUMULO_OPERATOR,\n * `SMB_SID` - SMB_SID"
                                                },
                                                "id_value": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "group": {
                                            "type": "string"
                                        },
                                        "group_details": {
                                            "type": "object",
                                            "properties": {
                                                "id_type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "LOCAL_USER",
                                                        "LOCAL_GROUP",
                                                        "NFS_GID",
                                                        "NFS_UID",
                                                        "SMB_SID",
                                                        "INTERNAL",
                                                        "QUMULO_OPERATOR"
                                                    ],
                                                    "description": "id_type:\n * `INTERNAL` - INTERNAL,\n * `LOCAL_GROUP` - LOCAL_GROUP,\n * `LOCAL_USER` - LOCAL_USER,\n * `NFS_GID` - NFS_GID,\n * `NFS_UID` - NFS_UID,\n * `QUMULO_OPERATOR` - QUMULO_OPERATOR,\n * `SMB_SID` - SMB_SID"
                                                },
                                                "id_value": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "blocks": {
                                            "type": "string"
                                        },
                                        "datablocks": {
                                            "type": "string"
                                        },
                                        "metablocks": {
                                            "type": "string"
                                        },
                                        "size": {
                                            "type": "string"
                                        },
                                        "access_time": {
                                            "type": "string"
                                        },
                                        "modification_time": {
                                            "type": "string"
                                        },
                                        "change_time": {
                                            "type": "string"
                                        },
                                        "creation_time": {
                                            "type": "string"
                                        },
                                        "child_count": {
                                            "type": "number"
                                        },
                                        "extended_attributes": {
                                            "type": "object",
                                            "properties": {
                                                "read_only": {
                                                    "type": "boolean"
                                                },
                                                "hidden": {
                                                    "type": "boolean"
                                                },
                                                "system": {
                                                    "type": "boolean"
                                                },
                                                "archive": {
                                                    "type": "boolean"
                                                },
                                                "temporary": {
                                                    "type": "boolean"
                                                },
                                                "compressed": {
                                                    "type": "boolean"
                                                },
                                                "not_content_indexed": {
                                                    "type": "boolean"
                                                },
                                                "sparse_file": {
                                                    "type": "boolean"
                                                }
                                            }
                                        },
                                        "directory_entry_hash_policy": {
                                            "type": "string",
                                            "enum": [
                                                "FS_DIRECTORY_HASH_VERSION_LOWER",
                                                "FS_DIRECTORY_HASH_VERSION_FOLDED"
                                            ],
                                            "description": "Hash policy for directory entries:\n * `FS_DIRECTORY_HASH_VERSION_FOLDED` - FS_DIRECTORY_HASH_VERSION_FOLDED,\n * `FS_DIRECTORY_HASH_VERSION_LOWER` - FS_DIRECTORY_HASH_VERSION_LOWER"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "files"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/octet-stream": {
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Set the contents of the file, at the given offset, to the body of the request. The target file must already exist, and the Content-Type of the request must be application/octet-stream.",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "The file ID (UInt64) or the absolute path to the file. This page handles the URL-encoding of the path.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Write the provided data at the given 64-bit integer offset. If the offset is greater than the size of the file, the file will be zero-extended up to offset before the data is written. (default: 0)",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "path": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "num_links": {
                                            "type": "number"
                                        },
                                        "type": {
                                            "type": "string",
                                            "enum": [
                                                "FS_FILE_TYPE_FILE",
                                                "FS_FILE_TYPE_DIRECTORY",
                                                "FS_FILE_TYPE_SYMLINK",
                                                "FS_FILE_TYPE_UNIX_PIPE",
                                                "FS_FILE_TYPE_UNIX_CHARACTER_DEVICE",
                                                "FS_FILE_TYPE_UNIX_BLOCK_DEVICE",
                                                "FS_FILE_TYPE_UNIX_SOCKET"
                                            ],
                                            "description": "Resource type:\n * `FS_FILE_TYPE_DIRECTORY` - FS_FILE_TYPE_DIRECTORY,\n * `FS_FILE_TYPE_FILE` - FS_FILE_TYPE_FILE,\n * `FS_FILE_TYPE_SYMLINK` - FS_FILE_TYPE_SYMLINK,\n * `FS_FILE_TYPE_UNIX_BLOCK_DEVICE` - FS_FILE_TYPE_UNIX_BLOCK_DEVICE,\n * `FS_FILE_TYPE_UNIX_CHARACTER_DEVICE` - FS_FILE_TYPE_UNIX_CHARACTER_DEVICE,\n * `FS_FILE_TYPE_UNIX_PIPE` - FS_FILE_TYPE_UNIX_PIPE,\n * `FS_FILE_TYPE_UNIX_SOCKET` - FS_FILE_TYPE_UNIX_SOCKET"
                                        },
                                        "major_minor_numbers": {
                                            "type": "object",
                                            "properties": {
                                                "major": {
                                                    "type": "number"
                                                },
                                                "minor": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "symlink_target_type": {
                                            "type": "string",
                                            "enum": [
                                                "FS_FILE_TYPE_UNKNOWN",
                                                "FS_FILE_TYPE_FILE",
                                                "FS_FILE_TYPE_DIRECTORY"
                                            ],
                                            "description": "The type of the target file if this file is a symlink:\n * `FS_FILE_TYPE_DIRECTORY` - API_SYMLINK_TARGET_DIRECTORY,\n * `FS_FILE_TYPE_FILE` - API_SYMLINK_TARGET_FILE,\n * `FS_FILE_TYPE_UNKNOWN` - API_SYMLINK_TARGET_UNKNOWN"
                                        },
                                        "file_number": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "mode": {
                                            "type": "string"
                                        },
                                        "owner": {
                                            "type": "string"
                                        },
                                        "owner_details": {
                                            "type": "object",
                                            "properties": {
                                                "id_type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "LOCAL_USER",
                                                        "LOCAL_GROUP",
                                                        "NFS_GID",
                                                        "NFS_UID",
                                                        "SMB_SID",
                                                        "INTERNAL",
                                                        "QUMULO_OPERATOR"
                                                    ],
                                                    "description": "id_type:\n * `INTERNAL` - INTERNAL,\n * `LOCAL_GROUP` - LOCAL_GROUP,\n * `LOCAL_USER` - LOCAL_USER,\n * `NFS_GID` - NFS_GID,\n * `NFS_UID` - NFS_UID,\n * `QUMULO_OPERATOR` - QUMULO_OPERATOR,\n * `SMB_SID` - SMB_SID"
                                                },
                                                "id_value": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "group": {
                                            "type": "string"
                                        },
                                        "group_details": {
                                            "type": "object",
                                            "properties": {
                                                "id_type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "LOCAL_USER",
                                                        "LOCAL_GROUP",
                                                        "NFS_GID",
                                                        "NFS_UID",
                                                        "SMB_SID",
                                                        "INTERNAL",
                                                        "QUMULO_OPERATOR"
                                                    ],
                                                    "description": "id_type:\n * `INTERNAL` - INTERNAL,\n * `LOCAL_GROUP` - LOCAL_GROUP,\n * `LOCAL_USER` - LOCAL_USER,\n * `NFS_GID` - NFS_GID,\n * `NFS_UID` - NFS_UID,\n * `QUMULO_OPERATOR` - QUMULO_OPERATOR,\n * `SMB_SID` - SMB_SID"
                                                },
                                                "id_value": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "blocks": {
                                            "type": "string"
                                        },
                                        "datablocks": {
                                            "type": "string"
                                        },
                                        "metablocks": {
                                            "type": "string"
                                        },
                                        "size": {
                                            "type": "string"
                                        },
                                        "access_time": {
                                            "type": "string"
                                        },
                                        "modification_time": {
                                            "type": "string"
                                        },
                                        "change_time": {
                                            "type": "string"
                                        },
                                        "creation_time": {
                                            "type": "string"
                                        },
                                        "child_count": {
                                            "type": "number"
                                        },
                                        "extended_attributes": {
                                            "type": "object",
                                            "properties": {
                                                "read_only": {
                                                    "type": "boolean"
                                                },
                                                "hidden": {
                                                    "type": "boolean"
                                                },
                                                "system": {
                                                    "type": "boolean"
                                                },
                                                "archive": {
                                                    "type": "boolean"
                                                },
                                                "temporary": {
                                                    "type": "boolean"
                                                },
                                                "compressed": {
                                                    "type": "boolean"
                                                },
                                                "not_content_indexed": {
                                                    "type": "boolean"
                                                },
                                                "sparse_file": {
                                                    "type": "boolean"
                                                }
                                            }
                                        },
                                        "directory_entry_hash_policy": {
                                            "type": "string",
                                            "enum": [
                                                "FS_DIRECTORY_HASH_VERSION_LOWER",
                                                "FS_DIRECTORY_HASH_VERSION_FOLDED"
                                            ],
                                            "description": "Hash policy for directory entries:\n * `FS_DIRECTORY_HASH_VERSION_FOLDED` - FS_DIRECTORY_HASH_VERSION_FOLDED,\n * `FS_DIRECTORY_HASH_VERSION_LOWER` - FS_DIRECTORY_HASH_VERSION_LOWER"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "files"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/octet-stream": {
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Return the contents of the file as an HTTP octet stream. The etag returned by this method represents the whole state of this inode. In another word, if you are reading just a portion of the data, etag could be invalid because of other changes happened to the file, even the specific portion of data you read is still intact.",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "The file ID (UInt64) or the absolute path to the file. This page handles the URL-encoding of the path.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "snapshot",
                        "in": "query",
                        "description": "The snapshot ID that specifies the version of the file to read. If not specified, read the head version.",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Read data from the requested file starting at the given 64-bit integer offset. If the offset is larger than the size of the file, the read will succeed and no data will be returned.",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "Read up to length bytes from the requested file. If the read extends beyond the end of the file, the read will return as many bytes as possible, up to length.",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "files"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/files/{ref}/copy-chunk": {
            "post": {
                "summary": "Copies the contents of the source file specified in the body of the request to the default stream. The file must already exist.",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "The file ID (UInt64) or the absolute path to the file. This page handles the URL-encoding of the path.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "source_id": {
                                            "type": "string"
                                        },
                                        "source_path": {
                                            "type": "string"
                                        },
                                        "source_stream_id": {
                                            "type": "string"
                                        },
                                        "source_snapshot": {
                                            "type": "number"
                                        },
                                        "source_offset": {
                                            "type": "string"
                                        },
                                        "target_offset": {
                                            "type": "string"
                                        },
                                        "length": {
                                            "type": "string"
                                        },
                                        "source_etag": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "files"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "source_id": {
                                        "type": "string"
                                    },
                                    "source_path": {
                                        "type": "string"
                                    },
                                    "source_stream_id": {
                                        "type": "string"
                                    },
                                    "source_snapshot": {
                                        "type": "number"
                                    },
                                    "source_offset": {
                                        "type": "string"
                                    },
                                    "target_offset": {
                                        "type": "string"
                                    },
                                    "length": {
                                        "type": "string"
                                    },
                                    "source_etag": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/files/{ref}/entries/": {
            "post": {
                "summary": "Create a new file, link, or directory. In addition, this method can be use to rename an existing file. The return value is an attribute structure for the new file; refer to the 'Set Attributes' method for field descriptions.",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "The file ID (UInt64) or the absolute path to the file. This page handles the URL-encoding of the path.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "path": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "num_links": {
                                            "type": "number"
                                        },
                                        "type": {
                                            "type": "string",
                                            "enum": [
                                                "FS_FILE_TYPE_FILE",
                                                "FS_FILE_TYPE_DIRECTORY",
                                                "FS_FILE_TYPE_SYMLINK",
                                                "FS_FILE_TYPE_UNIX_PIPE",
                                                "FS_FILE_TYPE_UNIX_CHARACTER_DEVICE",
                                                "FS_FILE_TYPE_UNIX_BLOCK_DEVICE",
                                                "FS_FILE_TYPE_UNIX_SOCKET"
                                            ],
                                            "description": "Resource type:\n * `FS_FILE_TYPE_DIRECTORY` - FS_FILE_TYPE_DIRECTORY,\n * `FS_FILE_TYPE_FILE` - FS_FILE_TYPE_FILE,\n * `FS_FILE_TYPE_SYMLINK` - FS_FILE_TYPE_SYMLINK,\n * `FS_FILE_TYPE_UNIX_BLOCK_DEVICE` - FS_FILE_TYPE_UNIX_BLOCK_DEVICE,\n * `FS_FILE_TYPE_UNIX_CHARACTER_DEVICE` - FS_FILE_TYPE_UNIX_CHARACTER_DEVICE,\n * `FS_FILE_TYPE_UNIX_PIPE` - FS_FILE_TYPE_UNIX_PIPE,\n * `FS_FILE_TYPE_UNIX_SOCKET` - FS_FILE_TYPE_UNIX_SOCKET"
                                        },
                                        "major_minor_numbers": {
                                            "type": "object",
                                            "properties": {
                                                "major": {
                                                    "type": "number"
                                                },
                                                "minor": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "symlink_target_type": {
                                            "type": "string",
                                            "enum": [
                                                "FS_FILE_TYPE_UNKNOWN",
                                                "FS_FILE_TYPE_FILE",
                                                "FS_FILE_TYPE_DIRECTORY"
                                            ],
                                            "description": "The type of the target file if this file is a symlink:\n * `FS_FILE_TYPE_DIRECTORY` - API_SYMLINK_TARGET_DIRECTORY,\n * `FS_FILE_TYPE_FILE` - API_SYMLINK_TARGET_FILE,\n * `FS_FILE_TYPE_UNKNOWN` - API_SYMLINK_TARGET_UNKNOWN"
                                        },
                                        "file_number": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "mode": {
                                            "type": "string"
                                        },
                                        "owner": {
                                            "type": "string"
                                        },
                                        "owner_details": {
                                            "type": "object",
                                            "properties": {
                                                "id_type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "LOCAL_USER",
                                                        "LOCAL_GROUP",
                                                        "NFS_GID",
                                                        "NFS_UID",
                                                        "SMB_SID",
                                                        "INTERNAL",
                                                        "QUMULO_OPERATOR"
                                                    ],
                                                    "description": "id_type:\n * `INTERNAL` - INTERNAL,\n * `LOCAL_GROUP` - LOCAL_GROUP,\n * `LOCAL_USER` - LOCAL_USER,\n * `NFS_GID` - NFS_GID,\n * `NFS_UID` - NFS_UID,\n * `QUMULO_OPERATOR` - QUMULO_OPERATOR,\n * `SMB_SID` - SMB_SID"
                                                },
                                                "id_value": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "group": {
                                            "type": "string"
                                        },
                                        "group_details": {
                                            "type": "object",
                                            "properties": {
                                                "id_type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "LOCAL_USER",
                                                        "LOCAL_GROUP",
                                                        "NFS_GID",
                                                        "NFS_UID",
                                                        "SMB_SID",
                                                        "INTERNAL",
                                                        "QUMULO_OPERATOR"
                                                    ],
                                                    "description": "id_type:\n * `INTERNAL` - INTERNAL,\n * `LOCAL_GROUP` - LOCAL_GROUP,\n * `LOCAL_USER` - LOCAL_USER,\n * `NFS_GID` - NFS_GID,\n * `NFS_UID` - NFS_UID,\n * `QUMULO_OPERATOR` - QUMULO_OPERATOR,\n * `SMB_SID` - SMB_SID"
                                                },
                                                "id_value": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "blocks": {
                                            "type": "string"
                                        },
                                        "datablocks": {
                                            "type": "string"
                                        },
                                        "metablocks": {
                                            "type": "string"
                                        },
                                        "size": {
                                            "type": "string"
                                        },
                                        "access_time": {
                                            "type": "string"
                                        },
                                        "modification_time": {
                                            "type": "string"
                                        },
                                        "change_time": {
                                            "type": "string"
                                        },
                                        "creation_time": {
                                            "type": "string"
                                        },
                                        "child_count": {
                                            "type": "number"
                                        },
                                        "extended_attributes": {
                                            "type": "object",
                                            "properties": {
                                                "read_only": {
                                                    "type": "boolean"
                                                },
                                                "hidden": {
                                                    "type": "boolean"
                                                },
                                                "system": {
                                                    "type": "boolean"
                                                },
                                                "archive": {
                                                    "type": "boolean"
                                                },
                                                "temporary": {
                                                    "type": "boolean"
                                                },
                                                "compressed": {
                                                    "type": "boolean"
                                                },
                                                "not_content_indexed": {
                                                    "type": "boolean"
                                                },
                                                "sparse_file": {
                                                    "type": "boolean"
                                                }
                                            }
                                        },
                                        "directory_entry_hash_policy": {
                                            "type": "string",
                                            "enum": [
                                                "FS_DIRECTORY_HASH_VERSION_LOWER",
                                                "FS_DIRECTORY_HASH_VERSION_FOLDED"
                                            ],
                                            "description": "Hash policy for directory entries:\n * `FS_DIRECTORY_HASH_VERSION_FOLDED` - FS_DIRECTORY_HASH_VERSION_FOLDED,\n * `FS_DIRECTORY_HASH_VERSION_LOWER` - FS_DIRECTORY_HASH_VERSION_LOWER"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "files"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "action": {
                                        "type": "string",
                                        "enum": [
                                            "CREATE_FILE",
                                            "CREATE_DIRECTORY",
                                            "CREATE_SYMLINK",
                                            "CREATE_LINK",
                                            "RENAME",
                                            "CREATE_UNIX_FILE"
                                        ],
                                        "description": "Operation to perform:\n * `CREATE_DIRECTORY` - CREATE_DIRECTORY,\n * `CREATE_FILE` - CREATE_FILE,\n * `CREATE_LINK` - CREATE_LINK,\n * `CREATE_SYMLINK` - CREATE_SYMLINK,\n * `CREATE_UNIX_FILE` - CREATE_UNIX_FILE,\n * `RENAME` - RENAME"
                                    },
                                    "old_path": {
                                        "type": "string"
                                    },
                                    "clobber": {
                                        "type": "boolean"
                                    },
                                    "symlink_target_type": {
                                        "type": "string",
                                        "enum": [
                                            "FS_FILE_TYPE_UNKNOWN",
                                            "FS_FILE_TYPE_FILE",
                                            "FS_FILE_TYPE_DIRECTORY"
                                        ],
                                        "description": "The file type of the target to which the symbolic link points. If you don't specify the file type, or if it is FS_FILE_TYPE_UNKNOWN, the effect is the same as running the 'ln -s' command on a Unix NFS client. If the file type is FS_FILE_TYPE_FILE or FS_FILE_TYPE_DIRECTORY, the effect is the same as running the 'mklink' or 'mklink /D' command on a Windows SMB client.:\n * `FS_FILE_TYPE_DIRECTORY` - API_SYMLINK_TARGET_DIRECTORY,\n * `FS_FILE_TYPE_FILE` - API_SYMLINK_TARGET_FILE,\n * `FS_FILE_TYPE_UNKNOWN` - API_SYMLINK_TARGET_UNKNOWN"
                                    },
                                    "unix_file_type": {
                                        "type": "string",
                                        "enum": [
                                            "FS_FILE_TYPE_FILE",
                                            "FS_FILE_TYPE_DIRECTORY",
                                            "FS_FILE_TYPE_SYMLINK",
                                            "FS_FILE_TYPE_UNIX_PIPE",
                                            "FS_FILE_TYPE_UNIX_CHARACTER_DEVICE",
                                            "FS_FILE_TYPE_UNIX_BLOCK_DEVICE",
                                            "FS_FILE_TYPE_UNIX_SOCKET"
                                        ],
                                        "description": "Required when the action is CREATE_UNIX_FILE. You are given the choice of FS_FILE_TYPE_UNIX_BLOCK_DEVICE, FS_FILE_TYPE_UNIX_CHARACTER_DEVICE, FS_FILE_TYPE_UNIX_PIPE or FS_FILE_TYPE_UNIX_SOCKET:\n * `FS_FILE_TYPE_DIRECTORY` - FS_FILE_TYPE_DIRECTORY,\n * `FS_FILE_TYPE_FILE` - FS_FILE_TYPE_FILE,\n * `FS_FILE_TYPE_SYMLINK` - FS_FILE_TYPE_SYMLINK,\n * `FS_FILE_TYPE_UNIX_BLOCK_DEVICE` - FS_FILE_TYPE_UNIX_BLOCK_DEVICE,\n * `FS_FILE_TYPE_UNIX_CHARACTER_DEVICE` - FS_FILE_TYPE_UNIX_CHARACTER_DEVICE,\n * `FS_FILE_TYPE_UNIX_PIPE` - FS_FILE_TYPE_UNIX_PIPE,\n * `FS_FILE_TYPE_UNIX_SOCKET` - FS_FILE_TYPE_UNIX_SOCKET"
                                    },
                                    "major_minor_numbers": {
                                        "type": "object",
                                        "properties": {
                                            "major": {
                                                "type": "number"
                                            },
                                            "minor": {
                                                "type": "number"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Get directory entries. Path or ID must reference a directory or link to a directory.",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "The file ID (UInt64) or the absolute path to the file. This page handles the URL-encoding of the path.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "snapshot",
                        "in": "query",
                        "description": "Snapshot ID specifying the version of the directory to list. If not specified, list by using the head version.",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "smb-pattern",
                        "in": "query",
                        "description": "Return only entries matching the give SMB pattern",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "Return entries after the given key (keys are returned in the paging object)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Return no more than this many entries; the system may choose a smaller limit.",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "path": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "child_count": {
                                            "type": "number"
                                        },
                                        "files": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "path": {
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "num_links": {
                                                        "type": "number"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "enum": [
                                                            "FS_FILE_TYPE_FILE",
                                                            "FS_FILE_TYPE_DIRECTORY",
                                                            "FS_FILE_TYPE_SYMLINK",
                                                            "FS_FILE_TYPE_UNIX_PIPE",
                                                            "FS_FILE_TYPE_UNIX_CHARACTER_DEVICE",
                                                            "FS_FILE_TYPE_UNIX_BLOCK_DEVICE",
                                                            "FS_FILE_TYPE_UNIX_SOCKET"
                                                        ],
                                                        "description": "Resource type:\n * `FS_FILE_TYPE_DIRECTORY` - FS_FILE_TYPE_DIRECTORY,\n * `FS_FILE_TYPE_FILE` - FS_FILE_TYPE_FILE,\n * `FS_FILE_TYPE_SYMLINK` - FS_FILE_TYPE_SYMLINK,\n * `FS_FILE_TYPE_UNIX_BLOCK_DEVICE` - FS_FILE_TYPE_UNIX_BLOCK_DEVICE,\n * `FS_FILE_TYPE_UNIX_CHARACTER_DEVICE` - FS_FILE_TYPE_UNIX_CHARACTER_DEVICE,\n * `FS_FILE_TYPE_UNIX_PIPE` - FS_FILE_TYPE_UNIX_PIPE,\n * `FS_FILE_TYPE_UNIX_SOCKET` - FS_FILE_TYPE_UNIX_SOCKET"
                                                    },
                                                    "major_minor_numbers": {
                                                        "type": "object",
                                                        "properties": {
                                                            "major": {
                                                                "type": "number"
                                                            },
                                                            "minor": {
                                                                "type": "number"
                                                            }
                                                        }
                                                    },
                                                    "symlink_target_type": {
                                                        "type": "string",
                                                        "enum": [
                                                            "FS_FILE_TYPE_UNKNOWN",
                                                            "FS_FILE_TYPE_FILE",
                                                            "FS_FILE_TYPE_DIRECTORY"
                                                        ],
                                                        "description": "The type of the target file if this file is a symlink:\n * `FS_FILE_TYPE_DIRECTORY` - API_SYMLINK_TARGET_DIRECTORY,\n * `FS_FILE_TYPE_FILE` - API_SYMLINK_TARGET_FILE,\n * `FS_FILE_TYPE_UNKNOWN` - API_SYMLINK_TARGET_UNKNOWN"
                                                    },
                                                    "file_number": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "string"
                                                    },
                                                    "mode": {
                                                        "type": "string"
                                                    },
                                                    "owner": {
                                                        "type": "string"
                                                    },
                                                    "owner_details": {
                                                        "type": "object",
                                                        "properties": {
                                                            "id_type": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "LOCAL_USER",
                                                                    "LOCAL_GROUP",
                                                                    "NFS_GID",
                                                                    "NFS_UID",
                                                                    "SMB_SID",
                                                                    "INTERNAL",
                                                                    "QUMULO_OPERATOR"
                                                                ],
                                                                "description": "id_type:\n * `INTERNAL` - INTERNAL,\n * `LOCAL_GROUP` - LOCAL_GROUP,\n * `LOCAL_USER` - LOCAL_USER,\n * `NFS_GID` - NFS_GID,\n * `NFS_UID` - NFS_UID,\n * `QUMULO_OPERATOR` - QUMULO_OPERATOR,\n * `SMB_SID` - SMB_SID"
                                                            },
                                                            "id_value": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "group": {
                                                        "type": "string"
                                                    },
                                                    "group_details": {
                                                        "type": "object",
                                                        "properties": {
                                                            "id_type": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "LOCAL_USER",
                                                                    "LOCAL_GROUP",
                                                                    "NFS_GID",
                                                                    "NFS_UID",
                                                                    "SMB_SID",
                                                                    "INTERNAL",
                                                                    "QUMULO_OPERATOR"
                                                                ],
                                                                "description": "id_type:\n * `INTERNAL` - INTERNAL,\n * `LOCAL_GROUP` - LOCAL_GROUP,\n * `LOCAL_USER` - LOCAL_USER,\n * `NFS_GID` - NFS_GID,\n * `NFS_UID` - NFS_UID,\n * `QUMULO_OPERATOR` - QUMULO_OPERATOR,\n * `SMB_SID` - SMB_SID"
                                                            },
                                                            "id_value": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "blocks": {
                                                        "type": "string"
                                                    },
                                                    "datablocks": {
                                                        "type": "string"
                                                    },
                                                    "metablocks": {
                                                        "type": "string"
                                                    },
                                                    "size": {
                                                        "type": "string"
                                                    },
                                                    "access_time": {
                                                        "type": "string"
                                                    },
                                                    "modification_time": {
                                                        "type": "string"
                                                    },
                                                    "change_time": {
                                                        "type": "string"
                                                    },
                                                    "creation_time": {
                                                        "type": "string"
                                                    },
                                                    "child_count": {
                                                        "type": "number"
                                                    },
                                                    "extended_attributes": {
                                                        "type": "object",
                                                        "properties": {
                                                            "read_only": {
                                                                "type": "boolean"
                                                            },
                                                            "hidden": {
                                                                "type": "boolean"
                                                            },
                                                            "system": {
                                                                "type": "boolean"
                                                            },
                                                            "archive": {
                                                                "type": "boolean"
                                                            },
                                                            "temporary": {
                                                                "type": "boolean"
                                                            },
                                                            "compressed": {
                                                                "type": "boolean"
                                                            },
                                                            "not_content_indexed": {
                                                                "type": "boolean"
                                                            },
                                                            "sparse_file": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    },
                                                    "directory_entry_hash_policy": {
                                                        "type": "string",
                                                        "enum": [
                                                            "FS_DIRECTORY_HASH_VERSION_LOWER",
                                                            "FS_DIRECTORY_HASH_VERSION_FOLDED"
                                                        ],
                                                        "description": "Hash policy for directory entries:\n * `FS_DIRECTORY_HASH_VERSION_FOLDED` - FS_DIRECTORY_HASH_VERSION_FOLDED,\n * `FS_DIRECTORY_HASH_VERSION_LOWER` - FS_DIRECTORY_HASH_VERSION_LOWER"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "files"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/files/{ref}/info/acl": {
            "put": {
                "summary": "Update file access control list (ACL).",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "The file ID (UInt64) or the absolute path to the file. This page handles the URL-encoding of the path.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "generated": {
                                            "type": "boolean"
                                        },
                                        "acl": {
                                            "type": "object",
                                            "properties": {
                                                "control": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "enum": [
                                                            "PRESENT",
                                                            "DEFAULTED",
                                                            "TRUSTED",
                                                            "AUTO_INHERIT",
                                                            "PROTECTED",
                                                            "ACL_CONTROLS_ALL"
                                                        ],
                                                        "description": "control:\n * `ACL_CONTROLS_ALL` - All ACL controls,\n * `AUTO_INHERIT` - Set whether the ACL was created through inheritance,\n * `DEFAULTED` - Sets whether the ACL was established by default means,\n * `PRESENT` - Set when ACL is present on the object,\n * `PROTECTED` - Protects ACL from inherit operations,\n * `TRUSTED` - Set when ACL is provided by a trusted source"
                                                    }
                                                },
                                                "posix_special_permissions": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "enum": [
                                                            "STICKY_BIT",
                                                            "SET_GID",
                                                            "SET_UID",
                                                            "ACL_POSIX_SPECIAL_PERMISSIONS_ALL"
                                                        ],
                                                        "description": "posix_special_permissions:\n * `ACL_POSIX_SPECIAL_PERMISSIONS_ALL` - ACL_POSIX_SPECIAL_PERMISSIONS_ALL,\n * `SET_GID` - SET_GID,\n * `SET_UID` - SET_UID,\n * `STICKY_BIT` - STICKY_BIT"
                                                    }
                                                },
                                                "aces": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "type": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "ALLOWED",
                                                                    "DENIED"
                                                                ],
                                                                "description": "Type of this ACL entry:\n * `ALLOWED` - An ACL entry that grants rights,\n * `DENIED` - An ACL entry that denies rights"
                                                            },
                                                            "flags": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "OBJECT_INHERIT",
                                                                        "CONTAINER_INHERIT",
                                                                        "NO_PROPAGATE_INHERIT",
                                                                        "INHERIT_ONLY",
                                                                        "INHERITED",
                                                                        "ACE_FLAGS_ALL"
                                                                    ],
                                                                    "description": "ACE flags for this ACL entry:\n * `ACE_FLAGS_ALL` - All ACE flags,\n * `CONTAINER_INHERIT` - Children that are containers inherit as effective ACE,\n * `INHERITED` - Indicates the ACE was inherited,\n * `INHERIT_ONLY` - Indicates an inherit-only ACE that doesn't control access to the attached object,\n * `NO_PROPAGATE_INHERIT` - Prevent subsequent children from inheriting ACE,\n * `OBJECT_INHERIT` - Non-container children inherit as effective ACE. Container objects inherit as inherit-only ACE"
                                                                }
                                                            },
                                                            "trustee": {
                                                                "type": "string"
                                                            },
                                                            "trustee_details": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "id_type": {
                                                                        "type": "string",
                                                                        "enum": [
                                                                            "LOCAL_USER",
                                                                            "LOCAL_GROUP",
                                                                            "NFS_GID",
                                                                            "NFS_UID",
                                                                            "SMB_SID",
                                                                            "INTERNAL",
                                                                            "QUMULO_OPERATOR"
                                                                        ],
                                                                        "description": "id_type:\n * `INTERNAL` - INTERNAL,\n * `LOCAL_GROUP` - LOCAL_GROUP,\n * `LOCAL_USER` - LOCAL_USER,\n * `NFS_GID` - NFS_GID,\n * `NFS_UID` - NFS_UID,\n * `QUMULO_OPERATOR` - QUMULO_OPERATOR,\n * `SMB_SID` - SMB_SID"
                                                                    },
                                                                    "id_value": {
                                                                        "type": "string"
                                                                    }
                                                                }
                                                            },
                                                            "rights": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "READ",
                                                                        "READ_EA",
                                                                        "READ_ATTR",
                                                                        "READ_ACL",
                                                                        "WRITE_EA",
                                                                        "WRITE_ATTR",
                                                                        "WRITE_ACL",
                                                                        "CHANGE_OWNER",
                                                                        "WRITE_GROUP",
                                                                        "DELETE",
                                                                        "EXECUTE",
                                                                        "MODIFY",
                                                                        "EXTEND",
                                                                        "ADD_FILE",
                                                                        "ADD_SUBDIR",
                                                                        "DELETE_CHILD",
                                                                        "SYNCHRONIZE",
                                                                        "ACCESS_RIGHTS_ALL"
                                                                    ],
                                                                    "description": "Rights granted or denied for this ACL entry:\n * `ACCESS_RIGHTS_ALL` - All access rights,\n * `ADD_FILE` - File creation access,\n * `ADD_SUBDIR` - Directory creation access,\n * `CHANGE_OWNER` - Owner write access,\n * `DELETE` - Delete access,\n * `DELETE_CHILD` - Delete from directory access,\n * `EXECUTE` - Execute access,\n * `EXTEND` - File extension access,\n * `MODIFY` - File modification access,\n * `READ` - File read access,\n * `READ_ACL` - ACL read access,\n * `READ_ATTR` - Attribute read access,\n * `READ_EA` - Extended attribute read access,\n * `SYNCHRONIZE` - File synchronize access,\n * `WRITE_ACL` - ACL write access,\n * `WRITE_ATTR` - Attribute write access,\n * `WRITE_EA` - Extended attribute write access,\n * `WRITE_GROUP` - Group write access"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "files"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "control": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "enum": [
                                                "PRESENT",
                                                "DEFAULTED",
                                                "TRUSTED",
                                                "AUTO_INHERIT",
                                                "PROTECTED",
                                                "ACL_CONTROLS_ALL"
                                            ],
                                            "description": "control:\n * `ACL_CONTROLS_ALL` - All ACL controls,\n * `AUTO_INHERIT` - Set whether the ACL was created through inheritance,\n * `DEFAULTED` - Sets whether the ACL was established by default means,\n * `PRESENT` - Set when ACL is present on the object,\n * `PROTECTED` - Protects ACL from inherit operations,\n * `TRUSTED` - Set when ACL is provided by a trusted source"
                                        }
                                    },
                                    "posix_special_permissions": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "enum": [
                                                "STICKY_BIT",
                                                "SET_GID",
                                                "SET_UID",
                                                "ACL_POSIX_SPECIAL_PERMISSIONS_ALL"
                                            ],
                                            "description": "posix_special_permissions:\n * `ACL_POSIX_SPECIAL_PERMISSIONS_ALL` - ACL_POSIX_SPECIAL_PERMISSIONS_ALL,\n * `SET_GID` - SET_GID,\n * `SET_UID` - SET_UID,\n * `STICKY_BIT` - STICKY_BIT"
                                        }
                                    },
                                    "aces": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "ALLOWED",
                                                        "DENIED"
                                                    ],
                                                    "description": "Type of this ACL entry:\n * `ALLOWED` - An ACL entry that grants rights,\n * `DENIED` - An ACL entry that denies rights"
                                                },
                                                "flags": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "enum": [
                                                            "OBJECT_INHERIT",
                                                            "CONTAINER_INHERIT",
                                                            "NO_PROPAGATE_INHERIT",
                                                            "INHERIT_ONLY",
                                                            "INHERITED",
                                                            "ACE_FLAGS_ALL"
                                                        ],
                                                        "description": "ACE flags for this ACL entry:\n * `ACE_FLAGS_ALL` - All ACE flags,\n * `CONTAINER_INHERIT` - Children that are containers inherit as effective ACE,\n * `INHERITED` - Indicates the ACE was inherited,\n * `INHERIT_ONLY` - Indicates an inherit-only ACE that doesn't control access to the attached object,\n * `NO_PROPAGATE_INHERIT` - Prevent subsequent children from inheriting ACE,\n * `OBJECT_INHERIT` - Non-container children inherit as effective ACE. Container objects inherit as inherit-only ACE"
                                                    }
                                                },
                                                "trustee": {
                                                    "type": "string"
                                                },
                                                "trustee_details": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id_type": {
                                                            "type": "string",
                                                            "enum": [
                                                                "LOCAL_USER",
                                                                "LOCAL_GROUP",
                                                                "NFS_GID",
                                                                "NFS_UID",
                                                                "SMB_SID",
                                                                "INTERNAL",
                                                                "QUMULO_OPERATOR"
                                                            ],
                                                            "description": "id_type:\n * `INTERNAL` - INTERNAL,\n * `LOCAL_GROUP` - LOCAL_GROUP,\n * `LOCAL_USER` - LOCAL_USER,\n * `NFS_GID` - NFS_GID,\n * `NFS_UID` - NFS_UID,\n * `QUMULO_OPERATOR` - QUMULO_OPERATOR,\n * `SMB_SID` - SMB_SID"
                                                        },
                                                        "id_value": {
                                                            "type": "string"
                                                        }
                                                    }
                                                },
                                                "rights": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "enum": [
                                                            "READ",
                                                            "READ_EA",
                                                            "READ_ATTR",
                                                            "READ_ACL",
                                                            "WRITE_EA",
                                                            "WRITE_ATTR",
                                                            "WRITE_ACL",
                                                            "CHANGE_OWNER",
                                                            "WRITE_GROUP",
                                                            "DELETE",
                                                            "EXECUTE",
                                                            "MODIFY",
                                                            "EXTEND",
                                                            "ADD_FILE",
                                                            "ADD_SUBDIR",
                                                            "DELETE_CHILD",
                                                            "SYNCHRONIZE",
                                                            "ACCESS_RIGHTS_ALL"
                                                        ],
                                                        "description": "Rights granted or denied for this ACL entry:\n * `ACCESS_RIGHTS_ALL` - All access rights,\n * `ADD_FILE` - File creation access,\n * `ADD_SUBDIR` - Directory creation access,\n * `CHANGE_OWNER` - Owner write access,\n * `DELETE` - Delete access,\n * `DELETE_CHILD` - Delete from directory access,\n * `EXECUTE` - Execute access,\n * `EXTEND` - File extension access,\n * `MODIFY` - File modification access,\n * `READ` - File read access,\n * `READ_ACL` - ACL read access,\n * `READ_ATTR` - Attribute read access,\n * `READ_EA` - Extended attribute read access,\n * `SYNCHRONIZE` - File synchronize access,\n * `WRITE_ACL` - ACL write access,\n * `WRITE_ATTR` - Attribute write access,\n * `WRITE_EA` - Extended attribute write access,\n * `WRITE_GROUP` - Group write access"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Get file access control list (ACL).",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "The file ID (UInt64) or the absolute path to the file. This page handles the URL-encoding of the path.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "snapshot",
                        "in": "query",
                        "description": "The snapshot ID that specifies the version of the file to read. If not specified, read the head version.",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "generated": {
                                            "type": "boolean"
                                        },
                                        "acl": {
                                            "type": "object",
                                            "properties": {
                                                "control": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "enum": [
                                                            "PRESENT",
                                                            "DEFAULTED",
                                                            "TRUSTED",
                                                            "AUTO_INHERIT",
                                                            "PROTECTED",
                                                            "ACL_CONTROLS_ALL"
                                                        ],
                                                        "description": "control:\n * `ACL_CONTROLS_ALL` - All ACL controls,\n * `AUTO_INHERIT` - Set whether the ACL was created through inheritance,\n * `DEFAULTED` - Sets whether the ACL was established by default means,\n * `PRESENT` - Set when ACL is present on the object,\n * `PROTECTED` - Protects ACL from inherit operations,\n * `TRUSTED` - Set when ACL is provided by a trusted source"
                                                    }
                                                },
                                                "posix_special_permissions": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "enum": [
                                                            "STICKY_BIT",
                                                            "SET_GID",
                                                            "SET_UID",
                                                            "ACL_POSIX_SPECIAL_PERMISSIONS_ALL"
                                                        ],
                                                        "description": "posix_special_permissions:\n * `ACL_POSIX_SPECIAL_PERMISSIONS_ALL` - ACL_POSIX_SPECIAL_PERMISSIONS_ALL,\n * `SET_GID` - SET_GID,\n * `SET_UID` - SET_UID,\n * `STICKY_BIT` - STICKY_BIT"
                                                    }
                                                },
                                                "aces": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "type": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "ALLOWED",
                                                                    "DENIED"
                                                                ],
                                                                "description": "Type of this ACL entry:\n * `ALLOWED` - An ACL entry that grants rights,\n * `DENIED` - An ACL entry that denies rights"
                                                            },
                                                            "flags": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "OBJECT_INHERIT",
                                                                        "CONTAINER_INHERIT",
                                                                        "NO_PROPAGATE_INHERIT",
                                                                        "INHERIT_ONLY",
                                                                        "INHERITED",
                                                                        "ACE_FLAGS_ALL"
                                                                    ],
                                                                    "description": "ACE flags for this ACL entry:\n * `ACE_FLAGS_ALL` - All ACE flags,\n * `CONTAINER_INHERIT` - Children that are containers inherit as effective ACE,\n * `INHERITED` - Indicates the ACE was inherited,\n * `INHERIT_ONLY` - Indicates an inherit-only ACE that doesn't control access to the attached object,\n * `NO_PROPAGATE_INHERIT` - Prevent subsequent children from inheriting ACE,\n * `OBJECT_INHERIT` - Non-container children inherit as effective ACE. Container objects inherit as inherit-only ACE"
                                                                }
                                                            },
                                                            "trustee": {
                                                                "type": "string"
                                                            },
                                                            "trustee_details": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "id_type": {
                                                                        "type": "string",
                                                                        "enum": [
                                                                            "LOCAL_USER",
                                                                            "LOCAL_GROUP",
                                                                            "NFS_GID",
                                                                            "NFS_UID",
                                                                            "SMB_SID",
                                                                            "INTERNAL",
                                                                            "QUMULO_OPERATOR"
                                                                        ],
                                                                        "description": "id_type:\n * `INTERNAL` - INTERNAL,\n * `LOCAL_GROUP` - LOCAL_GROUP,\n * `LOCAL_USER` - LOCAL_USER,\n * `NFS_GID` - NFS_GID,\n * `NFS_UID` - NFS_UID,\n * `QUMULO_OPERATOR` - QUMULO_OPERATOR,\n * `SMB_SID` - SMB_SID"
                                                                    },
                                                                    "id_value": {
                                                                        "type": "string"
                                                                    }
                                                                }
                                                            },
                                                            "rights": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "READ",
                                                                        "READ_EA",
                                                                        "READ_ATTR",
                                                                        "READ_ACL",
                                                                        "WRITE_EA",
                                                                        "WRITE_ATTR",
                                                                        "WRITE_ACL",
                                                                        "CHANGE_OWNER",
                                                                        "WRITE_GROUP",
                                                                        "DELETE",
                                                                        "EXECUTE",
                                                                        "MODIFY",
                                                                        "EXTEND",
                                                                        "ADD_FILE",
                                                                        "ADD_SUBDIR",
                                                                        "DELETE_CHILD",
                                                                        "SYNCHRONIZE",
                                                                        "ACCESS_RIGHTS_ALL"
                                                                    ],
                                                                    "description": "Rights granted or denied for this ACL entry:\n * `ACCESS_RIGHTS_ALL` - All access rights,\n * `ADD_FILE` - File creation access,\n * `ADD_SUBDIR` - Directory creation access,\n * `CHANGE_OWNER` - Owner write access,\n * `DELETE` - Delete access,\n * `DELETE_CHILD` - Delete from directory access,\n * `EXECUTE` - Execute access,\n * `EXTEND` - File extension access,\n * `MODIFY` - File modification access,\n * `READ` - File read access,\n * `READ_ACL` - ACL read access,\n * `READ_ATTR` - Attribute read access,\n * `READ_EA` - Extended attribute read access,\n * `SYNCHRONIZE` - File synchronize access,\n * `WRITE_ACL` - ACL write access,\n * `WRITE_ATTR` - Attribute write access,\n * `WRITE_EA` - Extended attribute write access,\n * `WRITE_GROUP` - Group write access"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "files"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/files/{ref}/info/acl/explain-posix-mode": {
            "post": {
                "summary": "Explain the derived POSIX mode for a file/directory.",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "The file ID (UInt64) or the absolute path to the file. This page handles the URL-encoding of the path.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "snapshot",
                        "in": "query",
                        "description": "The snapshot ID that specifies the version of the file to read. If not specified, read the head version.",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "mode": {
                                            "type": "string"
                                        },
                                        "owner": {
                                            "type": "object",
                                            "properties": {
                                                "domain": {
                                                    "type": "string",
                                                    "enum": [
                                                        "LOCAL",
                                                        "API_NULL_DOMAIN",
                                                        "WORLD",
                                                        "POSIX_USER",
                                                        "POSIX_GROUP",
                                                        "ACTIVE_DIRECTORY",
                                                        "API_INVALID_DOMAIN",
                                                        "API_RESERVED_DOMAIN",
                                                        "API_INTERNAL_DOMAIN",
                                                        "API_OPERATOR_DOMAIN",
                                                        "API_CREATOR_DOMAIN"
                                                    ],
                                                    "description": "domain:\n * `ACTIVE_DIRECTORY` - ACTIVE_DIRECTORY,\n * `API_CREATOR_DOMAIN` - API_CREATOR_DOMAIN,\n * `API_INTERNAL_DOMAIN` - API_INTERNAL_DOMAIN,\n * `API_INVALID_DOMAIN` - API_INVALID_DOMAIN,\n * `API_NULL_DOMAIN` - API_NULL_DOMAIN,\n * `API_OPERATOR_DOMAIN` - API_OPERATOR_DOMAIN,\n * `API_RESERVED_DOMAIN` - API_RESERVED_DOMAIN,\n * `LOCAL` - LOCAL,\n * `POSIX_GROUP` - POSIX_GROUP,\n * `POSIX_USER` - POSIX_USER,\n * `WORLD` - WORLD"
                                                },
                                                "auth_id": {
                                                    "type": "string"
                                                },
                                                "uid": {
                                                    "type": "number"
                                                },
                                                "gid": {
                                                    "type": "number"
                                                },
                                                "sid": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "group_owner": {
                                            "type": "object",
                                            "properties": {
                                                "domain": {
                                                    "type": "string",
                                                    "enum": [
                                                        "LOCAL",
                                                        "API_NULL_DOMAIN",
                                                        "WORLD",
                                                        "POSIX_USER",
                                                        "POSIX_GROUP",
                                                        "ACTIVE_DIRECTORY",
                                                        "API_INVALID_DOMAIN",
                                                        "API_RESERVED_DOMAIN",
                                                        "API_INTERNAL_DOMAIN",
                                                        "API_OPERATOR_DOMAIN",
                                                        "API_CREATOR_DOMAIN"
                                                    ],
                                                    "description": "domain:\n * `ACTIVE_DIRECTORY` - ACTIVE_DIRECTORY,\n * `API_CREATOR_DOMAIN` - API_CREATOR_DOMAIN,\n * `API_INTERNAL_DOMAIN` - API_INTERNAL_DOMAIN,\n * `API_INVALID_DOMAIN` - API_INVALID_DOMAIN,\n * `API_NULL_DOMAIN` - API_NULL_DOMAIN,\n * `API_OPERATOR_DOMAIN` - API_OPERATOR_DOMAIN,\n * `API_RESERVED_DOMAIN` - API_RESERVED_DOMAIN,\n * `LOCAL` - LOCAL,\n * `POSIX_GROUP` - POSIX_GROUP,\n * `POSIX_USER` - POSIX_USER,\n * `WORLD` - WORLD"
                                                },
                                                "auth_id": {
                                                    "type": "string"
                                                },
                                                "uid": {
                                                    "type": "number"
                                                },
                                                "gid": {
                                                    "type": "number"
                                                },
                                                "sid": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "posix_special_permissions": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "enum": [
                                                    "STICKY_BIT",
                                                    "SET_GID",
                                                    "SET_UID",
                                                    "ACL_POSIX_SPECIAL_PERMISSIONS_ALL"
                                                ],
                                                "description": "posix_special_permissions:\n * `ACL_POSIX_SPECIAL_PERMISSIONS_ALL` - ACL_POSIX_SPECIAL_PERMISSIONS_ALL,\n * `SET_GID` - SET_GID,\n * `SET_UID` - SET_UID,\n * `STICKY_BIT` - STICKY_BIT"
                                            }
                                        },
                                        "annotated_acl": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "ace": {
                                                        "type": "object",
                                                        "properties": {
                                                            "type": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "ALLOWED",
                                                                    "DENIED"
                                                                ],
                                                                "description": "Type of this ACL entry:\n * `ALLOWED` - An ACL entry that grants rights,\n * `DENIED` - An ACL entry that denies rights"
                                                            },
                                                            "flags": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "OBJECT_INHERIT",
                                                                        "CONTAINER_INHERIT",
                                                                        "NO_PROPAGATE_INHERIT",
                                                                        "INHERIT_ONLY",
                                                                        "INHERITED",
                                                                        "ACE_FLAGS_ALL"
                                                                    ],
                                                                    "description": "ACE flags for this ACL entry:\n * `ACE_FLAGS_ALL` - All ACE flags,\n * `CONTAINER_INHERIT` - Children that are containers inherit as effective ACE,\n * `INHERITED` - Indicates the ACE was inherited,\n * `INHERIT_ONLY` - Indicates an inherit-only ACE that doesn't control access to the attached object,\n * `NO_PROPAGATE_INHERIT` - Prevent subsequent children from inheriting ACE,\n * `OBJECT_INHERIT` - Non-container children inherit as effective ACE. Container objects inherit as inherit-only ACE"
                                                                }
                                                            },
                                                            "trustee": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "domain": {
                                                                        "type": "string",
                                                                        "enum": [
                                                                            "LOCAL",
                                                                            "API_NULL_DOMAIN",
                                                                            "WORLD",
                                                                            "POSIX_USER",
                                                                            "POSIX_GROUP",
                                                                            "ACTIVE_DIRECTORY",
                                                                            "API_INVALID_DOMAIN",
                                                                            "API_RESERVED_DOMAIN",
                                                                            "API_INTERNAL_DOMAIN",
                                                                            "API_OPERATOR_DOMAIN",
                                                                            "API_CREATOR_DOMAIN"
                                                                        ],
                                                                        "description": "domain:\n * `ACTIVE_DIRECTORY` - ACTIVE_DIRECTORY,\n * `API_CREATOR_DOMAIN` - API_CREATOR_DOMAIN,\n * `API_INTERNAL_DOMAIN` - API_INTERNAL_DOMAIN,\n * `API_INVALID_DOMAIN` - API_INVALID_DOMAIN,\n * `API_NULL_DOMAIN` - API_NULL_DOMAIN,\n * `API_OPERATOR_DOMAIN` - API_OPERATOR_DOMAIN,\n * `API_RESERVED_DOMAIN` - API_RESERVED_DOMAIN,\n * `LOCAL` - LOCAL,\n * `POSIX_GROUP` - POSIX_GROUP,\n * `POSIX_USER` - POSIX_USER,\n * `WORLD` - WORLD"
                                                                    },
                                                                    "auth_id": {
                                                                        "type": "string"
                                                                    },
                                                                    "uid": {
                                                                        "type": "number"
                                                                    },
                                                                    "gid": {
                                                                        "type": "number"
                                                                    },
                                                                    "sid": {
                                                                        "type": "string"
                                                                    },
                                                                    "name": {
                                                                        "type": "string"
                                                                    }
                                                                }
                                                            },
                                                            "rights": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "READ",
                                                                        "READ_EA",
                                                                        "READ_ATTR",
                                                                        "READ_ACL",
                                                                        "WRITE_EA",
                                                                        "WRITE_ATTR",
                                                                        "WRITE_ACL",
                                                                        "CHANGE_OWNER",
                                                                        "WRITE_GROUP",
                                                                        "DELETE",
                                                                        "EXECUTE",
                                                                        "MODIFY",
                                                                        "EXTEND",
                                                                        "ADD_FILE",
                                                                        "ADD_SUBDIR",
                                                                        "DELETE_CHILD",
                                                                        "SYNCHRONIZE",
                                                                        "ACCESS_RIGHTS_ALL"
                                                                    ],
                                                                    "description": "Rights granted or denied for this ACL entry:\n * `ACCESS_RIGHTS_ALL` - All access rights,\n * `ADD_FILE` - File creation access,\n * `ADD_SUBDIR` - Directory creation access,\n * `CHANGE_OWNER` - Owner write access,\n * `DELETE` - Delete access,\n * `DELETE_CHILD` - Delete from directory access,\n * `EXECUTE` - Execute access,\n * `EXTEND` - File extension access,\n * `MODIFY` - File modification access,\n * `READ` - File read access,\n * `READ_ACL` - ACL read access,\n * `READ_ATTR` - Attribute read access,\n * `READ_EA` - Extended attribute read access,\n * `SYNCHRONIZE` - File synchronize access,\n * `WRITE_ACL` - ACL write access,\n * `WRITE_ATTR` - Attribute write access,\n * `WRITE_EA` - Extended attribute write access,\n * `WRITE_GROUP` - Group write access"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "is_inherit_only": {
                                                        "type": "boolean"
                                                    },
                                                    "owner_rights": {
                                                        "type": "object",
                                                        "properties": {
                                                            "match": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "NONE",
                                                                    "EQUIVALENT",
                                                                    "EVERYONE",
                                                                    "POTENTIALLY_AFFECTED"
                                                                ],
                                                                "description": "Match information for the current ACE trustee, i.e. why the ACE is affecting the mode segment or not.:\n * `EQUIVALENT` - TRUSTEE_MATCH_EQUIVALENT,\n * `EVERYONE` - TRUSTEE_MATCH_EVERYONE,\n * `NONE` - TRUSTEE_MATCH_NONE,\n * `POTENTIALLY_AFFECTED` - TRUSTEE_MATCH_POTENTIALLY_AFFECTED"
                                                            },
                                                            "newly_allowed": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "READ",
                                                                        "READ_EA",
                                                                        "READ_ATTR",
                                                                        "READ_ACL",
                                                                        "WRITE_EA",
                                                                        "WRITE_ATTR",
                                                                        "WRITE_ACL",
                                                                        "CHANGE_OWNER",
                                                                        "WRITE_GROUP",
                                                                        "DELETE",
                                                                        "EXECUTE",
                                                                        "MODIFY",
                                                                        "EXTEND",
                                                                        "ADD_FILE",
                                                                        "ADD_SUBDIR",
                                                                        "DELETE_CHILD",
                                                                        "SYNCHRONIZE",
                                                                        "ACCESS_RIGHTS_ALL"
                                                                    ],
                                                                    "description": "Rights allowed by the current ACE.:\n * `ACCESS_RIGHTS_ALL` - All access rights,\n * `ADD_FILE` - File creation access,\n * `ADD_SUBDIR` - Directory creation access,\n * `CHANGE_OWNER` - Owner write access,\n * `DELETE` - Delete access,\n * `DELETE_CHILD` - Delete from directory access,\n * `EXECUTE` - Execute access,\n * `EXTEND` - File extension access,\n * `MODIFY` - File modification access,\n * `READ` - File read access,\n * `READ_ACL` - ACL read access,\n * `READ_ATTR` - Attribute read access,\n * `READ_EA` - Extended attribute read access,\n * `SYNCHRONIZE` - File synchronize access,\n * `WRITE_ACL` - ACL write access,\n * `WRITE_ATTR` - Attribute write access,\n * `WRITE_EA` - Extended attribute write access,\n * `WRITE_GROUP` - Group write access"
                                                                }
                                                            },
                                                            "cumulative_allowed": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "READ",
                                                                        "READ_EA",
                                                                        "READ_ATTR",
                                                                        "READ_ACL",
                                                                        "WRITE_EA",
                                                                        "WRITE_ATTR",
                                                                        "WRITE_ACL",
                                                                        "CHANGE_OWNER",
                                                                        "WRITE_GROUP",
                                                                        "DELETE",
                                                                        "EXECUTE",
                                                                        "MODIFY",
                                                                        "EXTEND",
                                                                        "ADD_FILE",
                                                                        "ADD_SUBDIR",
                                                                        "DELETE_CHILD",
                                                                        "SYNCHRONIZE",
                                                                        "ACCESS_RIGHTS_ALL"
                                                                    ],
                                                                    "description": "Rights allowed in total so far.:\n * `ACCESS_RIGHTS_ALL` - All access rights,\n * `ADD_FILE` - File creation access,\n * `ADD_SUBDIR` - Directory creation access,\n * `CHANGE_OWNER` - Owner write access,\n * `DELETE` - Delete access,\n * `DELETE_CHILD` - Delete from directory access,\n * `EXECUTE` - Execute access,\n * `EXTEND` - File extension access,\n * `MODIFY` - File modification access,\n * `READ` - File read access,\n * `READ_ACL` - ACL read access,\n * `READ_ATTR` - Attribute read access,\n * `READ_EA` - Extended attribute read access,\n * `SYNCHRONIZE` - File synchronize access,\n * `WRITE_ACL` - ACL write access,\n * `WRITE_ATTR` - Attribute write access,\n * `WRITE_EA` - Extended attribute write access,\n * `WRITE_GROUP` - Group write access"
                                                                }
                                                            },
                                                            "newly_denied": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "READ",
                                                                        "READ_EA",
                                                                        "READ_ATTR",
                                                                        "READ_ACL",
                                                                        "WRITE_EA",
                                                                        "WRITE_ATTR",
                                                                        "WRITE_ACL",
                                                                        "CHANGE_OWNER",
                                                                        "WRITE_GROUP",
                                                                        "DELETE",
                                                                        "EXECUTE",
                                                                        "MODIFY",
                                                                        "EXTEND",
                                                                        "ADD_FILE",
                                                                        "ADD_SUBDIR",
                                                                        "DELETE_CHILD",
                                                                        "SYNCHRONIZE",
                                                                        "ACCESS_RIGHTS_ALL"
                                                                    ],
                                                                    "description": "Rights denied by the current ACE.:\n * `ACCESS_RIGHTS_ALL` - All access rights,\n * `ADD_FILE` - File creation access,\n * `ADD_SUBDIR` - Directory creation access,\n * `CHANGE_OWNER` - Owner write access,\n * `DELETE` - Delete access,\n * `DELETE_CHILD` - Delete from directory access,\n * `EXECUTE` - Execute access,\n * `EXTEND` - File extension access,\n * `MODIFY` - File modification access,\n * `READ` - File read access,\n * `READ_ACL` - ACL read access,\n * `READ_ATTR` - Attribute read access,\n * `READ_EA` - Extended attribute read access,\n * `SYNCHRONIZE` - File synchronize access,\n * `WRITE_ACL` - ACL write access,\n * `WRITE_ATTR` - Attribute write access,\n * `WRITE_EA` - Extended attribute write access,\n * `WRITE_GROUP` - Group write access"
                                                                }
                                                            },
                                                            "cumulative_denied": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "READ",
                                                                        "READ_EA",
                                                                        "READ_ATTR",
                                                                        "READ_ACL",
                                                                        "WRITE_EA",
                                                                        "WRITE_ATTR",
                                                                        "WRITE_ACL",
                                                                        "CHANGE_OWNER",
                                                                        "WRITE_GROUP",
                                                                        "DELETE",
                                                                        "EXECUTE",
                                                                        "MODIFY",
                                                                        "EXTEND",
                                                                        "ADD_FILE",
                                                                        "ADD_SUBDIR",
                                                                        "DELETE_CHILD",
                                                                        "SYNCHRONIZE",
                                                                        "ACCESS_RIGHTS_ALL"
                                                                    ],
                                                                    "description": "Rights denied in total so far.:\n * `ACCESS_RIGHTS_ALL` - All access rights,\n * `ADD_FILE` - File creation access,\n * `ADD_SUBDIR` - Directory creation access,\n * `CHANGE_OWNER` - Owner write access,\n * `DELETE` - Delete access,\n * `DELETE_CHILD` - Delete from directory access,\n * `EXECUTE` - Execute access,\n * `EXTEND` - File extension access,\n * `MODIFY` - File modification access,\n * `READ` - File read access,\n * `READ_ACL` - ACL read access,\n * `READ_ATTR` - Attribute read access,\n * `READ_EA` - Extended attribute read access,\n * `SYNCHRONIZE` - File synchronize access,\n * `WRITE_ACL` - ACL write access,\n * `WRITE_ATTR` - Attribute write access,\n * `WRITE_EA` - Extended attribute write access,\n * `WRITE_GROUP` - Group write access"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "group_rights": {
                                                        "type": "object",
                                                        "properties": {
                                                            "match": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "NONE",
                                                                    "EQUIVALENT",
                                                                    "EVERYONE",
                                                                    "POTENTIALLY_AFFECTED"
                                                                ],
                                                                "description": "Match information for the current ACE trustee, i.e. why the ACE is affecting the mode segment or not.:\n * `EQUIVALENT` - TRUSTEE_MATCH_EQUIVALENT,\n * `EVERYONE` - TRUSTEE_MATCH_EVERYONE,\n * `NONE` - TRUSTEE_MATCH_NONE,\n * `POTENTIALLY_AFFECTED` - TRUSTEE_MATCH_POTENTIALLY_AFFECTED"
                                                            },
                                                            "newly_allowed": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "READ",
                                                                        "READ_EA",
                                                                        "READ_ATTR",
                                                                        "READ_ACL",
                                                                        "WRITE_EA",
                                                                        "WRITE_ATTR",
                                                                        "WRITE_ACL",
                                                                        "CHANGE_OWNER",
                                                                        "WRITE_GROUP",
                                                                        "DELETE",
                                                                        "EXECUTE",
                                                                        "MODIFY",
                                                                        "EXTEND",
                                                                        "ADD_FILE",
                                                                        "ADD_SUBDIR",
                                                                        "DELETE_CHILD",
                                                                        "SYNCHRONIZE",
                                                                        "ACCESS_RIGHTS_ALL"
                                                                    ],
                                                                    "description": "Rights allowed by the current ACE.:\n * `ACCESS_RIGHTS_ALL` - All access rights,\n * `ADD_FILE` - File creation access,\n * `ADD_SUBDIR` - Directory creation access,\n * `CHANGE_OWNER` - Owner write access,\n * `DELETE` - Delete access,\n * `DELETE_CHILD` - Delete from directory access,\n * `EXECUTE` - Execute access,\n * `EXTEND` - File extension access,\n * `MODIFY` - File modification access,\n * `READ` - File read access,\n * `READ_ACL` - ACL read access,\n * `READ_ATTR` - Attribute read access,\n * `READ_EA` - Extended attribute read access,\n * `SYNCHRONIZE` - File synchronize access,\n * `WRITE_ACL` - ACL write access,\n * `WRITE_ATTR` - Attribute write access,\n * `WRITE_EA` - Extended attribute write access,\n * `WRITE_GROUP` - Group write access"
                                                                }
                                                            },
                                                            "cumulative_allowed": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "READ",
                                                                        "READ_EA",
                                                                        "READ_ATTR",
                                                                        "READ_ACL",
                                                                        "WRITE_EA",
                                                                        "WRITE_ATTR",
                                                                        "WRITE_ACL",
                                                                        "CHANGE_OWNER",
                                                                        "WRITE_GROUP",
                                                                        "DELETE",
                                                                        "EXECUTE",
                                                                        "MODIFY",
                                                                        "EXTEND",
                                                                        "ADD_FILE",
                                                                        "ADD_SUBDIR",
                                                                        "DELETE_CHILD",
                                                                        "SYNCHRONIZE",
                                                                        "ACCESS_RIGHTS_ALL"
                                                                    ],
                                                                    "description": "Rights allowed in total so far.:\n * `ACCESS_RIGHTS_ALL` - All access rights,\n * `ADD_FILE` - File creation access,\n * `ADD_SUBDIR` - Directory creation access,\n * `CHANGE_OWNER` - Owner write access,\n * `DELETE` - Delete access,\n * `DELETE_CHILD` - Delete from directory access,\n * `EXECUTE` - Execute access,\n * `EXTEND` - File extension access,\n * `MODIFY` - File modification access,\n * `READ` - File read access,\n * `READ_ACL` - ACL read access,\n * `READ_ATTR` - Attribute read access,\n * `READ_EA` - Extended attribute read access,\n * `SYNCHRONIZE` - File synchronize access,\n * `WRITE_ACL` - ACL write access,\n * `WRITE_ATTR` - Attribute write access,\n * `WRITE_EA` - Extended attribute write access,\n * `WRITE_GROUP` - Group write access"
                                                                }
                                                            },
                                                            "newly_denied": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "READ",
                                                                        "READ_EA",
                                                                        "READ_ATTR",
                                                                        "READ_ACL",
                                                                        "WRITE_EA",
                                                                        "WRITE_ATTR",
                                                                        "WRITE_ACL",
                                                                        "CHANGE_OWNER",
                                                                        "WRITE_GROUP",
                                                                        "DELETE",
                                                                        "EXECUTE",
                                                                        "MODIFY",
                                                                        "EXTEND",
                                                                        "ADD_FILE",
                                                                        "ADD_SUBDIR",
                                                                        "DELETE_CHILD",
                                                                        "SYNCHRONIZE",
                                                                        "ACCESS_RIGHTS_ALL"
                                                                    ],
                                                                    "description": "Rights denied by the current ACE.:\n * `ACCESS_RIGHTS_ALL` - All access rights,\n * `ADD_FILE` - File creation access,\n * `ADD_SUBDIR` - Directory creation access,\n * `CHANGE_OWNER` - Owner write access,\n * `DELETE` - Delete access,\n * `DELETE_CHILD` - Delete from directory access,\n * `EXECUTE` - Execute access,\n * `EXTEND` - File extension access,\n * `MODIFY` - File modification access,\n * `READ` - File read access,\n * `READ_ACL` - ACL read access,\n * `READ_ATTR` - Attribute read access,\n * `READ_EA` - Extended attribute read access,\n * `SYNCHRONIZE` - File synchronize access,\n * `WRITE_ACL` - ACL write access,\n * `WRITE_ATTR` - Attribute write access,\n * `WRITE_EA` - Extended attribute write access,\n * `WRITE_GROUP` - Group write access"
                                                                }
                                                            },
                                                            "cumulative_denied": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "READ",
                                                                        "READ_EA",
                                                                        "READ_ATTR",
                                                                        "READ_ACL",
                                                                        "WRITE_EA",
                                                                        "WRITE_ATTR",
                                                                        "WRITE_ACL",
                                                                        "CHANGE_OWNER",
                                                                        "WRITE_GROUP",
                                                                        "DELETE",
                                                                        "EXECUTE",
                                                                        "MODIFY",
                                                                        "EXTEND",
                                                                        "ADD_FILE",
                                                                        "ADD_SUBDIR",
                                                                        "DELETE_CHILD",
                                                                        "SYNCHRONIZE",
                                                                        "ACCESS_RIGHTS_ALL"
                                                                    ],
                                                                    "description": "Rights denied in total so far.:\n * `ACCESS_RIGHTS_ALL` - All access rights,\n * `ADD_FILE` - File creation access,\n * `ADD_SUBDIR` - Directory creation access,\n * `CHANGE_OWNER` - Owner write access,\n * `DELETE` - Delete access,\n * `DELETE_CHILD` - Delete from directory access,\n * `EXECUTE` - Execute access,\n * `EXTEND` - File extension access,\n * `MODIFY` - File modification access,\n * `READ` - File read access,\n * `READ_ACL` - ACL read access,\n * `READ_ATTR` - Attribute read access,\n * `READ_EA` - Extended attribute read access,\n * `SYNCHRONIZE` - File synchronize access,\n * `WRITE_ACL` - ACL write access,\n * `WRITE_ATTR` - Attribute write access,\n * `WRITE_EA` - Extended attribute write access,\n * `WRITE_GROUP` - Group write access"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "other_rights": {
                                                        "type": "object",
                                                        "properties": {
                                                            "match": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "NONE",
                                                                    "EQUIVALENT",
                                                                    "EVERYONE",
                                                                    "POTENTIALLY_AFFECTED"
                                                                ],
                                                                "description": "Match information for the current ACE trustee, i.e. why the ACE is affecting the mode segment or not.:\n * `EQUIVALENT` - TRUSTEE_MATCH_EQUIVALENT,\n * `EVERYONE` - TRUSTEE_MATCH_EVERYONE,\n * `NONE` - TRUSTEE_MATCH_NONE,\n * `POTENTIALLY_AFFECTED` - TRUSTEE_MATCH_POTENTIALLY_AFFECTED"
                                                            },
                                                            "newly_allowed": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "READ",
                                                                        "READ_EA",
                                                                        "READ_ATTR",
                                                                        "READ_ACL",
                                                                        "WRITE_EA",
                                                                        "WRITE_ATTR",
                                                                        "WRITE_ACL",
                                                                        "CHANGE_OWNER",
                                                                        "WRITE_GROUP",
                                                                        "DELETE",
                                                                        "EXECUTE",
                                                                        "MODIFY",
                                                                        "EXTEND",
                                                                        "ADD_FILE",
                                                                        "ADD_SUBDIR",
                                                                        "DELETE_CHILD",
                                                                        "SYNCHRONIZE",
                                                                        "ACCESS_RIGHTS_ALL"
                                                                    ],
                                                                    "description": "Rights allowed by the current ACE.:\n * `ACCESS_RIGHTS_ALL` - All access rights,\n * `ADD_FILE` - File creation access,\n * `ADD_SUBDIR` - Directory creation access,\n * `CHANGE_OWNER` - Owner write access,\n * `DELETE` - Delete access,\n * `DELETE_CHILD` - Delete from directory access,\n * `EXECUTE` - Execute access,\n * `EXTEND` - File extension access,\n * `MODIFY` - File modification access,\n * `READ` - File read access,\n * `READ_ACL` - ACL read access,\n * `READ_ATTR` - Attribute read access,\n * `READ_EA` - Extended attribute read access,\n * `SYNCHRONIZE` - File synchronize access,\n * `WRITE_ACL` - ACL write access,\n * `WRITE_ATTR` - Attribute write access,\n * `WRITE_EA` - Extended attribute write access,\n * `WRITE_GROUP` - Group write access"
                                                                }
                                                            },
                                                            "cumulative_allowed": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "READ",
                                                                        "READ_EA",
                                                                        "READ_ATTR",
                                                                        "READ_ACL",
                                                                        "WRITE_EA",
                                                                        "WRITE_ATTR",
                                                                        "WRITE_ACL",
                                                                        "CHANGE_OWNER",
                                                                        "WRITE_GROUP",
                                                                        "DELETE",
                                                                        "EXECUTE",
                                                                        "MODIFY",
                                                                        "EXTEND",
                                                                        "ADD_FILE",
                                                                        "ADD_SUBDIR",
                                                                        "DELETE_CHILD",
                                                                        "SYNCHRONIZE",
                                                                        "ACCESS_RIGHTS_ALL"
                                                                    ],
                                                                    "description": "Rights allowed in total so far.:\n * `ACCESS_RIGHTS_ALL` - All access rights,\n * `ADD_FILE` - File creation access,\n * `ADD_SUBDIR` - Directory creation access,\n * `CHANGE_OWNER` - Owner write access,\n * `DELETE` - Delete access,\n * `DELETE_CHILD` - Delete from directory access,\n * `EXECUTE` - Execute access,\n * `EXTEND` - File extension access,\n * `MODIFY` - File modification access,\n * `READ` - File read access,\n * `READ_ACL` - ACL read access,\n * `READ_ATTR` - Attribute read access,\n * `READ_EA` - Extended attribute read access,\n * `SYNCHRONIZE` - File synchronize access,\n * `WRITE_ACL` - ACL write access,\n * `WRITE_ATTR` - Attribute write access,\n * `WRITE_EA` - Extended attribute write access,\n * `WRITE_GROUP` - Group write access"
                                                                }
                                                            },
                                                            "newly_denied": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "READ",
                                                                        "READ_EA",
                                                                        "READ_ATTR",
                                                                        "READ_ACL",
                                                                        "WRITE_EA",
                                                                        "WRITE_ATTR",
                                                                        "WRITE_ACL",
                                                                        "CHANGE_OWNER",
                                                                        "WRITE_GROUP",
                                                                        "DELETE",
                                                                        "EXECUTE",
                                                                        "MODIFY",
                                                                        "EXTEND",
                                                                        "ADD_FILE",
                                                                        "ADD_SUBDIR",
                                                                        "DELETE_CHILD",
                                                                        "SYNCHRONIZE",
                                                                        "ACCESS_RIGHTS_ALL"
                                                                    ],
                                                                    "description": "Rights denied by the current ACE.:\n * `ACCESS_RIGHTS_ALL` - All access rights,\n * `ADD_FILE` - File creation access,\n * `ADD_SUBDIR` - Directory creation access,\n * `CHANGE_OWNER` - Owner write access,\n * `DELETE` - Delete access,\n * `DELETE_CHILD` - Delete from directory access,\n * `EXECUTE` - Execute access,\n * `EXTEND` - File extension access,\n * `MODIFY` - File modification access,\n * `READ` - File read access,\n * `READ_ACL` - ACL read access,\n * `READ_ATTR` - Attribute read access,\n * `READ_EA` - Extended attribute read access,\n * `SYNCHRONIZE` - File synchronize access,\n * `WRITE_ACL` - ACL write access,\n * `WRITE_ATTR` - Attribute write access,\n * `WRITE_EA` - Extended attribute write access,\n * `WRITE_GROUP` - Group write access"
                                                                }
                                                            },
                                                            "cumulative_denied": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "READ",
                                                                        "READ_EA",
                                                                        "READ_ATTR",
                                                                        "READ_ACL",
                                                                        "WRITE_EA",
                                                                        "WRITE_ATTR",
                                                                        "WRITE_ACL",
                                                                        "CHANGE_OWNER",
                                                                        "WRITE_GROUP",
                                                                        "DELETE",
                                                                        "EXECUTE",
                                                                        "MODIFY",
                                                                        "EXTEND",
                                                                        "ADD_FILE",
                                                                        "ADD_SUBDIR",
                                                                        "DELETE_CHILD",
                                                                        "SYNCHRONIZE",
                                                                        "ACCESS_RIGHTS_ALL"
                                                                    ],
                                                                    "description": "Rights denied in total so far.:\n * `ACCESS_RIGHTS_ALL` - All access rights,\n * `ADD_FILE` - File creation access,\n * `ADD_SUBDIR` - Directory creation access,\n * `CHANGE_OWNER` - Owner write access,\n * `DELETE` - Delete access,\n * `DELETE_CHILD` - Delete from directory access,\n * `EXECUTE` - Execute access,\n * `EXTEND` - File extension access,\n * `MODIFY` - File modification access,\n * `READ` - File read access,\n * `READ_ACL` - ACL read access,\n * `READ_ATTR` - Attribute read access,\n * `READ_EA` - Extended attribute read access,\n * `SYNCHRONIZE` - File synchronize access,\n * `WRITE_ACL` - ACL write access,\n * `WRITE_ATTR` - Attribute write access,\n * `WRITE_EA` - Extended attribute write access,\n * `WRITE_GROUP` - Group write access"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "mode_bits_granted": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "files"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/files/{ref}/info/acl/explain-set-mode": {
            "post": {
                "summary": "Explain the effect of setting a POSIX mode on a file/directory.",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "The file ID (UInt64) or the absolute path to the file. This page handles the URL-encoding of the path.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "snapshot",
                        "in": "query",
                        "description": "The snapshot ID that specifies the version of the file to read. If not specified, read the head version.",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "owner": {
                                            "type": "object",
                                            "properties": {
                                                "domain": {
                                                    "type": "string",
                                                    "enum": [
                                                        "LOCAL",
                                                        "API_NULL_DOMAIN",
                                                        "WORLD",
                                                        "POSIX_USER",
                                                        "POSIX_GROUP",
                                                        "ACTIVE_DIRECTORY",
                                                        "API_INVALID_DOMAIN",
                                                        "API_RESERVED_DOMAIN",
                                                        "API_INTERNAL_DOMAIN",
                                                        "API_OPERATOR_DOMAIN",
                                                        "API_CREATOR_DOMAIN"
                                                    ],
                                                    "description": "domain:\n * `ACTIVE_DIRECTORY` - ACTIVE_DIRECTORY,\n * `API_CREATOR_DOMAIN` - API_CREATOR_DOMAIN,\n * `API_INTERNAL_DOMAIN` - API_INTERNAL_DOMAIN,\n * `API_INVALID_DOMAIN` - API_INVALID_DOMAIN,\n * `API_NULL_DOMAIN` - API_NULL_DOMAIN,\n * `API_OPERATOR_DOMAIN` - API_OPERATOR_DOMAIN,\n * `API_RESERVED_DOMAIN` - API_RESERVED_DOMAIN,\n * `LOCAL` - LOCAL,\n * `POSIX_GROUP` - POSIX_GROUP,\n * `POSIX_USER` - POSIX_USER,\n * `WORLD` - WORLD"
                                                },
                                                "auth_id": {
                                                    "type": "string"
                                                },
                                                "uid": {
                                                    "type": "number"
                                                },
                                                "gid": {
                                                    "type": "number"
                                                },
                                                "sid": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "group_owner": {
                                            "type": "object",
                                            "properties": {
                                                "domain": {
                                                    "type": "string",
                                                    "enum": [
                                                        "LOCAL",
                                                        "API_NULL_DOMAIN",
                                                        "WORLD",
                                                        "POSIX_USER",
                                                        "POSIX_GROUP",
                                                        "ACTIVE_DIRECTORY",
                                                        "API_INVALID_DOMAIN",
                                                        "API_RESERVED_DOMAIN",
                                                        "API_INTERNAL_DOMAIN",
                                                        "API_OPERATOR_DOMAIN",
                                                        "API_CREATOR_DOMAIN"
                                                    ],
                                                    "description": "domain:\n * `ACTIVE_DIRECTORY` - ACTIVE_DIRECTORY,\n * `API_CREATOR_DOMAIN` - API_CREATOR_DOMAIN,\n * `API_INTERNAL_DOMAIN` - API_INTERNAL_DOMAIN,\n * `API_INVALID_DOMAIN` - API_INVALID_DOMAIN,\n * `API_NULL_DOMAIN` - API_NULL_DOMAIN,\n * `API_OPERATOR_DOMAIN` - API_OPERATOR_DOMAIN,\n * `API_RESERVED_DOMAIN` - API_RESERVED_DOMAIN,\n * `LOCAL` - LOCAL,\n * `POSIX_GROUP` - POSIX_GROUP,\n * `POSIX_USER` - POSIX_USER,\n * `WORLD` - WORLD"
                                                },
                                                "auth_id": {
                                                    "type": "string"
                                                },
                                                "uid": {
                                                    "type": "number"
                                                },
                                                "gid": {
                                                    "type": "number"
                                                },
                                                "sid": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "owner_rights_from_mode": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "enum": [
                                                    "READ",
                                                    "READ_EA",
                                                    "READ_ATTR",
                                                    "READ_ACL",
                                                    "WRITE_EA",
                                                    "WRITE_ATTR",
                                                    "WRITE_ACL",
                                                    "CHANGE_OWNER",
                                                    "WRITE_GROUP",
                                                    "DELETE",
                                                    "EXECUTE",
                                                    "MODIFY",
                                                    "EXTEND",
                                                    "ADD_FILE",
                                                    "ADD_SUBDIR",
                                                    "DELETE_CHILD",
                                                    "SYNCHRONIZE",
                                                    "ACCESS_RIGHTS_ALL"
                                                ],
                                                "description": "The rights granted to the POSIX owner by the requested mode.:\n * `ACCESS_RIGHTS_ALL` - All access rights,\n * `ADD_FILE` - File creation access,\n * `ADD_SUBDIR` - Directory creation access,\n * `CHANGE_OWNER` - Owner write access,\n * `DELETE` - Delete access,\n * `DELETE_CHILD` - Delete from directory access,\n * `EXECUTE` - Execute access,\n * `EXTEND` - File extension access,\n * `MODIFY` - File modification access,\n * `READ` - File read access,\n * `READ_ACL` - ACL read access,\n * `READ_ATTR` - Attribute read access,\n * `READ_EA` - Extended attribute read access,\n * `SYNCHRONIZE` - File synchronize access,\n * `WRITE_ACL` - ACL write access,\n * `WRITE_ATTR` - Attribute write access,\n * `WRITE_EA` - Extended attribute write access,\n * `WRITE_GROUP` - Group write access"
                                            }
                                        },
                                        "group_rights_from_mode": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "enum": [
                                                    "READ",
                                                    "READ_EA",
                                                    "READ_ATTR",
                                                    "READ_ACL",
                                                    "WRITE_EA",
                                                    "WRITE_ATTR",
                                                    "WRITE_ACL",
                                                    "CHANGE_OWNER",
                                                    "WRITE_GROUP",
                                                    "DELETE",
                                                    "EXECUTE",
                                                    "MODIFY",
                                                    "EXTEND",
                                                    "ADD_FILE",
                                                    "ADD_SUBDIR",
                                                    "DELETE_CHILD",
                                                    "SYNCHRONIZE",
                                                    "ACCESS_RIGHTS_ALL"
                                                ],
                                                "description": "The rights granted to the POSIX group by the requested mode.:\n * `ACCESS_RIGHTS_ALL` - All access rights,\n * `ADD_FILE` - File creation access,\n * `ADD_SUBDIR` - Directory creation access,\n * `CHANGE_OWNER` - Owner write access,\n * `DELETE` - Delete access,\n * `DELETE_CHILD` - Delete from directory access,\n * `EXECUTE` - Execute access,\n * `EXTEND` - File extension access,\n * `MODIFY` - File modification access,\n * `READ` - File read access,\n * `READ_ACL` - ACL read access,\n * `READ_ATTR` - Attribute read access,\n * `READ_EA` - Extended attribute read access,\n * `SYNCHRONIZE` - File synchronize access,\n * `WRITE_ACL` - ACL write access,\n * `WRITE_ATTR` - Attribute write access,\n * `WRITE_EA` - Extended attribute write access,\n * `WRITE_GROUP` - Group write access"
                                            }
                                        },
                                        "other_rights_from_mode": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "enum": [
                                                    "READ",
                                                    "READ_EA",
                                                    "READ_ATTR",
                                                    "READ_ACL",
                                                    "WRITE_EA",
                                                    "WRITE_ATTR",
                                                    "WRITE_ACL",
                                                    "CHANGE_OWNER",
                                                    "WRITE_GROUP",
                                                    "DELETE",
                                                    "EXECUTE",
                                                    "MODIFY",
                                                    "EXTEND",
                                                    "ADD_FILE",
                                                    "ADD_SUBDIR",
                                                    "DELETE_CHILD",
                                                    "SYNCHRONIZE",
                                                    "ACCESS_RIGHTS_ALL"
                                                ],
                                                "description": "The rights granted to the POSIX other by the requested mode.:\n * `ACCESS_RIGHTS_ALL` - All access rights,\n * `ADD_FILE` - File creation access,\n * `ADD_SUBDIR` - Directory creation access,\n * `CHANGE_OWNER` - Owner write access,\n * `DELETE` - Delete access,\n * `DELETE_CHILD` - Delete from directory access,\n * `EXECUTE` - Execute access,\n * `EXTEND` - File extension access,\n * `MODIFY` - File modification access,\n * `READ` - File read access,\n * `READ_ACL` - ACL read access,\n * `READ_ATTR` - Attribute read access,\n * `READ_EA` - Extended attribute read access,\n * `SYNCHRONIZE` - File synchronize access,\n * `WRITE_ACL` - ACL write access,\n * `WRITE_ATTR` - Attribute write access,\n * `WRITE_EA` - Extended attribute write access,\n * `WRITE_GROUP` - Group write access"
                                            }
                                        },
                                        "max_extra_ace_allow": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "enum": [
                                                    "READ",
                                                    "READ_EA",
                                                    "READ_ATTR",
                                                    "READ_ACL",
                                                    "WRITE_EA",
                                                    "WRITE_ATTR",
                                                    "WRITE_ACL",
                                                    "CHANGE_OWNER",
                                                    "WRITE_GROUP",
                                                    "DELETE",
                                                    "EXECUTE",
                                                    "MODIFY",
                                                    "EXTEND",
                                                    "ADD_FILE",
                                                    "ADD_SUBDIR",
                                                    "DELETE_CHILD",
                                                    "SYNCHRONIZE",
                                                    "ACCESS_RIGHTS_ALL"
                                                ],
                                                "description": "The maximum rights that any extra allow ACE can specify.:\n * `ACCESS_RIGHTS_ALL` - All access rights,\n * `ADD_FILE` - File creation access,\n * `ADD_SUBDIR` - Directory creation access,\n * `CHANGE_OWNER` - Owner write access,\n * `DELETE` - Delete access,\n * `DELETE_CHILD` - Delete from directory access,\n * `EXECUTE` - Execute access,\n * `EXTEND` - File extension access,\n * `MODIFY` - File modification access,\n * `READ` - File read access,\n * `READ_ACL` - ACL read access,\n * `READ_ATTR` - Attribute read access,\n * `READ_EA` - Extended attribute read access,\n * `SYNCHRONIZE` - File synchronize access,\n * `WRITE_ACL` - ACL write access,\n * `WRITE_ATTR` - Attribute write access,\n * `WRITE_EA` - Extended attribute write access,\n * `WRITE_GROUP` - Group write access"
                                            }
                                        },
                                        "max_extra_ace_deny": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "enum": [
                                                    "READ",
                                                    "READ_EA",
                                                    "READ_ATTR",
                                                    "READ_ACL",
                                                    "WRITE_EA",
                                                    "WRITE_ATTR",
                                                    "WRITE_ACL",
                                                    "CHANGE_OWNER",
                                                    "WRITE_GROUP",
                                                    "DELETE",
                                                    "EXECUTE",
                                                    "MODIFY",
                                                    "EXTEND",
                                                    "ADD_FILE",
                                                    "ADD_SUBDIR",
                                                    "DELETE_CHILD",
                                                    "SYNCHRONIZE",
                                                    "ACCESS_RIGHTS_ALL"
                                                ],
                                                "description": "The maximum rights that any extra deny ACE can specify.:\n * `ACCESS_RIGHTS_ALL` - All access rights,\n * `ADD_FILE` - File creation access,\n * `ADD_SUBDIR` - Directory creation access,\n * `CHANGE_OWNER` - Owner write access,\n * `DELETE` - Delete access,\n * `DELETE_CHILD` - Delete from directory access,\n * `EXECUTE` - Execute access,\n * `EXTEND` - File extension access,\n * `MODIFY` - File modification access,\n * `READ` - File read access,\n * `READ_ACL` - ACL read access,\n * `READ_ATTR` - Attribute read access,\n * `READ_EA` - Extended attribute read access,\n * `SYNCHRONIZE` - File synchronize access,\n * `WRITE_ACL` - ACL write access,\n * `WRITE_ATTR` - Attribute write access,\n * `WRITE_EA` - Extended attribute write access,\n * `WRITE_GROUP` - Group write access"
                                            }
                                        },
                                        "not_produced_by_any_mode": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "enum": [
                                                    "READ",
                                                    "READ_EA",
                                                    "READ_ATTR",
                                                    "READ_ACL",
                                                    "WRITE_EA",
                                                    "WRITE_ATTR",
                                                    "WRITE_ACL",
                                                    "CHANGE_OWNER",
                                                    "WRITE_GROUP",
                                                    "DELETE",
                                                    "EXECUTE",
                                                    "MODIFY",
                                                    "EXTEND",
                                                    "ADD_FILE",
                                                    "ADD_SUBDIR",
                                                    "DELETE_CHILD",
                                                    "SYNCHRONIZE",
                                                    "ACCESS_RIGHTS_ALL"
                                                ],
                                                "description": "Rights that are never produced by a POSIX mode bit.:\n * `ACCESS_RIGHTS_ALL` - All access rights,\n * `ADD_FILE` - File creation access,\n * `ADD_SUBDIR` - Directory creation access,\n * `CHANGE_OWNER` - Owner write access,\n * `DELETE` - Delete access,\n * `DELETE_CHILD` - Delete from directory access,\n * `EXECUTE` - Execute access,\n * `EXTEND` - File extension access,\n * `MODIFY` - File modification access,\n * `READ` - File read access,\n * `READ_ACL` - ACL read access,\n * `READ_ATTR` - Attribute read access,\n * `READ_EA` - Extended attribute read access,\n * `SYNCHRONIZE` - File synchronize access,\n * `WRITE_ACL` - ACL write access,\n * `WRITE_ATTR` - Attribute write access,\n * `WRITE_EA` - Extended attribute write access,\n * `WRITE_GROUP` - Group write access"
                                            }
                                        },
                                        "not_visible_in_mode": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "enum": [
                                                    "READ",
                                                    "READ_EA",
                                                    "READ_ATTR",
                                                    "READ_ACL",
                                                    "WRITE_EA",
                                                    "WRITE_ATTR",
                                                    "WRITE_ACL",
                                                    "CHANGE_OWNER",
                                                    "WRITE_GROUP",
                                                    "DELETE",
                                                    "EXECUTE",
                                                    "MODIFY",
                                                    "EXTEND",
                                                    "ADD_FILE",
                                                    "ADD_SUBDIR",
                                                    "DELETE_CHILD",
                                                    "SYNCHRONIZE",
                                                    "ACCESS_RIGHTS_ALL"
                                                ],
                                                "description": "Rights that will never cause a bit to be set in the displayed mode.:\n * `ACCESS_RIGHTS_ALL` - All access rights,\n * `ADD_FILE` - File creation access,\n * `ADD_SUBDIR` - Directory creation access,\n * `CHANGE_OWNER` - Owner write access,\n * `DELETE` - Delete access,\n * `DELETE_CHILD` - Delete from directory access,\n * `EXECUTE` - Execute access,\n * `EXTEND` - File extension access,\n * `MODIFY` - File modification access,\n * `READ` - File read access,\n * `READ_ACL` - ACL read access,\n * `READ_ATTR` - Attribute read access,\n * `READ_EA` - Extended attribute read access,\n * `SYNCHRONIZE` - File synchronize access,\n * `WRITE_ACL` - ACL write access,\n * `WRITE_ATTR` - Attribute write access,\n * `WRITE_EA` - Extended attribute write access,\n * `WRITE_GROUP` - Group write access"
                                            }
                                        },
                                        "annotated_aces": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "source_ace": {
                                                        "type": "object",
                                                        "properties": {
                                                            "type": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "ALLOWED",
                                                                    "DENIED"
                                                                ],
                                                                "description": "Type of this ACL entry:\n * `ALLOWED` - An ACL entry that grants rights,\n * `DENIED` - An ACL entry that denies rights"
                                                            },
                                                            "flags": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "OBJECT_INHERIT",
                                                                        "CONTAINER_INHERIT",
                                                                        "NO_PROPAGATE_INHERIT",
                                                                        "INHERIT_ONLY",
                                                                        "INHERITED",
                                                                        "ACE_FLAGS_ALL"
                                                                    ],
                                                                    "description": "ACE flags for this ACL entry:\n * `ACE_FLAGS_ALL` - All ACE flags,\n * `CONTAINER_INHERIT` - Children that are containers inherit as effective ACE,\n * `INHERITED` - Indicates the ACE was inherited,\n * `INHERIT_ONLY` - Indicates an inherit-only ACE that doesn't control access to the attached object,\n * `NO_PROPAGATE_INHERIT` - Prevent subsequent children from inheriting ACE,\n * `OBJECT_INHERIT` - Non-container children inherit as effective ACE. Container objects inherit as inherit-only ACE"
                                                                }
                                                            },
                                                            "trustee": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "domain": {
                                                                        "type": "string",
                                                                        "enum": [
                                                                            "LOCAL",
                                                                            "API_NULL_DOMAIN",
                                                                            "WORLD",
                                                                            "POSIX_USER",
                                                                            "POSIX_GROUP",
                                                                            "ACTIVE_DIRECTORY",
                                                                            "API_INVALID_DOMAIN",
                                                                            "API_RESERVED_DOMAIN",
                                                                            "API_INTERNAL_DOMAIN",
                                                                            "API_OPERATOR_DOMAIN",
                                                                            "API_CREATOR_DOMAIN"
                                                                        ],
                                                                        "description": "domain:\n * `ACTIVE_DIRECTORY` - ACTIVE_DIRECTORY,\n * `API_CREATOR_DOMAIN` - API_CREATOR_DOMAIN,\n * `API_INTERNAL_DOMAIN` - API_INTERNAL_DOMAIN,\n * `API_INVALID_DOMAIN` - API_INVALID_DOMAIN,\n * `API_NULL_DOMAIN` - API_NULL_DOMAIN,\n * `API_OPERATOR_DOMAIN` - API_OPERATOR_DOMAIN,\n * `API_RESERVED_DOMAIN` - API_RESERVED_DOMAIN,\n * `LOCAL` - LOCAL,\n * `POSIX_GROUP` - POSIX_GROUP,\n * `POSIX_USER` - POSIX_USER,\n * `WORLD` - WORLD"
                                                                    },
                                                                    "auth_id": {
                                                                        "type": "string"
                                                                    },
                                                                    "uid": {
                                                                        "type": "number"
                                                                    },
                                                                    "gid": {
                                                                        "type": "number"
                                                                    },
                                                                    "sid": {
                                                                        "type": "string"
                                                                    },
                                                                    "name": {
                                                                        "type": "string"
                                                                    }
                                                                }
                                                            },
                                                            "rights": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "READ",
                                                                        "READ_EA",
                                                                        "READ_ATTR",
                                                                        "READ_ACL",
                                                                        "WRITE_EA",
                                                                        "WRITE_ATTR",
                                                                        "WRITE_ACL",
                                                                        "CHANGE_OWNER",
                                                                        "WRITE_GROUP",
                                                                        "DELETE",
                                                                        "EXECUTE",
                                                                        "MODIFY",
                                                                        "EXTEND",
                                                                        "ADD_FILE",
                                                                        "ADD_SUBDIR",
                                                                        "DELETE_CHILD",
                                                                        "SYNCHRONIZE",
                                                                        "ACCESS_RIGHTS_ALL"
                                                                    ],
                                                                    "description": "Rights granted or denied for this ACL entry:\n * `ACCESS_RIGHTS_ALL` - All access rights,\n * `ADD_FILE` - File creation access,\n * `ADD_SUBDIR` - Directory creation access,\n * `CHANGE_OWNER` - Owner write access,\n * `DELETE` - Delete access,\n * `DELETE_CHILD` - Delete from directory access,\n * `EXECUTE` - Execute access,\n * `EXTEND` - File extension access,\n * `MODIFY` - File modification access,\n * `READ` - File read access,\n * `READ_ACL` - ACL read access,\n * `READ_ATTR` - Attribute read access,\n * `READ_EA` - Extended attribute read access,\n * `SYNCHRONIZE` - File synchronize access,\n * `WRITE_ACL` - ACL write access,\n * `WRITE_ATTR` - Attribute write access,\n * `WRITE_EA` - Extended attribute write access,\n * `WRITE_GROUP` - Group write access"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "source_trustee_match": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "enum": [
                                                                "POSIX_OWNER",
                                                                "POSIX_GROUP_OWNER",
                                                                "POSIX_OTHERS",
                                                                "NON_POSIX"
                                                            ],
                                                            "description": "Describes which POSIX mode classes the source ACE matches.:\n * `NON_POSIX` - NON_POSIX,\n * `POSIX_GROUP_OWNER` - POSIX_GROUP_OWNER,\n * `POSIX_OTHERS` - POSIX_OTHERS,\n * `POSIX_OWNER` - POSIX_OWNER"
                                                        }
                                                    },
                                                    "action": {
                                                        "type": "string",
                                                        "enum": [
                                                            "COPY_ACE",
                                                            "MODIFY_ACE",
                                                            "INSERT_ACE",
                                                            "REMOVE_ACE"
                                                        ],
                                                        "description": "The action being performed in this step to affect the ACL.:\n * `COPY_ACE` - COPY_ACE,\n * `INSERT_ACE` - INSERT_ACE,\n * `MODIFY_ACE` - MODIFY_ACE,\n * `REMOVE_ACE` - REMOVE_ACE"
                                                    },
                                                    "reason": {
                                                        "type": "string"
                                                    },
                                                    "rights_removed": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "enum": [
                                                                "READ",
                                                                "READ_EA",
                                                                "READ_ATTR",
                                                                "READ_ACL",
                                                                "WRITE_EA",
                                                                "WRITE_ATTR",
                                                                "WRITE_ACL",
                                                                "CHANGE_OWNER",
                                                                "WRITE_GROUP",
                                                                "DELETE",
                                                                "EXECUTE",
                                                                "MODIFY",
                                                                "EXTEND",
                                                                "ADD_FILE",
                                                                "ADD_SUBDIR",
                                                                "DELETE_CHILD",
                                                                "SYNCHRONIZE",
                                                                "ACCESS_RIGHTS_ALL"
                                                            ],
                                                            "description": "Any rights that are removed from the source ACE in this step.:\n * `ACCESS_RIGHTS_ALL` - All access rights,\n * `ADD_FILE` - File creation access,\n * `ADD_SUBDIR` - Directory creation access,\n * `CHANGE_OWNER` - Owner write access,\n * `DELETE` - Delete access,\n * `DELETE_CHILD` - Delete from directory access,\n * `EXECUTE` - Execute access,\n * `EXTEND` - File extension access,\n * `MODIFY` - File modification access,\n * `READ` - File read access,\n * `READ_ACL` - ACL read access,\n * `READ_ATTR` - Attribute read access,\n * `READ_EA` - Extended attribute read access,\n * `SYNCHRONIZE` - File synchronize access,\n * `WRITE_ACL` - ACL write access,\n * `WRITE_ATTR` - Attribute write access,\n * `WRITE_EA` - Extended attribute write access,\n * `WRITE_GROUP` - Group write access"
                                                        }
                                                    },
                                                    "flags_removed": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "enum": [
                                                                "OBJECT_INHERIT",
                                                                "CONTAINER_INHERIT",
                                                                "NO_PROPAGATE_INHERIT",
                                                                "INHERIT_ONLY",
                                                                "INHERITED",
                                                                "ACE_FLAGS_ALL"
                                                            ],
                                                            "description": "Any flags that are removed from the source ACE in this step.:\n * `ACE_FLAGS_ALL` - All ACE flags,\n * `CONTAINER_INHERIT` - Children that are containers inherit as effective ACE,\n * `INHERITED` - Indicates the ACE was inherited,\n * `INHERIT_ONLY` - Indicates an inherit-only ACE that doesn't control access to the attached object,\n * `NO_PROPAGATE_INHERIT` - Prevent subsequent children from inheriting ACE,\n * `OBJECT_INHERIT` - Non-container children inherit as effective ACE. Container objects inherit as inherit-only ACE"
                                                        }
                                                    },
                                                    "flags_added": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "enum": [
                                                                "OBJECT_INHERIT",
                                                                "CONTAINER_INHERIT",
                                                                "NO_PROPAGATE_INHERIT",
                                                                "INHERIT_ONLY",
                                                                "INHERITED",
                                                                "ACE_FLAGS_ALL"
                                                            ],
                                                            "description": "Any flags that are added from the source ACE in this step.:\n * `ACE_FLAGS_ALL` - All ACE flags,\n * `CONTAINER_INHERIT` - Children that are containers inherit as effective ACE,\n * `INHERITED` - Indicates the ACE was inherited,\n * `INHERIT_ONLY` - Indicates an inherit-only ACE that doesn't control access to the attached object,\n * `NO_PROPAGATE_INHERIT` - Prevent subsequent children from inheriting ACE,\n * `OBJECT_INHERIT` - Non-container children inherit as effective ACE. Container objects inherit as inherit-only ACE"
                                                        }
                                                    },
                                                    "result_ace": {
                                                        "type": "object",
                                                        "properties": {
                                                            "type": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "ALLOWED",
                                                                    "DENIED"
                                                                ],
                                                                "description": "Type of this ACL entry:\n * `ALLOWED` - An ACL entry that grants rights,\n * `DENIED` - An ACL entry that denies rights"
                                                            },
                                                            "flags": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "OBJECT_INHERIT",
                                                                        "CONTAINER_INHERIT",
                                                                        "NO_PROPAGATE_INHERIT",
                                                                        "INHERIT_ONLY",
                                                                        "INHERITED",
                                                                        "ACE_FLAGS_ALL"
                                                                    ],
                                                                    "description": "ACE flags for this ACL entry:\n * `ACE_FLAGS_ALL` - All ACE flags,\n * `CONTAINER_INHERIT` - Children that are containers inherit as effective ACE,\n * `INHERITED` - Indicates the ACE was inherited,\n * `INHERIT_ONLY` - Indicates an inherit-only ACE that doesn't control access to the attached object,\n * `NO_PROPAGATE_INHERIT` - Prevent subsequent children from inheriting ACE,\n * `OBJECT_INHERIT` - Non-container children inherit as effective ACE. Container objects inherit as inherit-only ACE"
                                                                }
                                                            },
                                                            "trustee": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "domain": {
                                                                        "type": "string",
                                                                        "enum": [
                                                                            "LOCAL",
                                                                            "API_NULL_DOMAIN",
                                                                            "WORLD",
                                                                            "POSIX_USER",
                                                                            "POSIX_GROUP",
                                                                            "ACTIVE_DIRECTORY",
                                                                            "API_INVALID_DOMAIN",
                                                                            "API_RESERVED_DOMAIN",
                                                                            "API_INTERNAL_DOMAIN",
                                                                            "API_OPERATOR_DOMAIN",
                                                                            "API_CREATOR_DOMAIN"
                                                                        ],
                                                                        "description": "domain:\n * `ACTIVE_DIRECTORY` - ACTIVE_DIRECTORY,\n * `API_CREATOR_DOMAIN` - API_CREATOR_DOMAIN,\n * `API_INTERNAL_DOMAIN` - API_INTERNAL_DOMAIN,\n * `API_INVALID_DOMAIN` - API_INVALID_DOMAIN,\n * `API_NULL_DOMAIN` - API_NULL_DOMAIN,\n * `API_OPERATOR_DOMAIN` - API_OPERATOR_DOMAIN,\n * `API_RESERVED_DOMAIN` - API_RESERVED_DOMAIN,\n * `LOCAL` - LOCAL,\n * `POSIX_GROUP` - POSIX_GROUP,\n * `POSIX_USER` - POSIX_USER,\n * `WORLD` - WORLD"
                                                                    },
                                                                    "auth_id": {
                                                                        "type": "string"
                                                                    },
                                                                    "uid": {
                                                                        "type": "number"
                                                                    },
                                                                    "gid": {
                                                                        "type": "number"
                                                                    },
                                                                    "sid": {
                                                                        "type": "string"
                                                                    },
                                                                    "name": {
                                                                        "type": "string"
                                                                    }
                                                                }
                                                            },
                                                            "rights": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "READ",
                                                                        "READ_EA",
                                                                        "READ_ATTR",
                                                                        "READ_ACL",
                                                                        "WRITE_EA",
                                                                        "WRITE_ATTR",
                                                                        "WRITE_ACL",
                                                                        "CHANGE_OWNER",
                                                                        "WRITE_GROUP",
                                                                        "DELETE",
                                                                        "EXECUTE",
                                                                        "MODIFY",
                                                                        "EXTEND",
                                                                        "ADD_FILE",
                                                                        "ADD_SUBDIR",
                                                                        "DELETE_CHILD",
                                                                        "SYNCHRONIZE",
                                                                        "ACCESS_RIGHTS_ALL"
                                                                    ],
                                                                    "description": "Rights granted or denied for this ACL entry:\n * `ACCESS_RIGHTS_ALL` - All access rights,\n * `ADD_FILE` - File creation access,\n * `ADD_SUBDIR` - Directory creation access,\n * `CHANGE_OWNER` - Owner write access,\n * `DELETE` - Delete access,\n * `DELETE_CHILD` - Delete from directory access,\n * `EXECUTE` - Execute access,\n * `EXTEND` - File extension access,\n * `MODIFY` - File modification access,\n * `READ` - File read access,\n * `READ_ACL` - ACL read access,\n * `READ_ATTR` - Attribute read access,\n * `READ_EA` - Extended attribute read access,\n * `SYNCHRONIZE` - File synchronize access,\n * `WRITE_ACL` - ACL write access,\n * `WRITE_ATTR` - Attribute write access,\n * `WRITE_EA` - Extended attribute write access,\n * `WRITE_GROUP` - Group write access"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "initial_acl": {
                                            "type": "object",
                                            "properties": {
                                                "control": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "enum": [
                                                            "PRESENT",
                                                            "DEFAULTED",
                                                            "TRUSTED",
                                                            "AUTO_INHERIT",
                                                            "PROTECTED",
                                                            "ACL_CONTROLS_ALL"
                                                        ],
                                                        "description": "control:\n * `ACL_CONTROLS_ALL` - All ACL controls,\n * `AUTO_INHERIT` - Set whether the ACL was created through inheritance,\n * `DEFAULTED` - Sets whether the ACL was established by default means,\n * `PRESENT` - Set when ACL is present on the object,\n * `PROTECTED` - Protects ACL from inherit operations,\n * `TRUSTED` - Set when ACL is provided by a trusted source"
                                                    }
                                                },
                                                "posix_special_permissions": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "enum": [
                                                            "STICKY_BIT",
                                                            "SET_GID",
                                                            "SET_UID",
                                                            "ACL_POSIX_SPECIAL_PERMISSIONS_ALL"
                                                        ],
                                                        "description": "posix_special_permissions:\n * `ACL_POSIX_SPECIAL_PERMISSIONS_ALL` - ACL_POSIX_SPECIAL_PERMISSIONS_ALL,\n * `SET_GID` - SET_GID,\n * `SET_UID` - SET_UID,\n * `STICKY_BIT` - STICKY_BIT"
                                                    }
                                                },
                                                "aces": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "type": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "ALLOWED",
                                                                    "DENIED"
                                                                ],
                                                                "description": "Type of this ACL entry:\n * `ALLOWED` - An ACL entry that grants rights,\n * `DENIED` - An ACL entry that denies rights"
                                                            },
                                                            "flags": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "OBJECT_INHERIT",
                                                                        "CONTAINER_INHERIT",
                                                                        "NO_PROPAGATE_INHERIT",
                                                                        "INHERIT_ONLY",
                                                                        "INHERITED",
                                                                        "ACE_FLAGS_ALL"
                                                                    ],
                                                                    "description": "ACE flags for this ACL entry:\n * `ACE_FLAGS_ALL` - All ACE flags,\n * `CONTAINER_INHERIT` - Children that are containers inherit as effective ACE,\n * `INHERITED` - Indicates the ACE was inherited,\n * `INHERIT_ONLY` - Indicates an inherit-only ACE that doesn't control access to the attached object,\n * `NO_PROPAGATE_INHERIT` - Prevent subsequent children from inheriting ACE,\n * `OBJECT_INHERIT` - Non-container children inherit as effective ACE. Container objects inherit as inherit-only ACE"
                                                                }
                                                            },
                                                            "trustee": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "domain": {
                                                                        "type": "string",
                                                                        "enum": [
                                                                            "LOCAL",
                                                                            "API_NULL_DOMAIN",
                                                                            "WORLD",
                                                                            "POSIX_USER",
                                                                            "POSIX_GROUP",
                                                                            "ACTIVE_DIRECTORY",
                                                                            "API_INVALID_DOMAIN",
                                                                            "API_RESERVED_DOMAIN",
                                                                            "API_INTERNAL_DOMAIN",
                                                                            "API_OPERATOR_DOMAIN",
                                                                            "API_CREATOR_DOMAIN"
                                                                        ],
                                                                        "description": "domain:\n * `ACTIVE_DIRECTORY` - ACTIVE_DIRECTORY,\n * `API_CREATOR_DOMAIN` - API_CREATOR_DOMAIN,\n * `API_INTERNAL_DOMAIN` - API_INTERNAL_DOMAIN,\n * `API_INVALID_DOMAIN` - API_INVALID_DOMAIN,\n * `API_NULL_DOMAIN` - API_NULL_DOMAIN,\n * `API_OPERATOR_DOMAIN` - API_OPERATOR_DOMAIN,\n * `API_RESERVED_DOMAIN` - API_RESERVED_DOMAIN,\n * `LOCAL` - LOCAL,\n * `POSIX_GROUP` - POSIX_GROUP,\n * `POSIX_USER` - POSIX_USER,\n * `WORLD` - WORLD"
                                                                    },
                                                                    "auth_id": {
                                                                        "type": "string"
                                                                    },
                                                                    "uid": {
                                                                        "type": "number"
                                                                    },
                                                                    "gid": {
                                                                        "type": "number"
                                                                    },
                                                                    "sid": {
                                                                        "type": "string"
                                                                    },
                                                                    "name": {
                                                                        "type": "string"
                                                                    }
                                                                }
                                                            },
                                                            "rights": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "READ",
                                                                        "READ_EA",
                                                                        "READ_ATTR",
                                                                        "READ_ACL",
                                                                        "WRITE_EA",
                                                                        "WRITE_ATTR",
                                                                        "WRITE_ACL",
                                                                        "CHANGE_OWNER",
                                                                        "WRITE_GROUP",
                                                                        "DELETE",
                                                                        "EXECUTE",
                                                                        "MODIFY",
                                                                        "EXTEND",
                                                                        "ADD_FILE",
                                                                        "ADD_SUBDIR",
                                                                        "DELETE_CHILD",
                                                                        "SYNCHRONIZE",
                                                                        "ACCESS_RIGHTS_ALL"
                                                                    ],
                                                                    "description": "Rights granted or denied for this ACL entry:\n * `ACCESS_RIGHTS_ALL` - All access rights,\n * `ADD_FILE` - File creation access,\n * `ADD_SUBDIR` - Directory creation access,\n * `CHANGE_OWNER` - Owner write access,\n * `DELETE` - Delete access,\n * `DELETE_CHILD` - Delete from directory access,\n * `EXECUTE` - Execute access,\n * `EXTEND` - File extension access,\n * `MODIFY` - File modification access,\n * `READ` - File read access,\n * `READ_ACL` - ACL read access,\n * `READ_ATTR` - Attribute read access,\n * `READ_EA` - Extended attribute read access,\n * `SYNCHRONIZE` - File synchronize access,\n * `WRITE_ACL` - ACL write access,\n * `WRITE_ATTR` - Attribute write access,\n * `WRITE_EA` - Extended attribute write access,\n * `WRITE_GROUP` - Group write access"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "result_acl": {
                                            "type": "object",
                                            "properties": {
                                                "control": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "enum": [
                                                            "PRESENT",
                                                            "DEFAULTED",
                                                            "TRUSTED",
                                                            "AUTO_INHERIT",
                                                            "PROTECTED",
                                                            "ACL_CONTROLS_ALL"
                                                        ],
                                                        "description": "control:\n * `ACL_CONTROLS_ALL` - All ACL controls,\n * `AUTO_INHERIT` - Set whether the ACL was created through inheritance,\n * `DEFAULTED` - Sets whether the ACL was established by default means,\n * `PRESENT` - Set when ACL is present on the object,\n * `PROTECTED` - Protects ACL from inherit operations,\n * `TRUSTED` - Set when ACL is provided by a trusted source"
                                                    }
                                                },
                                                "posix_special_permissions": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "enum": [
                                                            "STICKY_BIT",
                                                            "SET_GID",
                                                            "SET_UID",
                                                            "ACL_POSIX_SPECIAL_PERMISSIONS_ALL"
                                                        ],
                                                        "description": "posix_special_permissions:\n * `ACL_POSIX_SPECIAL_PERMISSIONS_ALL` - ACL_POSIX_SPECIAL_PERMISSIONS_ALL,\n * `SET_GID` - SET_GID,\n * `SET_UID` - SET_UID,\n * `STICKY_BIT` - STICKY_BIT"
                                                    }
                                                },
                                                "aces": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "type": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "ALLOWED",
                                                                    "DENIED"
                                                                ],
                                                                "description": "Type of this ACL entry:\n * `ALLOWED` - An ACL entry that grants rights,\n * `DENIED` - An ACL entry that denies rights"
                                                            },
                                                            "flags": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "OBJECT_INHERIT",
                                                                        "CONTAINER_INHERIT",
                                                                        "NO_PROPAGATE_INHERIT",
                                                                        "INHERIT_ONLY",
                                                                        "INHERITED",
                                                                        "ACE_FLAGS_ALL"
                                                                    ],
                                                                    "description": "ACE flags for this ACL entry:\n * `ACE_FLAGS_ALL` - All ACE flags,\n * `CONTAINER_INHERIT` - Children that are containers inherit as effective ACE,\n * `INHERITED` - Indicates the ACE was inherited,\n * `INHERIT_ONLY` - Indicates an inherit-only ACE that doesn't control access to the attached object,\n * `NO_PROPAGATE_INHERIT` - Prevent subsequent children from inheriting ACE,\n * `OBJECT_INHERIT` - Non-container children inherit as effective ACE. Container objects inherit as inherit-only ACE"
                                                                }
                                                            },
                                                            "trustee": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "domain": {
                                                                        "type": "string",
                                                                        "enum": [
                                                                            "LOCAL",
                                                                            "API_NULL_DOMAIN",
                                                                            "WORLD",
                                                                            "POSIX_USER",
                                                                            "POSIX_GROUP",
                                                                            "ACTIVE_DIRECTORY",
                                                                            "API_INVALID_DOMAIN",
                                                                            "API_RESERVED_DOMAIN",
                                                                            "API_INTERNAL_DOMAIN",
                                                                            "API_OPERATOR_DOMAIN",
                                                                            "API_CREATOR_DOMAIN"
                                                                        ],
                                                                        "description": "domain:\n * `ACTIVE_DIRECTORY` - ACTIVE_DIRECTORY,\n * `API_CREATOR_DOMAIN` - API_CREATOR_DOMAIN,\n * `API_INTERNAL_DOMAIN` - API_INTERNAL_DOMAIN,\n * `API_INVALID_DOMAIN` - API_INVALID_DOMAIN,\n * `API_NULL_DOMAIN` - API_NULL_DOMAIN,\n * `API_OPERATOR_DOMAIN` - API_OPERATOR_DOMAIN,\n * `API_RESERVED_DOMAIN` - API_RESERVED_DOMAIN,\n * `LOCAL` - LOCAL,\n * `POSIX_GROUP` - POSIX_GROUP,\n * `POSIX_USER` - POSIX_USER,\n * `WORLD` - WORLD"
                                                                    },
                                                                    "auth_id": {
                                                                        "type": "string"
                                                                    },
                                                                    "uid": {
                                                                        "type": "number"
                                                                    },
                                                                    "gid": {
                                                                        "type": "number"
                                                                    },
                                                                    "sid": {
                                                                        "type": "string"
                                                                    },
                                                                    "name": {
                                                                        "type": "string"
                                                                    }
                                                                }
                                                            },
                                                            "rights": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "READ",
                                                                        "READ_EA",
                                                                        "READ_ATTR",
                                                                        "READ_ACL",
                                                                        "WRITE_EA",
                                                                        "WRITE_ATTR",
                                                                        "WRITE_ACL",
                                                                        "CHANGE_OWNER",
                                                                        "WRITE_GROUP",
                                                                        "DELETE",
                                                                        "EXECUTE",
                                                                        "MODIFY",
                                                                        "EXTEND",
                                                                        "ADD_FILE",
                                                                        "ADD_SUBDIR",
                                                                        "DELETE_CHILD",
                                                                        "SYNCHRONIZE",
                                                                        "ACCESS_RIGHTS_ALL"
                                                                    ],
                                                                    "description": "Rights granted or denied for this ACL entry:\n * `ACCESS_RIGHTS_ALL` - All access rights,\n * `ADD_FILE` - File creation access,\n * `ADD_SUBDIR` - Directory creation access,\n * `CHANGE_OWNER` - Owner write access,\n * `DELETE` - Delete access,\n * `DELETE_CHILD` - Delete from directory access,\n * `EXECUTE` - Execute access,\n * `EXTEND` - File extension access,\n * `MODIFY` - File modification access,\n * `READ` - File read access,\n * `READ_ACL` - ACL read access,\n * `READ_ATTR` - Attribute read access,\n * `READ_EA` - Extended attribute read access,\n * `SYNCHRONIZE` - File synchronize access,\n * `WRITE_ACL` - ACL write access,\n * `WRITE_ATTR` - Attribute write access,\n * `WRITE_EA` - Extended attribute write access,\n * `WRITE_GROUP` - Group write access"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "files"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "mode": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/files/{ref}/info/acl/explain-rights": {
            "post": {
                "summary": "Explain how rights are granted to a user for a file/directory.",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "The file ID (UInt64) or the absolute path to the file. This page handles the URL-encoding of the path.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "snapshot",
                        "in": "query",
                        "description": "The snapshot ID that specifies the version of the file to read. If not specified, read the head version.",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "owner": {
                                            "type": "object",
                                            "properties": {
                                                "domain": {
                                                    "type": "string",
                                                    "enum": [
                                                        "LOCAL",
                                                        "API_NULL_DOMAIN",
                                                        "WORLD",
                                                        "POSIX_USER",
                                                        "POSIX_GROUP",
                                                        "ACTIVE_DIRECTORY",
                                                        "API_INVALID_DOMAIN",
                                                        "API_RESERVED_DOMAIN",
                                                        "API_INTERNAL_DOMAIN",
                                                        "API_OPERATOR_DOMAIN",
                                                        "API_CREATOR_DOMAIN"
                                                    ],
                                                    "description": "domain:\n * `ACTIVE_DIRECTORY` - ACTIVE_DIRECTORY,\n * `API_CREATOR_DOMAIN` - API_CREATOR_DOMAIN,\n * `API_INTERNAL_DOMAIN` - API_INTERNAL_DOMAIN,\n * `API_INVALID_DOMAIN` - API_INVALID_DOMAIN,\n * `API_NULL_DOMAIN` - API_NULL_DOMAIN,\n * `API_OPERATOR_DOMAIN` - API_OPERATOR_DOMAIN,\n * `API_RESERVED_DOMAIN` - API_RESERVED_DOMAIN,\n * `LOCAL` - LOCAL,\n * `POSIX_GROUP` - POSIX_GROUP,\n * `POSIX_USER` - POSIX_USER,\n * `WORLD` - WORLD"
                                                },
                                                "auth_id": {
                                                    "type": "string"
                                                },
                                                "uid": {
                                                    "type": "number"
                                                },
                                                "gid": {
                                                    "type": "number"
                                                },
                                                "sid": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "group_owner": {
                                            "type": "object",
                                            "properties": {
                                                "domain": {
                                                    "type": "string",
                                                    "enum": [
                                                        "LOCAL",
                                                        "API_NULL_DOMAIN",
                                                        "WORLD",
                                                        "POSIX_USER",
                                                        "POSIX_GROUP",
                                                        "ACTIVE_DIRECTORY",
                                                        "API_INVALID_DOMAIN",
                                                        "API_RESERVED_DOMAIN",
                                                        "API_INTERNAL_DOMAIN",
                                                        "API_OPERATOR_DOMAIN",
                                                        "API_CREATOR_DOMAIN"
                                                    ],
                                                    "description": "domain:\n * `ACTIVE_DIRECTORY` - ACTIVE_DIRECTORY,\n * `API_CREATOR_DOMAIN` - API_CREATOR_DOMAIN,\n * `API_INTERNAL_DOMAIN` - API_INTERNAL_DOMAIN,\n * `API_INVALID_DOMAIN` - API_INVALID_DOMAIN,\n * `API_NULL_DOMAIN` - API_NULL_DOMAIN,\n * `API_OPERATOR_DOMAIN` - API_OPERATOR_DOMAIN,\n * `API_RESERVED_DOMAIN` - API_RESERVED_DOMAIN,\n * `LOCAL` - LOCAL,\n * `POSIX_GROUP` - POSIX_GROUP,\n * `POSIX_USER` - POSIX_USER,\n * `WORLD` - WORLD"
                                                },
                                                "auth_id": {
                                                    "type": "string"
                                                },
                                                "uid": {
                                                    "type": "number"
                                                },
                                                "gid": {
                                                    "type": "number"
                                                },
                                                "sid": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "requestor": {
                                            "type": "object",
                                            "properties": {
                                                "user": {
                                                    "type": "object",
                                                    "properties": {
                                                        "domain": {
                                                            "type": "string",
                                                            "enum": [
                                                                "LOCAL",
                                                                "API_NULL_DOMAIN",
                                                                "WORLD",
                                                                "POSIX_USER",
                                                                "POSIX_GROUP",
                                                                "ACTIVE_DIRECTORY",
                                                                "API_INVALID_DOMAIN",
                                                                "API_RESERVED_DOMAIN",
                                                                "API_INTERNAL_DOMAIN",
                                                                "API_OPERATOR_DOMAIN",
                                                                "API_CREATOR_DOMAIN"
                                                            ],
                                                            "description": "domain:\n * `ACTIVE_DIRECTORY` - ACTIVE_DIRECTORY,\n * `API_CREATOR_DOMAIN` - API_CREATOR_DOMAIN,\n * `API_INTERNAL_DOMAIN` - API_INTERNAL_DOMAIN,\n * `API_INVALID_DOMAIN` - API_INVALID_DOMAIN,\n * `API_NULL_DOMAIN` - API_NULL_DOMAIN,\n * `API_OPERATOR_DOMAIN` - API_OPERATOR_DOMAIN,\n * `API_RESERVED_DOMAIN` - API_RESERVED_DOMAIN,\n * `LOCAL` - LOCAL,\n * `POSIX_GROUP` - POSIX_GROUP,\n * `POSIX_USER` - POSIX_USER,\n * `WORLD` - WORLD"
                                                        },
                                                        "auth_id": {
                                                            "type": "string"
                                                        },
                                                        "uid": {
                                                            "type": "number"
                                                        },
                                                        "gid": {
                                                            "type": "number"
                                                        },
                                                        "sid": {
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        }
                                                    }
                                                },
                                                "primary_group": {
                                                    "type": "object",
                                                    "properties": {
                                                        "domain": {
                                                            "type": "string",
                                                            "enum": [
                                                                "LOCAL",
                                                                "API_NULL_DOMAIN",
                                                                "WORLD",
                                                                "POSIX_USER",
                                                                "POSIX_GROUP",
                                                                "ACTIVE_DIRECTORY",
                                                                "API_INVALID_DOMAIN",
                                                                "API_RESERVED_DOMAIN",
                                                                "API_INTERNAL_DOMAIN",
                                                                "API_OPERATOR_DOMAIN",
                                                                "API_CREATOR_DOMAIN"
                                                            ],
                                                            "description": "domain:\n * `ACTIVE_DIRECTORY` - ACTIVE_DIRECTORY,\n * `API_CREATOR_DOMAIN` - API_CREATOR_DOMAIN,\n * `API_INTERNAL_DOMAIN` - API_INTERNAL_DOMAIN,\n * `API_INVALID_DOMAIN` - API_INVALID_DOMAIN,\n * `API_NULL_DOMAIN` - API_NULL_DOMAIN,\n * `API_OPERATOR_DOMAIN` - API_OPERATOR_DOMAIN,\n * `API_RESERVED_DOMAIN` - API_RESERVED_DOMAIN,\n * `LOCAL` - LOCAL,\n * `POSIX_GROUP` - POSIX_GROUP,\n * `POSIX_USER` - POSIX_USER,\n * `WORLD` - WORLD"
                                                        },
                                                        "auth_id": {
                                                            "type": "string"
                                                        },
                                                        "uid": {
                                                            "type": "number"
                                                        },
                                                        "gid": {
                                                            "type": "number"
                                                        },
                                                        "sid": {
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        }
                                                    }
                                                },
                                                "auxiliary_identities": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "domain": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "LOCAL",
                                                                    "API_NULL_DOMAIN",
                                                                    "WORLD",
                                                                    "POSIX_USER",
                                                                    "POSIX_GROUP",
                                                                    "ACTIVE_DIRECTORY",
                                                                    "API_INVALID_DOMAIN",
                                                                    "API_RESERVED_DOMAIN",
                                                                    "API_INTERNAL_DOMAIN",
                                                                    "API_OPERATOR_DOMAIN",
                                                                    "API_CREATOR_DOMAIN"
                                                                ],
                                                                "description": "domain:\n * `ACTIVE_DIRECTORY` - ACTIVE_DIRECTORY,\n * `API_CREATOR_DOMAIN` - API_CREATOR_DOMAIN,\n * `API_INTERNAL_DOMAIN` - API_INTERNAL_DOMAIN,\n * `API_INVALID_DOMAIN` - API_INVALID_DOMAIN,\n * `API_NULL_DOMAIN` - API_NULL_DOMAIN,\n * `API_OPERATOR_DOMAIN` - API_OPERATOR_DOMAIN,\n * `API_RESERVED_DOMAIN` - API_RESERVED_DOMAIN,\n * `LOCAL` - LOCAL,\n * `POSIX_GROUP` - POSIX_GROUP,\n * `POSIX_USER` - POSIX_USER,\n * `WORLD` - WORLD"
                                                            },
                                                            "auth_id": {
                                                                "type": "string"
                                                            },
                                                            "uid": {
                                                                "type": "number"
                                                            },
                                                            "gid": {
                                                                "type": "number"
                                                            },
                                                            "sid": {
                                                                "type": "string"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "admin_priv_rights": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "enum": [
                                                    "READ",
                                                    "READ_EA",
                                                    "READ_ATTR",
                                                    "READ_ACL",
                                                    "WRITE_EA",
                                                    "WRITE_ATTR",
                                                    "WRITE_ACL",
                                                    "CHANGE_OWNER",
                                                    "WRITE_GROUP",
                                                    "DELETE",
                                                    "EXECUTE",
                                                    "MODIFY",
                                                    "EXTEND",
                                                    "ADD_FILE",
                                                    "ADD_SUBDIR",
                                                    "DELETE_CHILD",
                                                    "SYNCHRONIZE",
                                                    "ACCESS_RIGHTS_ALL"
                                                ],
                                                "description": "Rights granted by possessing the administrator privilege.:\n * `ACCESS_RIGHTS_ALL` - All access rights,\n * `ADD_FILE` - File creation access,\n * `ADD_SUBDIR` - Directory creation access,\n * `CHANGE_OWNER` - Owner write access,\n * `DELETE` - Delete access,\n * `DELETE_CHILD` - Delete from directory access,\n * `EXECUTE` - Execute access,\n * `EXTEND` - File extension access,\n * `MODIFY` - File modification access,\n * `READ` - File read access,\n * `READ_ACL` - ACL read access,\n * `READ_ATTR` - Attribute read access,\n * `READ_EA` - Extended attribute read access,\n * `SYNCHRONIZE` - File synchronize access,\n * `WRITE_ACL` - ACL write access,\n * `WRITE_ATTR` - Attribute write access,\n * `WRITE_EA` - Extended attribute write access,\n * `WRITE_GROUP` - Group write access"
                                            }
                                        },
                                        "read_attr_priv_rights": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "enum": [
                                                    "READ",
                                                    "READ_EA",
                                                    "READ_ATTR",
                                                    "READ_ACL",
                                                    "WRITE_EA",
                                                    "WRITE_ATTR",
                                                    "WRITE_ACL",
                                                    "CHANGE_OWNER",
                                                    "WRITE_GROUP",
                                                    "DELETE",
                                                    "EXECUTE",
                                                    "MODIFY",
                                                    "EXTEND",
                                                    "ADD_FILE",
                                                    "ADD_SUBDIR",
                                                    "DELETE_CHILD",
                                                    "SYNCHRONIZE",
                                                    "ACCESS_RIGHTS_ALL"
                                                ],
                                                "description": "Rights granted by possessing the privilege to read attributes.:\n * `ACCESS_RIGHTS_ALL` - All access rights,\n * `ADD_FILE` - File creation access,\n * `ADD_SUBDIR` - Directory creation access,\n * `CHANGE_OWNER` - Owner write access,\n * `DELETE` - Delete access,\n * `DELETE_CHILD` - Delete from directory access,\n * `EXECUTE` - Execute access,\n * `EXTEND` - File extension access,\n * `MODIFY` - File modification access,\n * `READ` - File read access,\n * `READ_ACL` - ACL read access,\n * `READ_ATTR` - Attribute read access,\n * `READ_EA` - Extended attribute read access,\n * `SYNCHRONIZE` - File synchronize access,\n * `WRITE_ACL` - ACL write access,\n * `WRITE_ATTR` - Attribute write access,\n * `WRITE_EA` - Extended attribute write access,\n * `WRITE_GROUP` - Group write access"
                                            }
                                        },
                                        "annotated_aces": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "ace": {
                                                        "type": "object",
                                                        "properties": {
                                                            "type": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "ALLOWED",
                                                                    "DENIED"
                                                                ],
                                                                "description": "Type of this ACL entry:\n * `ALLOWED` - An ACL entry that grants rights,\n * `DENIED` - An ACL entry that denies rights"
                                                            },
                                                            "flags": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "OBJECT_INHERIT",
                                                                        "CONTAINER_INHERIT",
                                                                        "NO_PROPAGATE_INHERIT",
                                                                        "INHERIT_ONLY",
                                                                        "INHERITED",
                                                                        "ACE_FLAGS_ALL"
                                                                    ],
                                                                    "description": "ACE flags for this ACL entry:\n * `ACE_FLAGS_ALL` - All ACE flags,\n * `CONTAINER_INHERIT` - Children that are containers inherit as effective ACE,\n * `INHERITED` - Indicates the ACE was inherited,\n * `INHERIT_ONLY` - Indicates an inherit-only ACE that doesn't control access to the attached object,\n * `NO_PROPAGATE_INHERIT` - Prevent subsequent children from inheriting ACE,\n * `OBJECT_INHERIT` - Non-container children inherit as effective ACE. Container objects inherit as inherit-only ACE"
                                                                }
                                                            },
                                                            "trustee": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "domain": {
                                                                        "type": "string",
                                                                        "enum": [
                                                                            "LOCAL",
                                                                            "API_NULL_DOMAIN",
                                                                            "WORLD",
                                                                            "POSIX_USER",
                                                                            "POSIX_GROUP",
                                                                            "ACTIVE_DIRECTORY",
                                                                            "API_INVALID_DOMAIN",
                                                                            "API_RESERVED_DOMAIN",
                                                                            "API_INTERNAL_DOMAIN",
                                                                            "API_OPERATOR_DOMAIN",
                                                                            "API_CREATOR_DOMAIN"
                                                                        ],
                                                                        "description": "domain:\n * `ACTIVE_DIRECTORY` - ACTIVE_DIRECTORY,\n * `API_CREATOR_DOMAIN` - API_CREATOR_DOMAIN,\n * `API_INTERNAL_DOMAIN` - API_INTERNAL_DOMAIN,\n * `API_INVALID_DOMAIN` - API_INVALID_DOMAIN,\n * `API_NULL_DOMAIN` - API_NULL_DOMAIN,\n * `API_OPERATOR_DOMAIN` - API_OPERATOR_DOMAIN,\n * `API_RESERVED_DOMAIN` - API_RESERVED_DOMAIN,\n * `LOCAL` - LOCAL,\n * `POSIX_GROUP` - POSIX_GROUP,\n * `POSIX_USER` - POSIX_USER,\n * `WORLD` - WORLD"
                                                                    },
                                                                    "auth_id": {
                                                                        "type": "string"
                                                                    },
                                                                    "uid": {
                                                                        "type": "number"
                                                                    },
                                                                    "gid": {
                                                                        "type": "number"
                                                                    },
                                                                    "sid": {
                                                                        "type": "string"
                                                                    },
                                                                    "name": {
                                                                        "type": "string"
                                                                    }
                                                                }
                                                            },
                                                            "rights": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "READ",
                                                                        "READ_EA",
                                                                        "READ_ATTR",
                                                                        "READ_ACL",
                                                                        "WRITE_EA",
                                                                        "WRITE_ATTR",
                                                                        "WRITE_ACL",
                                                                        "CHANGE_OWNER",
                                                                        "WRITE_GROUP",
                                                                        "DELETE",
                                                                        "EXECUTE",
                                                                        "MODIFY",
                                                                        "EXTEND",
                                                                        "ADD_FILE",
                                                                        "ADD_SUBDIR",
                                                                        "DELETE_CHILD",
                                                                        "SYNCHRONIZE",
                                                                        "ACCESS_RIGHTS_ALL"
                                                                    ],
                                                                    "description": "Rights granted or denied for this ACL entry:\n * `ACCESS_RIGHTS_ALL` - All access rights,\n * `ADD_FILE` - File creation access,\n * `ADD_SUBDIR` - Directory creation access,\n * `CHANGE_OWNER` - Owner write access,\n * `DELETE` - Delete access,\n * `DELETE_CHILD` - Delete from directory access,\n * `EXECUTE` - Execute access,\n * `EXTEND` - File extension access,\n * `MODIFY` - File modification access,\n * `READ` - File read access,\n * `READ_ACL` - ACL read access,\n * `READ_ATTR` - Attribute read access,\n * `READ_EA` - Extended attribute read access,\n * `SYNCHRONIZE` - File synchronize access,\n * `WRITE_ACL` - ACL write access,\n * `WRITE_ATTR` - Attribute write access,\n * `WRITE_EA` - Extended attribute write access,\n * `WRITE_GROUP` - Group write access"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "trustee_matches": {
                                                        "type": "boolean"
                                                    },
                                                    "skipped_inherit_only": {
                                                        "type": "boolean"
                                                    },
                                                    "newly_allowed": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "enum": [
                                                                "READ",
                                                                "READ_EA",
                                                                "READ_ATTR",
                                                                "READ_ACL",
                                                                "WRITE_EA",
                                                                "WRITE_ATTR",
                                                                "WRITE_ACL",
                                                                "CHANGE_OWNER",
                                                                "WRITE_GROUP",
                                                                "DELETE",
                                                                "EXECUTE",
                                                                "MODIFY",
                                                                "EXTEND",
                                                                "ADD_FILE",
                                                                "ADD_SUBDIR",
                                                                "DELETE_CHILD",
                                                                "SYNCHRONIZE",
                                                                "ACCESS_RIGHTS_ALL"
                                                            ],
                                                            "description": "Rights allowed by the current ACE.:\n * `ACCESS_RIGHTS_ALL` - All access rights,\n * `ADD_FILE` - File creation access,\n * `ADD_SUBDIR` - Directory creation access,\n * `CHANGE_OWNER` - Owner write access,\n * `DELETE` - Delete access,\n * `DELETE_CHILD` - Delete from directory access,\n * `EXECUTE` - Execute access,\n * `EXTEND` - File extension access,\n * `MODIFY` - File modification access,\n * `READ` - File read access,\n * `READ_ACL` - ACL read access,\n * `READ_ATTR` - Attribute read access,\n * `READ_EA` - Extended attribute read access,\n * `SYNCHRONIZE` - File synchronize access,\n * `WRITE_ACL` - ACL write access,\n * `WRITE_ATTR` - Attribute write access,\n * `WRITE_EA` - Extended attribute write access,\n * `WRITE_GROUP` - Group write access"
                                                        }
                                                    },
                                                    "cumulative_allowed": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "enum": [
                                                                "READ",
                                                                "READ_EA",
                                                                "READ_ATTR",
                                                                "READ_ACL",
                                                                "WRITE_EA",
                                                                "WRITE_ATTR",
                                                                "WRITE_ACL",
                                                                "CHANGE_OWNER",
                                                                "WRITE_GROUP",
                                                                "DELETE",
                                                                "EXECUTE",
                                                                "MODIFY",
                                                                "EXTEND",
                                                                "ADD_FILE",
                                                                "ADD_SUBDIR",
                                                                "DELETE_CHILD",
                                                                "SYNCHRONIZE",
                                                                "ACCESS_RIGHTS_ALL"
                                                            ],
                                                            "description": "Rights allowed in total so far.:\n * `ACCESS_RIGHTS_ALL` - All access rights,\n * `ADD_FILE` - File creation access,\n * `ADD_SUBDIR` - Directory creation access,\n * `CHANGE_OWNER` - Owner write access,\n * `DELETE` - Delete access,\n * `DELETE_CHILD` - Delete from directory access,\n * `EXECUTE` - Execute access,\n * `EXTEND` - File extension access,\n * `MODIFY` - File modification access,\n * `READ` - File read access,\n * `READ_ACL` - ACL read access,\n * `READ_ATTR` - Attribute read access,\n * `READ_EA` - Extended attribute read access,\n * `SYNCHRONIZE` - File synchronize access,\n * `WRITE_ACL` - ACL write access,\n * `WRITE_ATTR` - Attribute write access,\n * `WRITE_EA` - Extended attribute write access,\n * `WRITE_GROUP` - Group write access"
                                                        }
                                                    },
                                                    "newly_denied": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "enum": [
                                                                "READ",
                                                                "READ_EA",
                                                                "READ_ATTR",
                                                                "READ_ACL",
                                                                "WRITE_EA",
                                                                "WRITE_ATTR",
                                                                "WRITE_ACL",
                                                                "CHANGE_OWNER",
                                                                "WRITE_GROUP",
                                                                "DELETE",
                                                                "EXECUTE",
                                                                "MODIFY",
                                                                "EXTEND",
                                                                "ADD_FILE",
                                                                "ADD_SUBDIR",
                                                                "DELETE_CHILD",
                                                                "SYNCHRONIZE",
                                                                "ACCESS_RIGHTS_ALL"
                                                            ],
                                                            "description": "Rights denied by the current ACE.:\n * `ACCESS_RIGHTS_ALL` - All access rights,\n * `ADD_FILE` - File creation access,\n * `ADD_SUBDIR` - Directory creation access,\n * `CHANGE_OWNER` - Owner write access,\n * `DELETE` - Delete access,\n * `DELETE_CHILD` - Delete from directory access,\n * `EXECUTE` - Execute access,\n * `EXTEND` - File extension access,\n * `MODIFY` - File modification access,\n * `READ` - File read access,\n * `READ_ACL` - ACL read access,\n * `READ_ATTR` - Attribute read access,\n * `READ_EA` - Extended attribute read access,\n * `SYNCHRONIZE` - File synchronize access,\n * `WRITE_ACL` - ACL write access,\n * `WRITE_ATTR` - Attribute write access,\n * `WRITE_EA` - Extended attribute write access,\n * `WRITE_GROUP` - Group write access"
                                                        }
                                                    },
                                                    "cumulative_denied": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "enum": [
                                                                "READ",
                                                                "READ_EA",
                                                                "READ_ATTR",
                                                                "READ_ACL",
                                                                "WRITE_EA",
                                                                "WRITE_ATTR",
                                                                "WRITE_ACL",
                                                                "CHANGE_OWNER",
                                                                "WRITE_GROUP",
                                                                "DELETE",
                                                                "EXECUTE",
                                                                "MODIFY",
                                                                "EXTEND",
                                                                "ADD_FILE",
                                                                "ADD_SUBDIR",
                                                                "DELETE_CHILD",
                                                                "SYNCHRONIZE",
                                                                "ACCESS_RIGHTS_ALL"
                                                            ],
                                                            "description": "Rights denied in total so far.:\n * `ACCESS_RIGHTS_ALL` - All access rights,\n * `ADD_FILE` - File creation access,\n * `ADD_SUBDIR` - Directory creation access,\n * `CHANGE_OWNER` - Owner write access,\n * `DELETE` - Delete access,\n * `DELETE_CHILD` - Delete from directory access,\n * `EXECUTE` - Execute access,\n * `EXTEND` - File extension access,\n * `MODIFY` - File modification access,\n * `READ` - File read access,\n * `READ_ACL` - ACL read access,\n * `READ_ATTR` - Attribute read access,\n * `READ_EA` - Extended attribute read access,\n * `SYNCHRONIZE` - File synchronize access,\n * `WRITE_ACL` - ACL write access,\n * `WRITE_ATTR` - Attribute write access,\n * `WRITE_EA` - Extended attribute write access,\n * `WRITE_GROUP` - Group write access"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "rights_from_aces": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "enum": [
                                                    "READ",
                                                    "READ_EA",
                                                    "READ_ATTR",
                                                    "READ_ACL",
                                                    "WRITE_EA",
                                                    "WRITE_ATTR",
                                                    "WRITE_ACL",
                                                    "CHANGE_OWNER",
                                                    "WRITE_GROUP",
                                                    "DELETE",
                                                    "EXECUTE",
                                                    "MODIFY",
                                                    "EXTEND",
                                                    "ADD_FILE",
                                                    "ADD_SUBDIR",
                                                    "DELETE_CHILD",
                                                    "SYNCHRONIZE",
                                                    "ACCESS_RIGHTS_ALL"
                                                ],
                                                "description": "Rights granted by the file or directory's ACEs.:\n * `ACCESS_RIGHTS_ALL` - All access rights,\n * `ADD_FILE` - File creation access,\n * `ADD_SUBDIR` - Directory creation access,\n * `CHANGE_OWNER` - Owner write access,\n * `DELETE` - Delete access,\n * `DELETE_CHILD` - Delete from directory access,\n * `EXECUTE` - Execute access,\n * `EXTEND` - File extension access,\n * `MODIFY` - File modification access,\n * `READ` - File read access,\n * `READ_ACL` - ACL read access,\n * `READ_ATTR` - Attribute read access,\n * `READ_EA` - Extended attribute read access,\n * `SYNCHRONIZE` - File synchronize access,\n * `WRITE_ACL` - ACL write access,\n * `WRITE_ATTR` - Attribute write access,\n * `WRITE_EA` - Extended attribute write access,\n * `WRITE_GROUP` - Group write access"
                                            }
                                        },
                                        "implicit_owner_rights_suppressed_by_ace": {
                                            "type": "boolean"
                                        },
                                        "implicit_owner_rights": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "enum": [
                                                    "READ",
                                                    "READ_EA",
                                                    "READ_ATTR",
                                                    "READ_ACL",
                                                    "WRITE_EA",
                                                    "WRITE_ATTR",
                                                    "WRITE_ACL",
                                                    "CHANGE_OWNER",
                                                    "WRITE_GROUP",
                                                    "DELETE",
                                                    "EXECUTE",
                                                    "MODIFY",
                                                    "EXTEND",
                                                    "ADD_FILE",
                                                    "ADD_SUBDIR",
                                                    "DELETE_CHILD",
                                                    "SYNCHRONIZE",
                                                    "ACCESS_RIGHTS_ALL"
                                                ],
                                                "description": "Rights implicitly granted because the user in question owns the file or directory.:\n * `ACCESS_RIGHTS_ALL` - All access rights,\n * `ADD_FILE` - File creation access,\n * `ADD_SUBDIR` - Directory creation access,\n * `CHANGE_OWNER` - Owner write access,\n * `DELETE` - Delete access,\n * `DELETE_CHILD` - Delete from directory access,\n * `EXECUTE` - Execute access,\n * `EXTEND` - File extension access,\n * `MODIFY` - File modification access,\n * `READ` - File read access,\n * `READ_ACL` - ACL read access,\n * `READ_ATTR` - Attribute read access,\n * `READ_EA` - Extended attribute read access,\n * `SYNCHRONIZE` - File synchronize access,\n * `WRITE_ACL` - ACL write access,\n * `WRITE_ATTR` - Attribute write access,\n * `WRITE_EA` - Extended attribute write access,\n * `WRITE_GROUP` - Group write access"
                                            }
                                        },
                                        "implicit_rights_from_parent": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "enum": [
                                                    "READ",
                                                    "READ_EA",
                                                    "READ_ATTR",
                                                    "READ_ACL",
                                                    "WRITE_EA",
                                                    "WRITE_ATTR",
                                                    "WRITE_ACL",
                                                    "CHANGE_OWNER",
                                                    "WRITE_GROUP",
                                                    "DELETE",
                                                    "EXECUTE",
                                                    "MODIFY",
                                                    "EXTEND",
                                                    "ADD_FILE",
                                                    "ADD_SUBDIR",
                                                    "DELETE_CHILD",
                                                    "SYNCHRONIZE",
                                                    "ACCESS_RIGHTS_ALL"
                                                ],
                                                "description": "Rights implicitly granted by this file or directory's container.:\n * `ACCESS_RIGHTS_ALL` - All access rights,\n * `ADD_FILE` - File creation access,\n * `ADD_SUBDIR` - Directory creation access,\n * `CHANGE_OWNER` - Owner write access,\n * `DELETE` - Delete access,\n * `DELETE_CHILD` - Delete from directory access,\n * `EXECUTE` - Execute access,\n * `EXTEND` - File extension access,\n * `MODIFY` - File modification access,\n * `READ` - File read access,\n * `READ_ACL` - ACL read access,\n * `READ_ATTR` - Attribute read access,\n * `READ_EA` - Extended attribute read access,\n * `SYNCHRONIZE` - File synchronize access,\n * `WRITE_ACL` - ACL write access,\n * `WRITE_ATTR` - Attribute write access,\n * `WRITE_EA` - Extended attribute write access,\n * `WRITE_GROUP` - Group write access"
                                            }
                                        },
                                        "implicit_rights": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "enum": [
                                                    "READ",
                                                    "READ_EA",
                                                    "READ_ATTR",
                                                    "READ_ACL",
                                                    "WRITE_EA",
                                                    "WRITE_ATTR",
                                                    "WRITE_ACL",
                                                    "CHANGE_OWNER",
                                                    "WRITE_GROUP",
                                                    "DELETE",
                                                    "EXECUTE",
                                                    "MODIFY",
                                                    "EXTEND",
                                                    "ADD_FILE",
                                                    "ADD_SUBDIR",
                                                    "DELETE_CHILD",
                                                    "SYNCHRONIZE",
                                                    "ACCESS_RIGHTS_ALL"
                                                ],
                                                "description": "Cumulative rights implicitly granted.:\n * `ACCESS_RIGHTS_ALL` - All access rights,\n * `ADD_FILE` - File creation access,\n * `ADD_SUBDIR` - Directory creation access,\n * `CHANGE_OWNER` - Owner write access,\n * `DELETE` - Delete access,\n * `DELETE_CHILD` - Delete from directory access,\n * `EXECUTE` - Execute access,\n * `EXTEND` - File extension access,\n * `MODIFY` - File modification access,\n * `READ` - File read access,\n * `READ_ACL` - ACL read access,\n * `READ_ATTR` - Attribute read access,\n * `READ_EA` - Extended attribute read access,\n * `SYNCHRONIZE` - File synchronize access,\n * `WRITE_ACL` - ACL write access,\n * `WRITE_ATTR` - Attribute write access,\n * `WRITE_EA` - Extended attribute write access,\n * `WRITE_GROUP` - Group write access"
                                            }
                                        },
                                        "is_read_only": {
                                            "type": "boolean"
                                        },
                                        "max_rights": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "enum": [
                                                    "READ",
                                                    "READ_EA",
                                                    "READ_ATTR",
                                                    "READ_ACL",
                                                    "WRITE_EA",
                                                    "WRITE_ATTR",
                                                    "WRITE_ACL",
                                                    "CHANGE_OWNER",
                                                    "WRITE_GROUP",
                                                    "DELETE",
                                                    "EXECUTE",
                                                    "MODIFY",
                                                    "EXTEND",
                                                    "ADD_FILE",
                                                    "ADD_SUBDIR",
                                                    "DELETE_CHILD",
                                                    "SYNCHRONIZE",
                                                    "ACCESS_RIGHTS_ALL"
                                                ],
                                                "description": "Maximum rights which may be granted based on share permissions.:\n * `ACCESS_RIGHTS_ALL` - All access rights,\n * `ADD_FILE` - File creation access,\n * `ADD_SUBDIR` - Directory creation access,\n * `CHANGE_OWNER` - Owner write access,\n * `DELETE` - Delete access,\n * `DELETE_CHILD` - Delete from directory access,\n * `EXECUTE` - Execute access,\n * `EXTEND` - File extension access,\n * `MODIFY` - File modification access,\n * `READ` - File read access,\n * `READ_ACL` - ACL read access,\n * `READ_ATTR` - Attribute read access,\n * `READ_EA` - Extended attribute read access,\n * `SYNCHRONIZE` - File synchronize access,\n * `WRITE_ACL` - ACL write access,\n * `WRITE_ATTR` - Attribute write access,\n * `WRITE_EA` - Extended attribute write access,\n * `WRITE_GROUP` - Group write access"
                                            }
                                        },
                                        "effective_rights": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "enum": [
                                                    "READ",
                                                    "READ_EA",
                                                    "READ_ATTR",
                                                    "READ_ACL",
                                                    "WRITE_EA",
                                                    "WRITE_ATTR",
                                                    "WRITE_ACL",
                                                    "CHANGE_OWNER",
                                                    "WRITE_GROUP",
                                                    "DELETE",
                                                    "EXECUTE",
                                                    "MODIFY",
                                                    "EXTEND",
                                                    "ADD_FILE",
                                                    "ADD_SUBDIR",
                                                    "DELETE_CHILD",
                                                    "SYNCHRONIZE",
                                                    "ACCESS_RIGHTS_ALL"
                                                ],
                                                "description": "Effective rights granted to the user in question for the file or directory.:\n * `ACCESS_RIGHTS_ALL` - All access rights,\n * `ADD_FILE` - File creation access,\n * `ADD_SUBDIR` - Directory creation access,\n * `CHANGE_OWNER` - Owner write access,\n * `DELETE` - Delete access,\n * `DELETE_CHILD` - Delete from directory access,\n * `EXECUTE` - Execute access,\n * `EXTEND` - File extension access,\n * `MODIFY` - File modification access,\n * `READ` - File read access,\n * `READ_ACL` - ACL read access,\n * `READ_ATTR` - Attribute read access,\n * `READ_EA` - Extended attribute read access,\n * `SYNCHRONIZE` - File synchronize access,\n * `WRITE_ACL` - ACL write access,\n * `WRITE_ATTR` - Attribute write access,\n * `WRITE_EA` - Extended attribute write access,\n * `WRITE_GROUP` - Group write access"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "files"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "user": {
                                        "type": "object",
                                        "properties": {
                                            "domain": {
                                                "type": "string",
                                                "enum": [
                                                    "LOCAL",
                                                    "API_NULL_DOMAIN",
                                                    "WORLD",
                                                    "POSIX_USER",
                                                    "POSIX_GROUP",
                                                    "ACTIVE_DIRECTORY",
                                                    "API_INVALID_DOMAIN",
                                                    "API_RESERVED_DOMAIN",
                                                    "API_INTERNAL_DOMAIN",
                                                    "API_OPERATOR_DOMAIN",
                                                    "API_CREATOR_DOMAIN"
                                                ],
                                                "description": "domain:\n * `ACTIVE_DIRECTORY` - ACTIVE_DIRECTORY,\n * `API_CREATOR_DOMAIN` - API_CREATOR_DOMAIN,\n * `API_INTERNAL_DOMAIN` - API_INTERNAL_DOMAIN,\n * `API_INVALID_DOMAIN` - API_INVALID_DOMAIN,\n * `API_NULL_DOMAIN` - API_NULL_DOMAIN,\n * `API_OPERATOR_DOMAIN` - API_OPERATOR_DOMAIN,\n * `API_RESERVED_DOMAIN` - API_RESERVED_DOMAIN,\n * `LOCAL` - LOCAL,\n * `POSIX_GROUP` - POSIX_GROUP,\n * `POSIX_USER` - POSIX_USER,\n * `WORLD` - WORLD"
                                            },
                                            "auth_id": {
                                                "type": "string"
                                            },
                                            "uid": {
                                                "type": "number"
                                            },
                                            "gid": {
                                                "type": "number"
                                            },
                                            "sid": {
                                                "type": "string"
                                            },
                                            "name": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "primary_group": {
                                        "type": "object",
                                        "properties": {
                                            "domain": {
                                                "type": "string",
                                                "enum": [
                                                    "LOCAL",
                                                    "API_NULL_DOMAIN",
                                                    "WORLD",
                                                    "POSIX_USER",
                                                    "POSIX_GROUP",
                                                    "ACTIVE_DIRECTORY",
                                                    "API_INVALID_DOMAIN",
                                                    "API_RESERVED_DOMAIN",
                                                    "API_INTERNAL_DOMAIN",
                                                    "API_OPERATOR_DOMAIN",
                                                    "API_CREATOR_DOMAIN"
                                                ],
                                                "description": "domain:\n * `ACTIVE_DIRECTORY` - ACTIVE_DIRECTORY,\n * `API_CREATOR_DOMAIN` - API_CREATOR_DOMAIN,\n * `API_INTERNAL_DOMAIN` - API_INTERNAL_DOMAIN,\n * `API_INVALID_DOMAIN` - API_INVALID_DOMAIN,\n * `API_NULL_DOMAIN` - API_NULL_DOMAIN,\n * `API_OPERATOR_DOMAIN` - API_OPERATOR_DOMAIN,\n * `API_RESERVED_DOMAIN` - API_RESERVED_DOMAIN,\n * `LOCAL` - LOCAL,\n * `POSIX_GROUP` - POSIX_GROUP,\n * `POSIX_USER` - POSIX_USER,\n * `WORLD` - WORLD"
                                            },
                                            "auth_id": {
                                                "type": "string"
                                            },
                                            "uid": {
                                                "type": "number"
                                            },
                                            "gid": {
                                                "type": "number"
                                            },
                                            "sid": {
                                                "type": "string"
                                            },
                                            "name": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "auxiliary_identities": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "domain": {
                                                    "type": "string",
                                                    "enum": [
                                                        "LOCAL",
                                                        "API_NULL_DOMAIN",
                                                        "WORLD",
                                                        "POSIX_USER",
                                                        "POSIX_GROUP",
                                                        "ACTIVE_DIRECTORY",
                                                        "API_INVALID_DOMAIN",
                                                        "API_RESERVED_DOMAIN",
                                                        "API_INTERNAL_DOMAIN",
                                                        "API_OPERATOR_DOMAIN",
                                                        "API_CREATOR_DOMAIN"
                                                    ],
                                                    "description": "domain:\n * `ACTIVE_DIRECTORY` - ACTIVE_DIRECTORY,\n * `API_CREATOR_DOMAIN` - API_CREATOR_DOMAIN,\n * `API_INTERNAL_DOMAIN` - API_INTERNAL_DOMAIN,\n * `API_INVALID_DOMAIN` - API_INVALID_DOMAIN,\n * `API_NULL_DOMAIN` - API_NULL_DOMAIN,\n * `API_OPERATOR_DOMAIN` - API_OPERATOR_DOMAIN,\n * `API_RESERVED_DOMAIN` - API_RESERVED_DOMAIN,\n * `LOCAL` - LOCAL,\n * `POSIX_GROUP` - POSIX_GROUP,\n * `POSIX_USER` - POSIX_USER,\n * `WORLD` - WORLD"
                                                },
                                                "auth_id": {
                                                    "type": "string"
                                                },
                                                "uid": {
                                                    "type": "number"
                                                },
                                                "gid": {
                                                    "type": "number"
                                                },
                                                "sid": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/files/{ref}/info/attributes": {
            "get": {
                "summary": "Get file attributes.",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "The file ID (UInt64) or the absolute path to the file. This page handles the URL-encoding of the path.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "snapshot",
                        "in": "query",
                        "description": "The snapshot ID that specifies the version of the file to read. If not specified, read the head version.",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "path": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "num_links": {
                                            "type": "number"
                                        },
                                        "type": {
                                            "type": "string",
                                            "enum": [
                                                "FS_FILE_TYPE_FILE",
                                                "FS_FILE_TYPE_DIRECTORY",
                                                "FS_FILE_TYPE_SYMLINK",
                                                "FS_FILE_TYPE_UNIX_PIPE",
                                                "FS_FILE_TYPE_UNIX_CHARACTER_DEVICE",
                                                "FS_FILE_TYPE_UNIX_BLOCK_DEVICE",
                                                "FS_FILE_TYPE_UNIX_SOCKET"
                                            ],
                                            "description": "Resource type:\n * `FS_FILE_TYPE_DIRECTORY` - FS_FILE_TYPE_DIRECTORY,\n * `FS_FILE_TYPE_FILE` - FS_FILE_TYPE_FILE,\n * `FS_FILE_TYPE_SYMLINK` - FS_FILE_TYPE_SYMLINK,\n * `FS_FILE_TYPE_UNIX_BLOCK_DEVICE` - FS_FILE_TYPE_UNIX_BLOCK_DEVICE,\n * `FS_FILE_TYPE_UNIX_CHARACTER_DEVICE` - FS_FILE_TYPE_UNIX_CHARACTER_DEVICE,\n * `FS_FILE_TYPE_UNIX_PIPE` - FS_FILE_TYPE_UNIX_PIPE,\n * `FS_FILE_TYPE_UNIX_SOCKET` - FS_FILE_TYPE_UNIX_SOCKET"
                                        },
                                        "major_minor_numbers": {
                                            "type": "object",
                                            "properties": {
                                                "major": {
                                                    "type": "number"
                                                },
                                                "minor": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "symlink_target_type": {
                                            "type": "string",
                                            "enum": [
                                                "FS_FILE_TYPE_UNKNOWN",
                                                "FS_FILE_TYPE_FILE",
                                                "FS_FILE_TYPE_DIRECTORY"
                                            ],
                                            "description": "The type of the target file if this file is a symlink:\n * `FS_FILE_TYPE_DIRECTORY` - API_SYMLINK_TARGET_DIRECTORY,\n * `FS_FILE_TYPE_FILE` - API_SYMLINK_TARGET_FILE,\n * `FS_FILE_TYPE_UNKNOWN` - API_SYMLINK_TARGET_UNKNOWN"
                                        },
                                        "file_number": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "mode": {
                                            "type": "string"
                                        },
                                        "owner": {
                                            "type": "string"
                                        },
                                        "owner_details": {
                                            "type": "object",
                                            "properties": {
                                                "id_type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "LOCAL_USER",
                                                        "LOCAL_GROUP",
                                                        "NFS_GID",
                                                        "NFS_UID",
                                                        "SMB_SID",
                                                        "INTERNAL",
                                                        "QUMULO_OPERATOR"
                                                    ],
                                                    "description": "id_type:\n * `INTERNAL` - INTERNAL,\n * `LOCAL_GROUP` - LOCAL_GROUP,\n * `LOCAL_USER` - LOCAL_USER,\n * `NFS_GID` - NFS_GID,\n * `NFS_UID` - NFS_UID,\n * `QUMULO_OPERATOR` - QUMULO_OPERATOR,\n * `SMB_SID` - SMB_SID"
                                                },
                                                "id_value": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "group": {
                                            "type": "string"
                                        },
                                        "group_details": {
                                            "type": "object",
                                            "properties": {
                                                "id_type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "LOCAL_USER",
                                                        "LOCAL_GROUP",
                                                        "NFS_GID",
                                                        "NFS_UID",
                                                        "SMB_SID",
                                                        "INTERNAL",
                                                        "QUMULO_OPERATOR"
                                                    ],
                                                    "description": "id_type:\n * `INTERNAL` - INTERNAL,\n * `LOCAL_GROUP` - LOCAL_GROUP,\n * `LOCAL_USER` - LOCAL_USER,\n * `NFS_GID` - NFS_GID,\n * `NFS_UID` - NFS_UID,\n * `QUMULO_OPERATOR` - QUMULO_OPERATOR,\n * `SMB_SID` - SMB_SID"
                                                },
                                                "id_value": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "blocks": {
                                            "type": "string"
                                        },
                                        "datablocks": {
                                            "type": "string"
                                        },
                                        "metablocks": {
                                            "type": "string"
                                        },
                                        "size": {
                                            "type": "string"
                                        },
                                        "access_time": {
                                            "type": "string"
                                        },
                                        "modification_time": {
                                            "type": "string"
                                        },
                                        "change_time": {
                                            "type": "string"
                                        },
                                        "creation_time": {
                                            "type": "string"
                                        },
                                        "child_count": {
                                            "type": "number"
                                        },
                                        "extended_attributes": {
                                            "type": "object",
                                            "properties": {
                                                "read_only": {
                                                    "type": "boolean"
                                                },
                                                "hidden": {
                                                    "type": "boolean"
                                                },
                                                "system": {
                                                    "type": "boolean"
                                                },
                                                "archive": {
                                                    "type": "boolean"
                                                },
                                                "temporary": {
                                                    "type": "boolean"
                                                },
                                                "compressed": {
                                                    "type": "boolean"
                                                },
                                                "not_content_indexed": {
                                                    "type": "boolean"
                                                },
                                                "sparse_file": {
                                                    "type": "boolean"
                                                }
                                            }
                                        },
                                        "directory_entry_hash_policy": {
                                            "type": "string",
                                            "enum": [
                                                "FS_DIRECTORY_HASH_VERSION_LOWER",
                                                "FS_DIRECTORY_HASH_VERSION_FOLDED"
                                            ],
                                            "description": "Hash policy for directory entries:\n * `FS_DIRECTORY_HASH_VERSION_FOLDED` - FS_DIRECTORY_HASH_VERSION_FOLDED,\n * `FS_DIRECTORY_HASH_VERSION_LOWER` - FS_DIRECTORY_HASH_VERSION_LOWER"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "files"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            },
            "patch": {
                "summary": "Update a subset of file attributes. Owner or mode bits change is done POSIX-style; file's ACL is updated to match the requested permissions.",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "The file ID (UInt64) or the absolute path to the file. This page handles the URL-encoding of the path.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "path": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "num_links": {
                                            "type": "number"
                                        },
                                        "type": {
                                            "type": "string",
                                            "enum": [
                                                "FS_FILE_TYPE_FILE",
                                                "FS_FILE_TYPE_DIRECTORY",
                                                "FS_FILE_TYPE_SYMLINK",
                                                "FS_FILE_TYPE_UNIX_PIPE",
                                                "FS_FILE_TYPE_UNIX_CHARACTER_DEVICE",
                                                "FS_FILE_TYPE_UNIX_BLOCK_DEVICE",
                                                "FS_FILE_TYPE_UNIX_SOCKET"
                                            ],
                                            "description": "Resource type:\n * `FS_FILE_TYPE_DIRECTORY` - FS_FILE_TYPE_DIRECTORY,\n * `FS_FILE_TYPE_FILE` - FS_FILE_TYPE_FILE,\n * `FS_FILE_TYPE_SYMLINK` - FS_FILE_TYPE_SYMLINK,\n * `FS_FILE_TYPE_UNIX_BLOCK_DEVICE` - FS_FILE_TYPE_UNIX_BLOCK_DEVICE,\n * `FS_FILE_TYPE_UNIX_CHARACTER_DEVICE` - FS_FILE_TYPE_UNIX_CHARACTER_DEVICE,\n * `FS_FILE_TYPE_UNIX_PIPE` - FS_FILE_TYPE_UNIX_PIPE,\n * `FS_FILE_TYPE_UNIX_SOCKET` - FS_FILE_TYPE_UNIX_SOCKET"
                                        },
                                        "major_minor_numbers": {
                                            "type": "object",
                                            "properties": {
                                                "major": {
                                                    "type": "number"
                                                },
                                                "minor": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "symlink_target_type": {
                                            "type": "string",
                                            "enum": [
                                                "FS_FILE_TYPE_UNKNOWN",
                                                "FS_FILE_TYPE_FILE",
                                                "FS_FILE_TYPE_DIRECTORY"
                                            ],
                                            "description": "The type of the target file if this file is a symlink:\n * `FS_FILE_TYPE_DIRECTORY` - API_SYMLINK_TARGET_DIRECTORY,\n * `FS_FILE_TYPE_FILE` - API_SYMLINK_TARGET_FILE,\n * `FS_FILE_TYPE_UNKNOWN` - API_SYMLINK_TARGET_UNKNOWN"
                                        },
                                        "file_number": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "mode": {
                                            "type": "string"
                                        },
                                        "owner": {
                                            "type": "string"
                                        },
                                        "owner_details": {
                                            "type": "object",
                                            "properties": {
                                                "id_type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "LOCAL_USER",
                                                        "LOCAL_GROUP",
                                                        "NFS_GID",
                                                        "NFS_UID",
                                                        "SMB_SID",
                                                        "INTERNAL",
                                                        "QUMULO_OPERATOR"
                                                    ],
                                                    "description": "id_type:\n * `INTERNAL` - INTERNAL,\n * `LOCAL_GROUP` - LOCAL_GROUP,\n * `LOCAL_USER` - LOCAL_USER,\n * `NFS_GID` - NFS_GID,\n * `NFS_UID` - NFS_UID,\n * `QUMULO_OPERATOR` - QUMULO_OPERATOR,\n * `SMB_SID` - SMB_SID"
                                                },
                                                "id_value": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "group": {
                                            "type": "string"
                                        },
                                        "group_details": {
                                            "type": "object",
                                            "properties": {
                                                "id_type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "LOCAL_USER",
                                                        "LOCAL_GROUP",
                                                        "NFS_GID",
                                                        "NFS_UID",
                                                        "SMB_SID",
                                                        "INTERNAL",
                                                        "QUMULO_OPERATOR"
                                                    ],
                                                    "description": "id_type:\n * `INTERNAL` - INTERNAL,\n * `LOCAL_GROUP` - LOCAL_GROUP,\n * `LOCAL_USER` - LOCAL_USER,\n * `NFS_GID` - NFS_GID,\n * `NFS_UID` - NFS_UID,\n * `QUMULO_OPERATOR` - QUMULO_OPERATOR,\n * `SMB_SID` - SMB_SID"
                                                },
                                                "id_value": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "blocks": {
                                            "type": "string"
                                        },
                                        "datablocks": {
                                            "type": "string"
                                        },
                                        "metablocks": {
                                            "type": "string"
                                        },
                                        "size": {
                                            "type": "string"
                                        },
                                        "access_time": {
                                            "type": "string"
                                        },
                                        "modification_time": {
                                            "type": "string"
                                        },
                                        "change_time": {
                                            "type": "string"
                                        },
                                        "creation_time": {
                                            "type": "string"
                                        },
                                        "child_count": {
                                            "type": "number"
                                        },
                                        "extended_attributes": {
                                            "type": "object",
                                            "properties": {
                                                "read_only": {
                                                    "type": "boolean"
                                                },
                                                "hidden": {
                                                    "type": "boolean"
                                                },
                                                "system": {
                                                    "type": "boolean"
                                                },
                                                "archive": {
                                                    "type": "boolean"
                                                },
                                                "temporary": {
                                                    "type": "boolean"
                                                },
                                                "compressed": {
                                                    "type": "boolean"
                                                },
                                                "not_content_indexed": {
                                                    "type": "boolean"
                                                },
                                                "sparse_file": {
                                                    "type": "boolean"
                                                }
                                            }
                                        },
                                        "directory_entry_hash_policy": {
                                            "type": "string",
                                            "enum": [
                                                "FS_DIRECTORY_HASH_VERSION_LOWER",
                                                "FS_DIRECTORY_HASH_VERSION_FOLDED"
                                            ],
                                            "description": "Hash policy for directory entries:\n * `FS_DIRECTORY_HASH_VERSION_FOLDED` - FS_DIRECTORY_HASH_VERSION_FOLDED,\n * `FS_DIRECTORY_HASH_VERSION_LOWER` - FS_DIRECTORY_HASH_VERSION_LOWER"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "files"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "path": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "num_links": {
                                        "type": "number"
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "FS_FILE_TYPE_FILE",
                                            "FS_FILE_TYPE_DIRECTORY",
                                            "FS_FILE_TYPE_SYMLINK",
                                            "FS_FILE_TYPE_UNIX_PIPE",
                                            "FS_FILE_TYPE_UNIX_CHARACTER_DEVICE",
                                            "FS_FILE_TYPE_UNIX_BLOCK_DEVICE",
                                            "FS_FILE_TYPE_UNIX_SOCKET"
                                        ],
                                        "description": "Resource type:\n * `FS_FILE_TYPE_DIRECTORY` - FS_FILE_TYPE_DIRECTORY,\n * `FS_FILE_TYPE_FILE` - FS_FILE_TYPE_FILE,\n * `FS_FILE_TYPE_SYMLINK` - FS_FILE_TYPE_SYMLINK,\n * `FS_FILE_TYPE_UNIX_BLOCK_DEVICE` - FS_FILE_TYPE_UNIX_BLOCK_DEVICE,\n * `FS_FILE_TYPE_UNIX_CHARACTER_DEVICE` - FS_FILE_TYPE_UNIX_CHARACTER_DEVICE,\n * `FS_FILE_TYPE_UNIX_PIPE` - FS_FILE_TYPE_UNIX_PIPE,\n * `FS_FILE_TYPE_UNIX_SOCKET` - FS_FILE_TYPE_UNIX_SOCKET"
                                    },
                                    "major_minor_numbers": {
                                        "type": "object",
                                        "properties": {
                                            "major": {
                                                "type": "number"
                                            },
                                            "minor": {
                                                "type": "number"
                                            }
                                        }
                                    },
                                    "symlink_target_type": {
                                        "type": "string",
                                        "enum": [
                                            "FS_FILE_TYPE_UNKNOWN",
                                            "FS_FILE_TYPE_FILE",
                                            "FS_FILE_TYPE_DIRECTORY"
                                        ],
                                        "description": "The type of the target file if this file is a symlink:\n * `FS_FILE_TYPE_DIRECTORY` - API_SYMLINK_TARGET_DIRECTORY,\n * `FS_FILE_TYPE_FILE` - API_SYMLINK_TARGET_FILE,\n * `FS_FILE_TYPE_UNKNOWN` - API_SYMLINK_TARGET_UNKNOWN"
                                    },
                                    "file_number": {
                                        "type": "string"
                                    },
                                    "id": {
                                        "type": "string"
                                    },
                                    "mode": {
                                        "type": "string"
                                    },
                                    "owner": {
                                        "type": "string"
                                    },
                                    "owner_details": {
                                        "type": "object",
                                        "properties": {
                                            "id_type": {
                                                "type": "string",
                                                "enum": [
                                                    "LOCAL_USER",
                                                    "LOCAL_GROUP",
                                                    "NFS_GID",
                                                    "NFS_UID",
                                                    "SMB_SID",
                                                    "INTERNAL",
                                                    "QUMULO_OPERATOR"
                                                ],
                                                "description": "id_type:\n * `INTERNAL` - INTERNAL,\n * `LOCAL_GROUP` - LOCAL_GROUP,\n * `LOCAL_USER` - LOCAL_USER,\n * `NFS_GID` - NFS_GID,\n * `NFS_UID` - NFS_UID,\n * `QUMULO_OPERATOR` - QUMULO_OPERATOR,\n * `SMB_SID` - SMB_SID"
                                            },
                                            "id_value": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "group": {
                                        "type": "string"
                                    },
                                    "group_details": {
                                        "type": "object",
                                        "properties": {
                                            "id_type": {
                                                "type": "string",
                                                "enum": [
                                                    "LOCAL_USER",
                                                    "LOCAL_GROUP",
                                                    "NFS_GID",
                                                    "NFS_UID",
                                                    "SMB_SID",
                                                    "INTERNAL",
                                                    "QUMULO_OPERATOR"
                                                ],
                                                "description": "id_type:\n * `INTERNAL` - INTERNAL,\n * `LOCAL_GROUP` - LOCAL_GROUP,\n * `LOCAL_USER` - LOCAL_USER,\n * `NFS_GID` - NFS_GID,\n * `NFS_UID` - NFS_UID,\n * `QUMULO_OPERATOR` - QUMULO_OPERATOR,\n * `SMB_SID` - SMB_SID"
                                            },
                                            "id_value": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "blocks": {
                                        "type": "string"
                                    },
                                    "datablocks": {
                                        "type": "string"
                                    },
                                    "metablocks": {
                                        "type": "string"
                                    },
                                    "size": {
                                        "type": "string"
                                    },
                                    "access_time": {
                                        "type": "string"
                                    },
                                    "modification_time": {
                                        "type": "string"
                                    },
                                    "change_time": {
                                        "type": "string"
                                    },
                                    "creation_time": {
                                        "type": "string"
                                    },
                                    "child_count": {
                                        "type": "number"
                                    },
                                    "extended_attributes": {
                                        "type": "object",
                                        "properties": {
                                            "read_only": {
                                                "type": "boolean"
                                            },
                                            "hidden": {
                                                "type": "boolean"
                                            },
                                            "system": {
                                                "type": "boolean"
                                            },
                                            "archive": {
                                                "type": "boolean"
                                            },
                                            "temporary": {
                                                "type": "boolean"
                                            },
                                            "compressed": {
                                                "type": "boolean"
                                            },
                                            "not_content_indexed": {
                                                "type": "boolean"
                                            },
                                            "sparse_file": {
                                                "type": "boolean"
                                            }
                                        }
                                    },
                                    "directory_entry_hash_policy": {
                                        "type": "string",
                                        "enum": [
                                            "FS_DIRECTORY_HASH_VERSION_LOWER",
                                            "FS_DIRECTORY_HASH_VERSION_FOLDED"
                                        ],
                                        "description": "Hash policy for directory entries:\n * `FS_DIRECTORY_HASH_VERSION_FOLDED` - FS_DIRECTORY_HASH_VERSION_FOLDED,\n * `FS_DIRECTORY_HASH_VERSION_LOWER` - FS_DIRECTORY_HASH_VERSION_LOWER"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/files/{ref}/sample/": {
            "get": {
                "summary": "Retrieve a random sampling of files, with the probability of being chosen based on by-value property.",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "The file ID (UInt64) or the absolute path to the file. This page handles the URL-encoding of the path.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "by-value",
                        "in": "query",
                        "description": "Weight the sampling by the value specified: capacity (total bytes used for data and metadata), data (total bytes used for data only), file (file count), named_streams (named stream count):\n * `capacity` - capacity,\n * `data` - data,\n * `file` - file,\n * `named_streams` - named_streams",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "capacity",
                                "data",
                                "file",
                                "named_streams"
                            ],
                            "description": "Weight the sampling by the value specified: capacity (total bytes used for data and metadata), data (total bytes used for data only), file (file count), named_streams (named stream count):\n * `capacity` - capacity,\n * `data` - data,\n * `file` - file,\n * `named_streams` - named_streams"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Maximum number of entries returned",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "FS_FILE_TYPE_FILE",
                                                    "FS_FILE_TYPE_DIRECTORY",
                                                    "FS_FILE_TYPE_SYMLINK",
                                                    "FS_FILE_TYPE_UNIX_PIPE",
                                                    "FS_FILE_TYPE_UNIX_CHARACTER_DEVICE",
                                                    "FS_FILE_TYPE_UNIX_BLOCK_DEVICE",
                                                    "FS_FILE_TYPE_UNIX_SOCKET"
                                                ],
                                                "description": "type:\n * `FS_FILE_TYPE_DIRECTORY` - FS_FILE_TYPE_DIRECTORY,\n * `FS_FILE_TYPE_FILE` - FS_FILE_TYPE_FILE,\n * `FS_FILE_TYPE_SYMLINK` - FS_FILE_TYPE_SYMLINK,\n * `FS_FILE_TYPE_UNIX_BLOCK_DEVICE` - FS_FILE_TYPE_UNIX_BLOCK_DEVICE,\n * `FS_FILE_TYPE_UNIX_CHARACTER_DEVICE` - FS_FILE_TYPE_UNIX_CHARACTER_DEVICE,\n * `FS_FILE_TYPE_UNIX_PIPE` - FS_FILE_TYPE_UNIX_PIPE,\n * `FS_FILE_TYPE_UNIX_SOCKET` - FS_FILE_TYPE_UNIX_SOCKET"
                                            },
                                            "id": {
                                                "type": "string"
                                            },
                                            "capacity_usage": {
                                                "type": "string"
                                            },
                                            "data_usage": {
                                                "type": "string"
                                            },
                                            "meta_usage": {
                                                "type": "string"
                                            },
                                            "num_files": {
                                                "type": "string"
                                            },
                                            "num_directories": {
                                                "type": "string"
                                            },
                                            "num_symlinks": {
                                                "type": "string"
                                            },
                                            "num_other_objects": {
                                                "type": "string"
                                            },
                                            "named_stream_data_usage": {
                                                "type": "string"
                                            },
                                            "num_named_streams": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "files"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/files/{ref}/aggregates/": {
            "get": {
                "summary": "Return aggregated data for a directory (like capacity, IOPS, etc.)",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "The file ID (UInt64) or the absolute path to the file. This page handles the URL-encoding of the path.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "max-entries",
                        "in": "query",
                        "description": "Maximum number of directory entries to return (defauilt: 1000)",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "order-by",
                        "in": "query",
                        "description": "Ordering field used for top N selection and sorting (default: total_blocks):\n * `total_blocks` - total_blocks,\n * `total_datablocks` - total_datablocks,\n * `total_directories` - total_directories,\n * `total_files` - total_files,\n * `total_metablocks` - total_metablocks,\n * `total_named_stream_datablocks` - total_named_stream_datablocks,\n * `total_named_streams` - total_named_streams,\n * `total_other` - total_other,\n * `total_symlinks` - total_symlinks",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "total_blocks",
                                "total_datablocks",
                                "total_named_stream_datablocks",
                                "total_metablocks",
                                "total_files",
                                "total_directories",
                                "total_symlinks",
                                "total_other",
                                "total_named_streams"
                            ],
                            "description": "Ordering field used for top N selection and sorting (default: total_blocks):\n * `total_blocks` - total_blocks,\n * `total_datablocks` - total_datablocks,\n * `total_directories` - total_directories,\n * `total_files` - total_files,\n * `total_metablocks` - total_metablocks,\n * `total_named_stream_datablocks` - total_named_stream_datablocks,\n * `total_named_streams` - total_named_streams,\n * `total_other` - total_other,\n * `total_symlinks` - total_symlinks"
                        }
                    },
                    {
                        "name": "snapshot",
                        "in": "query",
                        "description": "Snapshot ID specifying the version of the directory to use. If not specified, use the head version.",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "path": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "files": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "enum": [
                                                            "FS_FILE_TYPE_FILE",
                                                            "FS_FILE_TYPE_DIRECTORY",
                                                            "FS_FILE_TYPE_SYMLINK",
                                                            "FS_FILE_TYPE_UNIX_PIPE",
                                                            "FS_FILE_TYPE_UNIX_CHARACTER_DEVICE",
                                                            "FS_FILE_TYPE_UNIX_BLOCK_DEVICE",
                                                            "FS_FILE_TYPE_UNIX_SOCKET"
                                                        ],
                                                        "description": "type:\n * `FS_FILE_TYPE_DIRECTORY` - FS_FILE_TYPE_DIRECTORY,\n * `FS_FILE_TYPE_FILE` - FS_FILE_TYPE_FILE,\n * `FS_FILE_TYPE_SYMLINK` - FS_FILE_TYPE_SYMLINK,\n * `FS_FILE_TYPE_UNIX_BLOCK_DEVICE` - FS_FILE_TYPE_UNIX_BLOCK_DEVICE,\n * `FS_FILE_TYPE_UNIX_CHARACTER_DEVICE` - FS_FILE_TYPE_UNIX_CHARACTER_DEVICE,\n * `FS_FILE_TYPE_UNIX_PIPE` - FS_FILE_TYPE_UNIX_PIPE,\n * `FS_FILE_TYPE_UNIX_SOCKET` - FS_FILE_TYPE_UNIX_SOCKET"
                                                    },
                                                    "id": {
                                                        "type": "string"
                                                    },
                                                    "capacity_usage": {
                                                        "type": "string"
                                                    },
                                                    "data_usage": {
                                                        "type": "string"
                                                    },
                                                    "meta_usage": {
                                                        "type": "string"
                                                    },
                                                    "num_files": {
                                                        "type": "string"
                                                    },
                                                    "num_directories": {
                                                        "type": "string"
                                                    },
                                                    "num_symlinks": {
                                                        "type": "string"
                                                    },
                                                    "num_other_objects": {
                                                        "type": "string"
                                                    },
                                                    "named_stream_data_usage": {
                                                        "type": "string"
                                                    },
                                                    "num_named_streams": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "total_capacity": {
                                            "type": "string"
                                        },
                                        "total_data": {
                                            "type": "string"
                                        },
                                        "total_named_stream_data": {
                                            "type": "string"
                                        },
                                        "total_meta": {
                                            "type": "string"
                                        },
                                        "total_files": {
                                            "type": "string"
                                        },
                                        "total_directories": {
                                            "type": "string"
                                        },
                                        "total_symlinks": {
                                            "type": "string"
                                        },
                                        "total_other_objects": {
                                            "type": "string"
                                        },
                                        "total_named_streams": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "files"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/files/{ref}/recursive-aggregates/": {
            "get": {
                "summary": "Return aggregated data for this directory and its children. It does a breadth-first traversal of directories up to the user-specified limit (see max_entries and max_depth parameters) or system-imposed limit. Directory entries that are smaller than 10% of the directory's total size are omitted.",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "The file ID (UInt64) or the absolute path to the file. This page handles the URL-encoding of the path.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "max-entries",
                        "in": "query",
                        "description": "Maximum directory entries we see before breaking out of the tree walk (default: 1000, system limit: 5000)",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "max-depth",
                        "in": "query",
                        "description": "Maximum depth to traverse while doing the tree walk (default: 10, system limit: 5000)",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "order-by",
                        "in": "query",
                        "description": "Ordering field used for top N selection and sorting (default: total_blocks):\n * `total_blocks` - total_blocks,\n * `total_datablocks` - total_datablocks,\n * `total_directories` - total_directories,\n * `total_files` - total_files,\n * `total_metablocks` - total_metablocks,\n * `total_named_stream_datablocks` - total_named_stream_datablocks,\n * `total_named_streams` - total_named_streams,\n * `total_other` - total_other,\n * `total_symlinks` - total_symlinks",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "total_blocks",
                                "total_datablocks",
                                "total_named_stream_datablocks",
                                "total_metablocks",
                                "total_files",
                                "total_directories",
                                "total_symlinks",
                                "total_other",
                                "total_named_streams"
                            ],
                            "description": "Ordering field used for top N selection and sorting (default: total_blocks):\n * `total_blocks` - total_blocks,\n * `total_datablocks` - total_datablocks,\n * `total_directories` - total_directories,\n * `total_files` - total_files,\n * `total_metablocks` - total_metablocks,\n * `total_named_stream_datablocks` - total_named_stream_datablocks,\n * `total_named_streams` - total_named_streams,\n * `total_other` - total_other,\n * `total_symlinks` - total_symlinks"
                        }
                    },
                    {
                        "name": "snapshot",
                        "in": "query",
                        "description": "Snapshot ID specifying the version of the directory to use. If not specified, use the head version.",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "path": {
                                                "type": "string"
                                            },
                                            "id": {
                                                "type": "string"
                                            },
                                            "files": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string"
                                                        },
                                                        "type": {
                                                            "type": "string",
                                                            "enum": [
                                                                "FS_FILE_TYPE_FILE",
                                                                "FS_FILE_TYPE_DIRECTORY",
                                                                "FS_FILE_TYPE_SYMLINK",
                                                                "FS_FILE_TYPE_UNIX_PIPE",
                                                                "FS_FILE_TYPE_UNIX_CHARACTER_DEVICE",
                                                                "FS_FILE_TYPE_UNIX_BLOCK_DEVICE",
                                                                "FS_FILE_TYPE_UNIX_SOCKET"
                                                            ],
                                                            "description": "type:\n * `FS_FILE_TYPE_DIRECTORY` - FS_FILE_TYPE_DIRECTORY,\n * `FS_FILE_TYPE_FILE` - FS_FILE_TYPE_FILE,\n * `FS_FILE_TYPE_SYMLINK` - FS_FILE_TYPE_SYMLINK,\n * `FS_FILE_TYPE_UNIX_BLOCK_DEVICE` - FS_FILE_TYPE_UNIX_BLOCK_DEVICE,\n * `FS_FILE_TYPE_UNIX_CHARACTER_DEVICE` - FS_FILE_TYPE_UNIX_CHARACTER_DEVICE,\n * `FS_FILE_TYPE_UNIX_PIPE` - FS_FILE_TYPE_UNIX_PIPE,\n * `FS_FILE_TYPE_UNIX_SOCKET` - FS_FILE_TYPE_UNIX_SOCKET"
                                                        },
                                                        "id": {
                                                            "type": "string"
                                                        },
                                                        "capacity_usage": {
                                                            "type": "string"
                                                        },
                                                        "data_usage": {
                                                            "type": "string"
                                                        },
                                                        "meta_usage": {
                                                            "type": "string"
                                                        },
                                                        "num_files": {
                                                            "type": "string"
                                                        },
                                                        "num_directories": {
                                                            "type": "string"
                                                        },
                                                        "num_symlinks": {
                                                            "type": "string"
                                                        },
                                                        "num_other_objects": {
                                                            "type": "string"
                                                        },
                                                        "named_stream_data_usage": {
                                                            "type": "string"
                                                        },
                                                        "num_named_streams": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            },
                                            "total_capacity": {
                                                "type": "string"
                                            },
                                            "total_data": {
                                                "type": "string"
                                            },
                                            "total_named_stream_data": {
                                                "type": "string"
                                            },
                                            "total_meta": {
                                                "type": "string"
                                            },
                                            "total_files": {
                                                "type": "string"
                                            },
                                            "total_directories": {
                                                "type": "string"
                                            },
                                            "total_symlinks": {
                                                "type": "string"
                                            },
                                            "total_other_objects": {
                                                "type": "string"
                                            },
                                            "total_named_streams": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "files"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/files/{ref}/locks/nlm/byte-range/": {
            "get": {
                "summary": "Return a list of all NLM byte range locks currently granted on the specified file.",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "The file ID (UInt64) or the absolute path to the file. This page handles the URL-encoding of the path.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "snapshot",
                        "in": "query",
                        "description": "The snapshot ID that specifies the version of the file whose locks the system lists. If not specified, list by using the head version.",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "Return entries after the given key (keys are returned in the paging object)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Return no more than this many entries; the system may choose a smaller limit.",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "grants": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "file_id": {
                                                        "type": "string"
                                                    },
                                                    "stream_id": {
                                                        "type": "string"
                                                    },
                                                    "snapshot_id": {
                                                        "type": "string"
                                                    },
                                                    "mode": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "enum": [
                                                                "API_BYTE_RANGE_EXCLUSIVE",
                                                                "API_BYTE_RANGE_SHARED",
                                                                "API_BYTE_RANGE_READ_OP",
                                                                "API_BYTE_RANGE_WRITE_OP"
                                                            ],
                                                            "description": "mode:\n * `API_BYTE_RANGE_EXCLUSIVE` - API_BYTE_RANGE_EXCLUSIVE,\n * `API_BYTE_RANGE_READ_OP` - API_BYTE_RANGE_READ_OP,\n * `API_BYTE_RANGE_SHARED` - API_BYTE_RANGE_SHARED,\n * `API_BYTE_RANGE_WRITE_OP` - API_BYTE_RANGE_WRITE_OP"
                                                        }
                                                    },
                                                    "offset": {
                                                        "type": "string"
                                                    },
                                                    "size": {
                                                        "type": "string"
                                                    },
                                                    "owner_id": {
                                                        "type": "string"
                                                    },
                                                    "owner_name": {
                                                        "type": "string"
                                                    },
                                                    "owner_address": {
                                                        "type": "string"
                                                    },
                                                    "node_address": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "files"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            },
            "delete": {
                "summary": "Release an arbitrary lock range. This is dangerous, and should only be used after confirming that the owning process has leaked the lock, and only if there is a very good reason why the situation should not be resolved by terminating that process.",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "The file ID (UInt64) or the absolute path to the file. This page handles the URL-encoding of the path.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset of the range to release",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "Size of range to release. Zero releases to the maximum file size.",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "owner_id",
                        "in": "query",
                        "description": "Opaque, unique identifier for the process that owns the lock. This is the owner_id attribute on entries returned by GET.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "snapshot",
                        "in": "query",
                        "description": "The snapshot ID that specifies the version of the file whose locks the system releases. If not specified, release on head.",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success"
                    }
                },
                "tags": [
                    "files"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/files/{ref}/locks/nlm/byte-range/waiters/": {
            "get": {
                "summary": "Return a list of all NLM byte range requests currently waiting on the specified file.",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "The file ID (UInt64) or the absolute path to the file. This page handles the URL-encoding of the path.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "snapshot",
                        "in": "query",
                        "description": "The snapshot ID that specifies the version of the file whose waiters the system lists. If not specified, list on head.",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "Return entries after the given key (keys are returned in the paging object)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Return no more than this many entries; the system may choose a smaller limit.",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "waiters": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "file_id": {
                                                        "type": "string"
                                                    },
                                                    "stream_id": {
                                                        "type": "string"
                                                    },
                                                    "snapshot_id": {
                                                        "type": "string"
                                                    },
                                                    "mode": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "enum": [
                                                                "API_BYTE_RANGE_EXCLUSIVE",
                                                                "API_BYTE_RANGE_SHARED",
                                                                "API_BYTE_RANGE_READ_OP",
                                                                "API_BYTE_RANGE_WRITE_OP"
                                                            ],
                                                            "description": "mode:\n * `API_BYTE_RANGE_EXCLUSIVE` - API_BYTE_RANGE_EXCLUSIVE,\n * `API_BYTE_RANGE_READ_OP` - API_BYTE_RANGE_READ_OP,\n * `API_BYTE_RANGE_SHARED` - API_BYTE_RANGE_SHARED,\n * `API_BYTE_RANGE_WRITE_OP` - API_BYTE_RANGE_WRITE_OP"
                                                        }
                                                    },
                                                    "offset": {
                                                        "type": "string"
                                                    },
                                                    "size": {
                                                        "type": "string"
                                                    },
                                                    "owner_id": {
                                                        "type": "string"
                                                    },
                                                    "owner_name": {
                                                        "type": "string"
                                                    },
                                                    "owner_address": {
                                                        "type": "string"
                                                    },
                                                    "node_address": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "files"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/files/{ref}/locks/nfs4/byte-range/": {
            "get": {
                "summary": "Return a list of all NFSv4.1 byte range locks currently granted on the specified file.",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "The file ID (UInt64) or the absolute path to the file. This page handles the URL-encoding of the path.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "snapshot",
                        "in": "query",
                        "description": "The snapshot ID that specifies the version of the file whose locks the system lists. If not specified, list by using the head version.",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "Return entries after the given key (keys are returned in the paging object)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Return no more than this many entries; the system may choose a smaller limit.",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "grants": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "file_id": {
                                                        "type": "string"
                                                    },
                                                    "stream_id": {
                                                        "type": "string"
                                                    },
                                                    "snapshot_id": {
                                                        "type": "string"
                                                    },
                                                    "mode": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "enum": [
                                                                "API_BYTE_RANGE_EXCLUSIVE",
                                                                "API_BYTE_RANGE_SHARED",
                                                                "API_BYTE_RANGE_READ_OP",
                                                                "API_BYTE_RANGE_WRITE_OP"
                                                            ],
                                                            "description": "mode:\n * `API_BYTE_RANGE_EXCLUSIVE` - API_BYTE_RANGE_EXCLUSIVE,\n * `API_BYTE_RANGE_READ_OP` - API_BYTE_RANGE_READ_OP,\n * `API_BYTE_RANGE_SHARED` - API_BYTE_RANGE_SHARED,\n * `API_BYTE_RANGE_WRITE_OP` - API_BYTE_RANGE_WRITE_OP"
                                                        }
                                                    },
                                                    "offset": {
                                                        "type": "string"
                                                    },
                                                    "size": {
                                                        "type": "string"
                                                    },
                                                    "owner_id": {
                                                        "type": "string"
                                                    },
                                                    "owner_name": {
                                                        "type": "string"
                                                    },
                                                    "owner_address": {
                                                        "type": "string"
                                                    },
                                                    "node_address": {
                                                        "type": "string"
                                                    },
                                                    "client_id": {
                                                        "type": "string"
                                                    },
                                                    "state_id": {
                                                        "type": "string"
                                                    },
                                                    "node_id": {
                                                        "type": "number"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "files"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/files/{ref}/locks/smb/byte-range/": {
            "get": {
                "summary": "Return a list of all SMB byte range locks currently granted on the specified file.",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "The file ID (UInt64) or the absolute path to the file. This page handles the URL-encoding of the path.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "snapshot",
                        "in": "query",
                        "description": "The snapshot ID that specifies the version of the file whose locks the system lists. If not specified, list by using the head version.",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "Return entries after the given key (keys are returned in the paging object)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Return no more than this many entries; the system may choose a smaller limit.",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "grants": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "file_id": {
                                                        "type": "string"
                                                    },
                                                    "stream_id": {
                                                        "type": "string"
                                                    },
                                                    "snapshot_id": {
                                                        "type": "string"
                                                    },
                                                    "mode": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "enum": [
                                                                "API_BYTE_RANGE_EXCLUSIVE",
                                                                "API_BYTE_RANGE_SHARED",
                                                                "API_BYTE_RANGE_READ_OP",
                                                                "API_BYTE_RANGE_WRITE_OP"
                                                            ],
                                                            "description": "mode:\n * `API_BYTE_RANGE_EXCLUSIVE` - API_BYTE_RANGE_EXCLUSIVE,\n * `API_BYTE_RANGE_READ_OP` - API_BYTE_RANGE_READ_OP,\n * `API_BYTE_RANGE_SHARED` - API_BYTE_RANGE_SHARED,\n * `API_BYTE_RANGE_WRITE_OP` - API_BYTE_RANGE_WRITE_OP"
                                                        }
                                                    },
                                                    "offset": {
                                                        "type": "string"
                                                    },
                                                    "size": {
                                                        "type": "string"
                                                    },
                                                    "owner_id": {
                                                        "type": "string"
                                                    },
                                                    "owner_name": {
                                                        "type": "string"
                                                    },
                                                    "owner_address": {
                                                        "type": "string"
                                                    },
                                                    "node_address": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "files"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/files/{ref}/locks/smb/share-mode/": {
            "get": {
                "summary": "Return a list of all SMB share mode locks currently granted on the specified file.",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "The file ID (UInt64) or the absolute path to the file. This page handles the URL-encoding of the path.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "snapshot",
                        "in": "query",
                        "description": "The snapshot ID that specifies the version of the file whose locks the system lists. If not specified, list on head.",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "Return entries after the given key (keys are returned in the paging object)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Return no more than this many entries; the system may choose a smaller limit.",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "grants": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "file_id": {
                                                        "type": "string"
                                                    },
                                                    "stream_id": {
                                                        "type": "string"
                                                    },
                                                    "snapshot_id": {
                                                        "type": "string"
                                                    },
                                                    "mode": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "enum": [
                                                                "API_SHARE_MODE_READ",
                                                                "API_SHARE_MODE_WRITE",
                                                                "API_SHARE_MODE_DELETE",
                                                                "API_SHARE_MODE_EXCLUDE_READ",
                                                                "API_SHARE_MODE_EXCLUDE_WRITE",
                                                                "API_SHARE_MODE_EXCLUDE_DELETE"
                                                            ],
                                                            "description": "mode:\n * `API_SHARE_MODE_DELETE` - API_SHARE_MODE_DELETE,\n * `API_SHARE_MODE_EXCLUDE_DELETE` - API_SHARE_MODE_EXCLUDE_DELETE,\n * `API_SHARE_MODE_EXCLUDE_READ` - API_SHARE_MODE_EXCLUDE_READ,\n * `API_SHARE_MODE_EXCLUDE_WRITE` - API_SHARE_MODE_EXCLUDE_WRITE,\n * `API_SHARE_MODE_READ` - API_SHARE_MODE_READ,\n * `API_SHARE_MODE_WRITE` - API_SHARE_MODE_WRITE"
                                                        }
                                                    },
                                                    "owner_id": {
                                                        "type": "string"
                                                    },
                                                    "owner_address": {
                                                        "type": "string"
                                                    },
                                                    "node_address": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "files"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/files/{ref}/punch-hole": {
            "post": {
                "summary": "Create a hole in a region of a file. Destroys all data within the hole so that subsequent reads will return zeroes. Returns the post-operation attributes of the file.",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "The file ID (UInt64) or the absolute path to the file. This page handles the URL-encoding of the path.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "path": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "num_links": {
                                            "type": "number"
                                        },
                                        "type": {
                                            "type": "string",
                                            "enum": [
                                                "FS_FILE_TYPE_FILE",
                                                "FS_FILE_TYPE_DIRECTORY",
                                                "FS_FILE_TYPE_SYMLINK",
                                                "FS_FILE_TYPE_UNIX_PIPE",
                                                "FS_FILE_TYPE_UNIX_CHARACTER_DEVICE",
                                                "FS_FILE_TYPE_UNIX_BLOCK_DEVICE",
                                                "FS_FILE_TYPE_UNIX_SOCKET"
                                            ],
                                            "description": "Resource type:\n * `FS_FILE_TYPE_DIRECTORY` - FS_FILE_TYPE_DIRECTORY,\n * `FS_FILE_TYPE_FILE` - FS_FILE_TYPE_FILE,\n * `FS_FILE_TYPE_SYMLINK` - FS_FILE_TYPE_SYMLINK,\n * `FS_FILE_TYPE_UNIX_BLOCK_DEVICE` - FS_FILE_TYPE_UNIX_BLOCK_DEVICE,\n * `FS_FILE_TYPE_UNIX_CHARACTER_DEVICE` - FS_FILE_TYPE_UNIX_CHARACTER_DEVICE,\n * `FS_FILE_TYPE_UNIX_PIPE` - FS_FILE_TYPE_UNIX_PIPE,\n * `FS_FILE_TYPE_UNIX_SOCKET` - FS_FILE_TYPE_UNIX_SOCKET"
                                        },
                                        "major_minor_numbers": {
                                            "type": "object",
                                            "properties": {
                                                "major": {
                                                    "type": "number"
                                                },
                                                "minor": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "symlink_target_type": {
                                            "type": "string",
                                            "enum": [
                                                "FS_FILE_TYPE_UNKNOWN",
                                                "FS_FILE_TYPE_FILE",
                                                "FS_FILE_TYPE_DIRECTORY"
                                            ],
                                            "description": "The type of the target file if this file is a symlink:\n * `FS_FILE_TYPE_DIRECTORY` - API_SYMLINK_TARGET_DIRECTORY,\n * `FS_FILE_TYPE_FILE` - API_SYMLINK_TARGET_FILE,\n * `FS_FILE_TYPE_UNKNOWN` - API_SYMLINK_TARGET_UNKNOWN"
                                        },
                                        "file_number": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "mode": {
                                            "type": "string"
                                        },
                                        "owner": {
                                            "type": "string"
                                        },
                                        "owner_details": {
                                            "type": "object",
                                            "properties": {
                                                "id_type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "LOCAL_USER",
                                                        "LOCAL_GROUP",
                                                        "NFS_GID",
                                                        "NFS_UID",
                                                        "SMB_SID",
                                                        "INTERNAL",
                                                        "QUMULO_OPERATOR"
                                                    ],
                                                    "description": "id_type:\n * `INTERNAL` - INTERNAL,\n * `LOCAL_GROUP` - LOCAL_GROUP,\n * `LOCAL_USER` - LOCAL_USER,\n * `NFS_GID` - NFS_GID,\n * `NFS_UID` - NFS_UID,\n * `QUMULO_OPERATOR` - QUMULO_OPERATOR,\n * `SMB_SID` - SMB_SID"
                                                },
                                                "id_value": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "group": {
                                            "type": "string"
                                        },
                                        "group_details": {
                                            "type": "object",
                                            "properties": {
                                                "id_type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "LOCAL_USER",
                                                        "LOCAL_GROUP",
                                                        "NFS_GID",
                                                        "NFS_UID",
                                                        "SMB_SID",
                                                        "INTERNAL",
                                                        "QUMULO_OPERATOR"
                                                    ],
                                                    "description": "id_type:\n * `INTERNAL` - INTERNAL,\n * `LOCAL_GROUP` - LOCAL_GROUP,\n * `LOCAL_USER` - LOCAL_USER,\n * `NFS_GID` - NFS_GID,\n * `NFS_UID` - NFS_UID,\n * `QUMULO_OPERATOR` - QUMULO_OPERATOR,\n * `SMB_SID` - SMB_SID"
                                                },
                                                "id_value": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "blocks": {
                                            "type": "string"
                                        },
                                        "datablocks": {
                                            "type": "string"
                                        },
                                        "metablocks": {
                                            "type": "string"
                                        },
                                        "size": {
                                            "type": "string"
                                        },
                                        "access_time": {
                                            "type": "string"
                                        },
                                        "modification_time": {
                                            "type": "string"
                                        },
                                        "change_time": {
                                            "type": "string"
                                        },
                                        "creation_time": {
                                            "type": "string"
                                        },
                                        "child_count": {
                                            "type": "number"
                                        },
                                        "extended_attributes": {
                                            "type": "object",
                                            "properties": {
                                                "read_only": {
                                                    "type": "boolean"
                                                },
                                                "hidden": {
                                                    "type": "boolean"
                                                },
                                                "system": {
                                                    "type": "boolean"
                                                },
                                                "archive": {
                                                    "type": "boolean"
                                                },
                                                "temporary": {
                                                    "type": "boolean"
                                                },
                                                "compressed": {
                                                    "type": "boolean"
                                                },
                                                "not_content_indexed": {
                                                    "type": "boolean"
                                                },
                                                "sparse_file": {
                                                    "type": "boolean"
                                                }
                                            }
                                        },
                                        "directory_entry_hash_policy": {
                                            "type": "string",
                                            "enum": [
                                                "FS_DIRECTORY_HASH_VERSION_LOWER",
                                                "FS_DIRECTORY_HASH_VERSION_FOLDED"
                                            ],
                                            "description": "Hash policy for directory entries:\n * `FS_DIRECTORY_HASH_VERSION_FOLDED` - FS_DIRECTORY_HASH_VERSION_FOLDED,\n * `FS_DIRECTORY_HASH_VERSION_LOWER` - FS_DIRECTORY_HASH_VERSION_LOWER"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "files"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "offset": {
                                        "type": "string"
                                    },
                                    "size": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/files/{ref}/streams/": {
            "get": {
                "summary": "List all named streams on provided object",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "The file ID (UInt64) or the absolute path to the file. This page handles the URL-encoding of the path.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "snapshot",
                        "in": "query",
                        "description": "The snapshot ID that specifies the version of the file to read. If not specified, read the head version.",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string"
                                            },
                                            "id": {
                                                "type": "string"
                                            },
                                            "size": {
                                                "type": "string"
                                            },
                                            "datablocks": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "files"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            },
            "post": {
                "summary": "Create a named stream on provided object",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "The file ID (UInt64) or the absolute path to the file. This page handles the URL-encoding of the path.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "size": {
                                            "type": "string"
                                        },
                                        "datablocks": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "files"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "stream_name": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/files/{ref}/streams/{stream_id}/punch-hole": {
            "post": {
                "summary": "Create a hole in a region of a stream. Destroys all data within the hole so that subsequent reads will return zeroes. Returns the post-operation attributes of the stream.",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "The file ID (UInt64) or the absolute path to the file. This page handles the URL-encoding of the path.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "stream_id",
                        "in": "path",
                        "description": "Stream ID (uint64) to be modified",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "size": {
                                            "type": "string"
                                        },
                                        "datablocks": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "files"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "offset": {
                                        "type": "string"
                                    },
                                    "size": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/files/{ref}/streams/{stream_id}/copy-chunk": {
            "post": {
                "summary": "Copies the contents of the source file specified in the body of the request to the destination stream. The stream must already exist.",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "The file ID (UInt64) or the absolute path to the file. This page handles the URL-encoding of the path.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "stream_id",
                        "in": "path",
                        "description": "Stream ID (uint64) to be modified",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "source_id": {
                                            "type": "string"
                                        },
                                        "source_path": {
                                            "type": "string"
                                        },
                                        "source_stream_id": {
                                            "type": "string"
                                        },
                                        "source_snapshot": {
                                            "type": "number"
                                        },
                                        "source_offset": {
                                            "type": "string"
                                        },
                                        "target_offset": {
                                            "type": "string"
                                        },
                                        "length": {
                                            "type": "string"
                                        },
                                        "source_etag": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "files"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "source_id": {
                                        "type": "string"
                                    },
                                    "source_path": {
                                        "type": "string"
                                    },
                                    "source_stream_id": {
                                        "type": "string"
                                    },
                                    "source_snapshot": {
                                        "type": "number"
                                    },
                                    "source_offset": {
                                        "type": "string"
                                    },
                                    "target_offset": {
                                        "type": "string"
                                    },
                                    "length": {
                                        "type": "string"
                                    },
                                    "source_etag": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/files/{ref}/streams/{stream_id}/data": {
            "patch": {
                "summary": "Set the contents of the stream, at the given offset, to the body of the request. The target stream must already exist, and the Content-Type of the request must be application/octet-stream.",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "The file ID (UInt64) or the absolute path to the file. This page handles the URL-encoding of the path.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "stream_id",
                        "in": "path",
                        "description": "Stream ID (uint64) to be modified",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Write the provided data at the given 64-bit integer offset. If the offset is greater than the size of the stream, the stream will be zero-extended up to offset before the data is written. (default: 0)",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "size": {
                                            "type": "string"
                                        },
                                        "datablocks": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "files"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/octet-stream": {
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Replace the contents of the stream with the body of the request. The target stream must already exist, and the content-type of the request must be Application/Octet-stream.",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "The file ID (UInt64) or the absolute path to the file. This page handles the URL-encoding of the path.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "stream_id",
                        "in": "path",
                        "description": "Stream ID (uint64) to be modified",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "size": {
                                            "type": "string"
                                        },
                                        "datablocks": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "files"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/octet-stream": {
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Return the contents of the file as an HTTP octet stream. The etag returned by this method represents the whole state of this inode. In another word, if you are reading just a portion of the data, etag could be invalid because of other changes happened to the stream, even the specific portion of data you read is still intact.",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "The file ID (UInt64) or the absolute path to the file. This page handles the URL-encoding of the path.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "stream_id",
                        "in": "path",
                        "description": "Stream ID (uint64) to be modified",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "snapshot",
                        "in": "query",
                        "description": "Snapshot ID specifying the version of the object to read. If not specified, read the head version.",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Read data from the requested stream starting at the given 64-bit integer offset. If the offset is larger than the size of the stream, the read will succeed and no data will be returned. If not specified the offset will 0.",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "Read up to length bytes from the requested stream. If the read extends beyond the end of the stream, the read will return as many bytes as possible, up to length. Will read the whole file if not specified.",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "files"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/files/{ref}/streams/{stream_id}": {
            "delete": {
                "summary": "Delete a named stream on provided object",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "The file ID (UInt64) or the absolute path to the file. This page handles the URL-encoding of the path.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "stream_id",
                        "in": "path",
                        "description": "Stream ID (uint64) to be deleted",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success"
                    }
                },
                "tags": [
                    "files"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/files/{ref}/streams/{stream_id}/rename": {
            "post": {
                "summary": "Rename a stream on provided object",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "The file ID (UInt64) or the absolute path to the file. This page handles the URL-encoding of the path.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "stream_id",
                        "in": "path",
                        "description": "Stream ID (uint64) to be renamed",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "size": {
                                            "type": "string"
                                        },
                                        "datablocks": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "files"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "stream_name": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/files/{ref}/streams/{stream_id}/attributes": {
            "get": {
                "summary": "Get Stream attributes.",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "The file ID (UInt64) or the absolute path to the file. This page handles the URL-encoding of the path.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "stream_id",
                        "in": "path",
                        "description": "Stream ID (uint64) to get",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "snapshot",
                        "in": "query",
                        "description": "The snapshot ID that specifies the version of the file to read. If not specified, read the head version.",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "size": {
                                            "type": "string"
                                        },
                                        "datablocks": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "files"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            },
            "patch": {
                "summary": "Update a subset of stream attributes",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "The file ID (UInt64) or the absolute path to the file. This page handles the URL-encoding of the path.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "stream_id",
                        "in": "path",
                        "description": "Stream ID (uint64) to get",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "size": {
                                            "type": "string"
                                        },
                                        "datablocks": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "files"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "path": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "num_links": {
                                        "type": "number"
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "FS_FILE_TYPE_FILE",
                                            "FS_FILE_TYPE_DIRECTORY",
                                            "FS_FILE_TYPE_SYMLINK",
                                            "FS_FILE_TYPE_UNIX_PIPE",
                                            "FS_FILE_TYPE_UNIX_CHARACTER_DEVICE",
                                            "FS_FILE_TYPE_UNIX_BLOCK_DEVICE",
                                            "FS_FILE_TYPE_UNIX_SOCKET"
                                        ],
                                        "description": "Resource type:\n * `FS_FILE_TYPE_DIRECTORY` - FS_FILE_TYPE_DIRECTORY,\n * `FS_FILE_TYPE_FILE` - FS_FILE_TYPE_FILE,\n * `FS_FILE_TYPE_SYMLINK` - FS_FILE_TYPE_SYMLINK,\n * `FS_FILE_TYPE_UNIX_BLOCK_DEVICE` - FS_FILE_TYPE_UNIX_BLOCK_DEVICE,\n * `FS_FILE_TYPE_UNIX_CHARACTER_DEVICE` - FS_FILE_TYPE_UNIX_CHARACTER_DEVICE,\n * `FS_FILE_TYPE_UNIX_PIPE` - FS_FILE_TYPE_UNIX_PIPE,\n * `FS_FILE_TYPE_UNIX_SOCKET` - FS_FILE_TYPE_UNIX_SOCKET"
                                    },
                                    "major_minor_numbers": {
                                        "type": "object",
                                        "properties": {
                                            "major": {
                                                "type": "number"
                                            },
                                            "minor": {
                                                "type": "number"
                                            }
                                        }
                                    },
                                    "symlink_target_type": {
                                        "type": "string",
                                        "enum": [
                                            "FS_FILE_TYPE_UNKNOWN",
                                            "FS_FILE_TYPE_FILE",
                                            "FS_FILE_TYPE_DIRECTORY"
                                        ],
                                        "description": "The type of the target file if this file is a symlink:\n * `FS_FILE_TYPE_DIRECTORY` - API_SYMLINK_TARGET_DIRECTORY,\n * `FS_FILE_TYPE_FILE` - API_SYMLINK_TARGET_FILE,\n * `FS_FILE_TYPE_UNKNOWN` - API_SYMLINK_TARGET_UNKNOWN"
                                    },
                                    "file_number": {
                                        "type": "string"
                                    },
                                    "id": {
                                        "type": "string"
                                    },
                                    "mode": {
                                        "type": "string"
                                    },
                                    "owner": {
                                        "type": "string"
                                    },
                                    "owner_details": {
                                        "type": "object",
                                        "properties": {
                                            "id_type": {
                                                "type": "string",
                                                "enum": [
                                                    "LOCAL_USER",
                                                    "LOCAL_GROUP",
                                                    "NFS_GID",
                                                    "NFS_UID",
                                                    "SMB_SID",
                                                    "INTERNAL",
                                                    "QUMULO_OPERATOR"
                                                ],
                                                "description": "id_type:\n * `INTERNAL` - INTERNAL,\n * `LOCAL_GROUP` - LOCAL_GROUP,\n * `LOCAL_USER` - LOCAL_USER,\n * `NFS_GID` - NFS_GID,\n * `NFS_UID` - NFS_UID,\n * `QUMULO_OPERATOR` - QUMULO_OPERATOR,\n * `SMB_SID` - SMB_SID"
                                            },
                                            "id_value": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "group": {
                                        "type": "string"
                                    },
                                    "group_details": {
                                        "type": "object",
                                        "properties": {
                                            "id_type": {
                                                "type": "string",
                                                "enum": [
                                                    "LOCAL_USER",
                                                    "LOCAL_GROUP",
                                                    "NFS_GID",
                                                    "NFS_UID",
                                                    "SMB_SID",
                                                    "INTERNAL",
                                                    "QUMULO_OPERATOR"
                                                ],
                                                "description": "id_type:\n * `INTERNAL` - INTERNAL,\n * `LOCAL_GROUP` - LOCAL_GROUP,\n * `LOCAL_USER` - LOCAL_USER,\n * `NFS_GID` - NFS_GID,\n * `NFS_UID` - NFS_UID,\n * `QUMULO_OPERATOR` - QUMULO_OPERATOR,\n * `SMB_SID` - SMB_SID"
                                            },
                                            "id_value": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "blocks": {
                                        "type": "string"
                                    },
                                    "datablocks": {
                                        "type": "string"
                                    },
                                    "metablocks": {
                                        "type": "string"
                                    },
                                    "size": {
                                        "type": "string"
                                    },
                                    "access_time": {
                                        "type": "string"
                                    },
                                    "modification_time": {
                                        "type": "string"
                                    },
                                    "change_time": {
                                        "type": "string"
                                    },
                                    "creation_time": {
                                        "type": "string"
                                    },
                                    "child_count": {
                                        "type": "number"
                                    },
                                    "extended_attributes": {
                                        "type": "object",
                                        "properties": {
                                            "read_only": {
                                                "type": "boolean"
                                            },
                                            "hidden": {
                                                "type": "boolean"
                                            },
                                            "system": {
                                                "type": "boolean"
                                            },
                                            "archive": {
                                                "type": "boolean"
                                            },
                                            "temporary": {
                                                "type": "boolean"
                                            },
                                            "compressed": {
                                                "type": "boolean"
                                            },
                                            "not_content_indexed": {
                                                "type": "boolean"
                                            },
                                            "sparse_file": {
                                                "type": "boolean"
                                            }
                                        }
                                    },
                                    "directory_entry_hash_policy": {
                                        "type": "string",
                                        "enum": [
                                            "FS_DIRECTORY_HASH_VERSION_LOWER",
                                            "FS_DIRECTORY_HASH_VERSION_FOLDED"
                                        ],
                                        "description": "Hash policy for directory entries:\n * `FS_DIRECTORY_HASH_VERSION_FOLDED` - FS_DIRECTORY_HASH_VERSION_FOLDED,\n * `FS_DIRECTORY_HASH_VERSION_LOWER` - FS_DIRECTORY_HASH_VERSION_LOWER"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/files/{ref}/info/acl": {
            "put": {
                "summary": "Update file access control list (ACL).",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "The file ID (UInt64) or the absolute path to the file. This page handles the URL-encoding of the path.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "control": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "enum": [
                                                    "PRESENT",
                                                    "DEFAULTED",
                                                    "TRUSTED",
                                                    "AUTO_INHERIT",
                                                    "PROTECTED",
                                                    "ACL_CONTROLS_ALL"
                                                ],
                                                "description": "control:\n * `ACL_CONTROLS_ALL` - All ACL controls,\n * `AUTO_INHERIT` - Set whether the ACL was created through inheritance,\n * `DEFAULTED` - Sets whether the ACL was established by default means,\n * `PRESENT` - Set when ACL is present on the object,\n * `PROTECTED` - Protects ACL from inherit operations,\n * `TRUSTED` - Set when ACL is provided by a trusted source"
                                            }
                                        },
                                        "posix_special_permissions": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "enum": [
                                                    "STICKY_BIT",
                                                    "SET_GID",
                                                    "SET_UID",
                                                    "ACL_POSIX_SPECIAL_PERMISSIONS_ALL"
                                                ],
                                                "description": "posix_special_permissions:\n * `ACL_POSIX_SPECIAL_PERMISSIONS_ALL` - ACL_POSIX_SPECIAL_PERMISSIONS_ALL,\n * `SET_GID` - SET_GID,\n * `SET_UID` - SET_UID,\n * `STICKY_BIT` - STICKY_BIT"
                                            }
                                        },
                                        "aces": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "enum": [
                                                            "ALLOWED",
                                                            "DENIED"
                                                        ],
                                                        "description": "Type of this ACL entry:\n * `ALLOWED` - An ACL entry that grants rights,\n * `DENIED` - An ACL entry that denies rights"
                                                    },
                                                    "flags": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "enum": [
                                                                "OBJECT_INHERIT",
                                                                "CONTAINER_INHERIT",
                                                                "NO_PROPAGATE_INHERIT",
                                                                "INHERIT_ONLY",
                                                                "INHERITED",
                                                                "ACE_FLAGS_ALL"
                                                            ],
                                                            "description": "ACE flags for this ACL entry:\n * `ACE_FLAGS_ALL` - All ACE flags,\n * `CONTAINER_INHERIT` - Children that are containers inherit as effective ACE,\n * `INHERITED` - Indicates the ACE was inherited,\n * `INHERIT_ONLY` - Indicates an inherit-only ACE that doesn't control access to the attached object,\n * `NO_PROPAGATE_INHERIT` - Prevent subsequent children from inheriting ACE,\n * `OBJECT_INHERIT` - Non-container children inherit as effective ACE. Container objects inherit as inherit-only ACE"
                                                        }
                                                    },
                                                    "trustee": {
                                                        "type": "object",
                                                        "properties": {
                                                            "domain": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "LOCAL",
                                                                    "API_NULL_DOMAIN",
                                                                    "WORLD",
                                                                    "POSIX_USER",
                                                                    "POSIX_GROUP",
                                                                    "ACTIVE_DIRECTORY",
                                                                    "API_INVALID_DOMAIN",
                                                                    "API_RESERVED_DOMAIN",
                                                                    "API_INTERNAL_DOMAIN",
                                                                    "API_OPERATOR_DOMAIN",
                                                                    "API_CREATOR_DOMAIN"
                                                                ],
                                                                "description": "domain:\n * `ACTIVE_DIRECTORY` - ACTIVE_DIRECTORY,\n * `API_CREATOR_DOMAIN` - API_CREATOR_DOMAIN,\n * `API_INTERNAL_DOMAIN` - API_INTERNAL_DOMAIN,\n * `API_INVALID_DOMAIN` - API_INVALID_DOMAIN,\n * `API_NULL_DOMAIN` - API_NULL_DOMAIN,\n * `API_OPERATOR_DOMAIN` - API_OPERATOR_DOMAIN,\n * `API_RESERVED_DOMAIN` - API_RESERVED_DOMAIN,\n * `LOCAL` - LOCAL,\n * `POSIX_GROUP` - POSIX_GROUP,\n * `POSIX_USER` - POSIX_USER,\n * `WORLD` - WORLD"
                                                            },
                                                            "auth_id": {
                                                                "type": "string"
                                                            },
                                                            "uid": {
                                                                "type": "number"
                                                            },
                                                            "gid": {
                                                                "type": "number"
                                                            },
                                                            "sid": {
                                                                "type": "string"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "rights": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "enum": [
                                                                "READ",
                                                                "READ_EA",
                                                                "READ_ATTR",
                                                                "READ_ACL",
                                                                "WRITE_EA",
                                                                "WRITE_ATTR",
                                                                "WRITE_ACL",
                                                                "CHANGE_OWNER",
                                                                "WRITE_GROUP",
                                                                "DELETE",
                                                                "EXECUTE",
                                                                "MODIFY",
                                                                "EXTEND",
                                                                "ADD_FILE",
                                                                "ADD_SUBDIR",
                                                                "DELETE_CHILD",
                                                                "SYNCHRONIZE",
                                                                "ACCESS_RIGHTS_ALL"
                                                            ],
                                                            "description": "Rights granted or denied for this ACL entry:\n * `ACCESS_RIGHTS_ALL` - All access rights,\n * `ADD_FILE` - File creation access,\n * `ADD_SUBDIR` - Directory creation access,\n * `CHANGE_OWNER` - Owner write access,\n * `DELETE` - Delete access,\n * `DELETE_CHILD` - Delete from directory access,\n * `EXECUTE` - Execute access,\n * `EXTEND` - File extension access,\n * `MODIFY` - File modification access,\n * `READ` - File read access,\n * `READ_ACL` - ACL read access,\n * `READ_ATTR` - Attribute read access,\n * `READ_EA` - Extended attribute read access,\n * `SYNCHRONIZE` - File synchronize access,\n * `WRITE_ACL` - ACL write access,\n * `WRITE_ATTR` - Attribute write access,\n * `WRITE_EA` - Extended attribute write access,\n * `WRITE_GROUP` - Group write access"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "files"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "control": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "enum": [
                                                "PRESENT",
                                                "DEFAULTED",
                                                "TRUSTED",
                                                "AUTO_INHERIT",
                                                "PROTECTED",
                                                "ACL_CONTROLS_ALL"
                                            ],
                                            "description": "control:\n * `ACL_CONTROLS_ALL` - All ACL controls,\n * `AUTO_INHERIT` - Set whether the ACL was created through inheritance,\n * `DEFAULTED` - Sets whether the ACL was established by default means,\n * `PRESENT` - Set when ACL is present on the object,\n * `PROTECTED` - Protects ACL from inherit operations,\n * `TRUSTED` - Set when ACL is provided by a trusted source"
                                        }
                                    },
                                    "posix_special_permissions": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "enum": [
                                                "STICKY_BIT",
                                                "SET_GID",
                                                "SET_UID",
                                                "ACL_POSIX_SPECIAL_PERMISSIONS_ALL"
                                            ],
                                            "description": "posix_special_permissions:\n * `ACL_POSIX_SPECIAL_PERMISSIONS_ALL` - ACL_POSIX_SPECIAL_PERMISSIONS_ALL,\n * `SET_GID` - SET_GID,\n * `SET_UID` - SET_UID,\n * `STICKY_BIT` - STICKY_BIT"
                                        }
                                    },
                                    "aces": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "ALLOWED",
                                                        "DENIED"
                                                    ],
                                                    "description": "Type of this ACL entry:\n * `ALLOWED` - An ACL entry that grants rights,\n * `DENIED` - An ACL entry that denies rights"
                                                },
                                                "flags": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "enum": [
                                                            "OBJECT_INHERIT",
                                                            "CONTAINER_INHERIT",
                                                            "NO_PROPAGATE_INHERIT",
                                                            "INHERIT_ONLY",
                                                            "INHERITED",
                                                            "ACE_FLAGS_ALL"
                                                        ],
                                                        "description": "ACE flags for this ACL entry:\n * `ACE_FLAGS_ALL` - All ACE flags,\n * `CONTAINER_INHERIT` - Children that are containers inherit as effective ACE,\n * `INHERITED` - Indicates the ACE was inherited,\n * `INHERIT_ONLY` - Indicates an inherit-only ACE that doesn't control access to the attached object,\n * `NO_PROPAGATE_INHERIT` - Prevent subsequent children from inheriting ACE,\n * `OBJECT_INHERIT` - Non-container children inherit as effective ACE. Container objects inherit as inherit-only ACE"
                                                    }
                                                },
                                                "trustee": {
                                                    "type": "object",
                                                    "properties": {
                                                        "domain": {
                                                            "type": "string",
                                                            "enum": [
                                                                "LOCAL",
                                                                "API_NULL_DOMAIN",
                                                                "WORLD",
                                                                "POSIX_USER",
                                                                "POSIX_GROUP",
                                                                "ACTIVE_DIRECTORY",
                                                                "API_INVALID_DOMAIN",
                                                                "API_RESERVED_DOMAIN",
                                                                "API_INTERNAL_DOMAIN",
                                                                "API_OPERATOR_DOMAIN",
                                                                "API_CREATOR_DOMAIN"
                                                            ],
                                                            "description": "domain:\n * `ACTIVE_DIRECTORY` - ACTIVE_DIRECTORY,\n * `API_CREATOR_DOMAIN` - API_CREATOR_DOMAIN,\n * `API_INTERNAL_DOMAIN` - API_INTERNAL_DOMAIN,\n * `API_INVALID_DOMAIN` - API_INVALID_DOMAIN,\n * `API_NULL_DOMAIN` - API_NULL_DOMAIN,\n * `API_OPERATOR_DOMAIN` - API_OPERATOR_DOMAIN,\n * `API_RESERVED_DOMAIN` - API_RESERVED_DOMAIN,\n * `LOCAL` - LOCAL,\n * `POSIX_GROUP` - POSIX_GROUP,\n * `POSIX_USER` - POSIX_USER,\n * `WORLD` - WORLD"
                                                        },
                                                        "auth_id": {
                                                            "type": "string"
                                                        },
                                                        "uid": {
                                                            "type": "number"
                                                        },
                                                        "gid": {
                                                            "type": "number"
                                                        },
                                                        "sid": {
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        }
                                                    }
                                                },
                                                "rights": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "enum": [
                                                            "READ",
                                                            "READ_EA",
                                                            "READ_ATTR",
                                                            "READ_ACL",
                                                            "WRITE_EA",
                                                            "WRITE_ATTR",
                                                            "WRITE_ACL",
                                                            "CHANGE_OWNER",
                                                            "WRITE_GROUP",
                                                            "DELETE",
                                                            "EXECUTE",
                                                            "MODIFY",
                                                            "EXTEND",
                                                            "ADD_FILE",
                                                            "ADD_SUBDIR",
                                                            "DELETE_CHILD",
                                                            "SYNCHRONIZE",
                                                            "ACCESS_RIGHTS_ALL"
                                                        ],
                                                        "description": "Rights granted or denied for this ACL entry:\n * `ACCESS_RIGHTS_ALL` - All access rights,\n * `ADD_FILE` - File creation access,\n * `ADD_SUBDIR` - Directory creation access,\n * `CHANGE_OWNER` - Owner write access,\n * `DELETE` - Delete access,\n * `DELETE_CHILD` - Delete from directory access,\n * `EXECUTE` - Execute access,\n * `EXTEND` - File extension access,\n * `MODIFY` - File modification access,\n * `READ` - File read access,\n * `READ_ACL` - ACL read access,\n * `READ_ATTR` - Attribute read access,\n * `READ_EA` - Extended attribute read access,\n * `SYNCHRONIZE` - File synchronize access,\n * `WRITE_ACL` - ACL write access,\n * `WRITE_ATTR` - Attribute write access,\n * `WRITE_EA` - Extended attribute write access,\n * `WRITE_GROUP` - Group write access"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Get file access control list (ACL).",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "The file ID (UInt64) or the absolute path to the file. This page handles the URL-encoding of the path.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "snapshot",
                        "in": "query",
                        "description": "Snapshot ID specifying the version of the file to read. When not specified, the head version is read.",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "control": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "enum": [
                                                    "PRESENT",
                                                    "DEFAULTED",
                                                    "TRUSTED",
                                                    "AUTO_INHERIT",
                                                    "PROTECTED",
                                                    "ACL_CONTROLS_ALL"
                                                ],
                                                "description": "control:\n * `ACL_CONTROLS_ALL` - All ACL controls,\n * `AUTO_INHERIT` - Set whether the ACL was created through inheritance,\n * `DEFAULTED` - Sets whether the ACL was established by default means,\n * `PRESENT` - Set when ACL is present on the object,\n * `PROTECTED` - Protects ACL from inherit operations,\n * `TRUSTED` - Set when ACL is provided by a trusted source"
                                            }
                                        },
                                        "posix_special_permissions": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "enum": [
                                                    "STICKY_BIT",
                                                    "SET_GID",
                                                    "SET_UID",
                                                    "ACL_POSIX_SPECIAL_PERMISSIONS_ALL"
                                                ],
                                                "description": "posix_special_permissions:\n * `ACL_POSIX_SPECIAL_PERMISSIONS_ALL` - ACL_POSIX_SPECIAL_PERMISSIONS_ALL,\n * `SET_GID` - SET_GID,\n * `SET_UID` - SET_UID,\n * `STICKY_BIT` - STICKY_BIT"
                                            }
                                        },
                                        "aces": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "enum": [
                                                            "ALLOWED",
                                                            "DENIED"
                                                        ],
                                                        "description": "Type of this ACL entry:\n * `ALLOWED` - An ACL entry that grants rights,\n * `DENIED` - An ACL entry that denies rights"
                                                    },
                                                    "flags": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "enum": [
                                                                "OBJECT_INHERIT",
                                                                "CONTAINER_INHERIT",
                                                                "NO_PROPAGATE_INHERIT",
                                                                "INHERIT_ONLY",
                                                                "INHERITED",
                                                                "ACE_FLAGS_ALL"
                                                            ],
                                                            "description": "ACE flags for this ACL entry:\n * `ACE_FLAGS_ALL` - All ACE flags,\n * `CONTAINER_INHERIT` - Children that are containers inherit as effective ACE,\n * `INHERITED` - Indicates the ACE was inherited,\n * `INHERIT_ONLY` - Indicates an inherit-only ACE that doesn't control access to the attached object,\n * `NO_PROPAGATE_INHERIT` - Prevent subsequent children from inheriting ACE,\n * `OBJECT_INHERIT` - Non-container children inherit as effective ACE. Container objects inherit as inherit-only ACE"
                                                        }
                                                    },
                                                    "trustee": {
                                                        "type": "object",
                                                        "properties": {
                                                            "domain": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "LOCAL",
                                                                    "API_NULL_DOMAIN",
                                                                    "WORLD",
                                                                    "POSIX_USER",
                                                                    "POSIX_GROUP",
                                                                    "ACTIVE_DIRECTORY",
                                                                    "API_INVALID_DOMAIN",
                                                                    "API_RESERVED_DOMAIN",
                                                                    "API_INTERNAL_DOMAIN",
                                                                    "API_OPERATOR_DOMAIN",
                                                                    "API_CREATOR_DOMAIN"
                                                                ],
                                                                "description": "domain:\n * `ACTIVE_DIRECTORY` - ACTIVE_DIRECTORY,\n * `API_CREATOR_DOMAIN` - API_CREATOR_DOMAIN,\n * `API_INTERNAL_DOMAIN` - API_INTERNAL_DOMAIN,\n * `API_INVALID_DOMAIN` - API_INVALID_DOMAIN,\n * `API_NULL_DOMAIN` - API_NULL_DOMAIN,\n * `API_OPERATOR_DOMAIN` - API_OPERATOR_DOMAIN,\n * `API_RESERVED_DOMAIN` - API_RESERVED_DOMAIN,\n * `LOCAL` - LOCAL,\n * `POSIX_GROUP` - POSIX_GROUP,\n * `POSIX_USER` - POSIX_USER,\n * `WORLD` - WORLD"
                                                            },
                                                            "auth_id": {
                                                                "type": "string"
                                                            },
                                                            "uid": {
                                                                "type": "number"
                                                            },
                                                            "gid": {
                                                                "type": "number"
                                                            },
                                                            "sid": {
                                                                "type": "string"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "rights": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "enum": [
                                                                "READ",
                                                                "READ_EA",
                                                                "READ_ATTR",
                                                                "READ_ACL",
                                                                "WRITE_EA",
                                                                "WRITE_ATTR",
                                                                "WRITE_ACL",
                                                                "CHANGE_OWNER",
                                                                "WRITE_GROUP",
                                                                "DELETE",
                                                                "EXECUTE",
                                                                "MODIFY",
                                                                "EXTEND",
                                                                "ADD_FILE",
                                                                "ADD_SUBDIR",
                                                                "DELETE_CHILD",
                                                                "SYNCHRONIZE",
                                                                "ACCESS_RIGHTS_ALL"
                                                            ],
                                                            "description": "Rights granted or denied for this ACL entry:\n * `ACCESS_RIGHTS_ALL` - All access rights,\n * `ADD_FILE` - File creation access,\n * `ADD_SUBDIR` - Directory creation access,\n * `CHANGE_OWNER` - Owner write access,\n * `DELETE` - Delete access,\n * `DELETE_CHILD` - Delete from directory access,\n * `EXECUTE` - Execute access,\n * `EXTEND` - File extension access,\n * `MODIFY` - File modification access,\n * `READ` - File read access,\n * `READ_ACL` - ACL read access,\n * `READ_ATTR` - Attribute read access,\n * `READ_EA` - Extended attribute read access,\n * `SYNCHRONIZE` - File synchronize access,\n * `WRITE_ACL` - ACL write access,\n * `WRITE_ATTR` - Attribute write access,\n * `WRITE_EA` - Extended attribute write access,\n * `WRITE_GROUP` - Group write access"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "files"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/ldap/status": {
            "get": {
                "summary": "Get LDAP connection status if applicable.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "node_id": {
                                                "type": "number"
                                            },
                                            "servers": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "bind_uri": {
                                                            "type": "string"
                                                        },
                                                        "kdc_address": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            },
                                            "bind_domain": {
                                                "type": "string"
                                            },
                                            "bind_account": {
                                                "type": "string"
                                            },
                                            "base_dn_vec": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            },
                                            "health": {
                                                "type": "string",
                                                "enum": [
                                                    "NO_RECENT_ERROR",
                                                    "INTERMITTENT_ERROR",
                                                    "SUSTAINED_ERROR"
                                                ],
                                                "description": "health:\n * `INTERMITTENT_ERROR` - LDAP_HEALTH_INTERMITTENT_ERROR,\n * `NO_RECENT_ERROR` - LDAP_HEALTH_NO_RECENT_ERROR,\n * `SUSTAINED_ERROR` - LDAP_HEALTH_SUSTAINED_ERROR"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "ldap"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/ldap/uid-number/{uid_number}/login-name": {
            "get": {
                "summary": "Return the login names for the given UID number as found by issuing an LDAP query against the LDAP server configured",
                "parameters": [
                    {
                        "name": "uid_number",
                        "in": "path",
                        "description": "The UID number to use to lookup its login name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "uid_number": {
                                            "type": "number"
                                        },
                                        "login_names": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "ldap"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/ldap/login-name/{login_name}/gid-numbers": {
            "get": {
                "summary": "Query the LDAP server for the gid numbers for all the groups of which the given login name is a member. This returns a vector of results in the case that the given login name maps to multiple uid numbers.",
                "parameters": [
                    {
                        "name": "login_name",
                        "in": "path",
                        "description": "The login name to use to lookup its GID numbers",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "login_name": {
                                            "type": "string"
                                        },
                                        "uid_numbers_to_gid_numbers": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "uid_number": {
                                                        "type": "number"
                                                    },
                                                    "gid_numbers": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "number"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "ldap"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/ldap/login-name/{login_name}/uid-numbers": {
            "get": {
                "summary": "Return the UID Numbers of the given login name. This is found by issuing an LDAP query against the LDAP server configured",
                "parameters": [
                    {
                        "name": "login_name",
                        "in": "path",
                        "description": "The login name to use to lookup its UID numbers",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "login_name": {
                                            "type": "string"
                                        },
                                        "uid_numbers": {
                                            "type": "array",
                                            "items": {
                                                "type": "number"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "ldap"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v2/ldap/settings": {
            "get": {
                "summary": "Get settings for LDAP interaction",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "use_ldap": {
                                            "type": "boolean"
                                        },
                                        "bind_uri": {
                                            "type": "string"
                                        },
                                        "user": {
                                            "type": "string"
                                        },
                                        "password": {
                                            "type": "string",
                                            "format": "password"
                                        },
                                        "base_distinguished_names": {
                                            "type": "string"
                                        },
                                        "ldap_schema": {
                                            "type": "string",
                                            "enum": [
                                                "RFC2307",
                                                "CUSTOM"
                                            ],
                                            "description": "LDAP server schema to use. Default is RFC2307:\n * `CUSTOM` - CUSTOM,\n * `RFC2307` - RFC2307"
                                        },
                                        "ldap_schema_description": {
                                            "type": "object",
                                            "properties": {
                                                "group_member_attribute": {
                                                    "type": "string"
                                                },
                                                "user_group_identifier_attribute": {
                                                    "type": "string"
                                                },
                                                "login_name_attribute": {
                                                    "type": "string"
                                                },
                                                "group_name_attribute": {
                                                    "type": "string"
                                                },
                                                "user_object_class": {
                                                    "type": "string"
                                                },
                                                "group_object_class": {
                                                    "type": "string"
                                                },
                                                "uid_number_attribute": {
                                                    "type": "string"
                                                },
                                                "gid_number_attribute": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "encrypt_connection": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "ldap"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            },
            "put": {
                "summary": "Set settings for LDAP interaction",
                "parameters": [
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "use_ldap": {
                                            "type": "boolean"
                                        },
                                        "bind_uri": {
                                            "type": "string"
                                        },
                                        "user": {
                                            "type": "string"
                                        },
                                        "password": {
                                            "type": "string",
                                            "format": "password"
                                        },
                                        "base_distinguished_names": {
                                            "type": "string"
                                        },
                                        "ldap_schema": {
                                            "type": "string",
                                            "enum": [
                                                "RFC2307",
                                                "CUSTOM"
                                            ],
                                            "description": "LDAP server schema to use. Default is RFC2307:\n * `CUSTOM` - CUSTOM,\n * `RFC2307` - RFC2307"
                                        },
                                        "ldap_schema_description": {
                                            "type": "object",
                                            "properties": {
                                                "group_member_attribute": {
                                                    "type": "string"
                                                },
                                                "user_group_identifier_attribute": {
                                                    "type": "string"
                                                },
                                                "login_name_attribute": {
                                                    "type": "string"
                                                },
                                                "group_name_attribute": {
                                                    "type": "string"
                                                },
                                                "user_object_class": {
                                                    "type": "string"
                                                },
                                                "group_object_class": {
                                                    "type": "string"
                                                },
                                                "uid_number_attribute": {
                                                    "type": "string"
                                                },
                                                "gid_number_attribute": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "encrypt_connection": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "ldap"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "use_ldap": {
                                        "type": "boolean"
                                    },
                                    "bind_uri": {
                                        "type": "string"
                                    },
                                    "user": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "base_distinguished_names": {
                                        "type": "string"
                                    },
                                    "ldap_schema": {
                                        "type": "string",
                                        "enum": [
                                            "RFC2307",
                                            "CUSTOM"
                                        ],
                                        "description": "LDAP server schema to use. Default is RFC2307:\n * `CUSTOM` - CUSTOM,\n * `RFC2307` - RFC2307"
                                    },
                                    "ldap_schema_description": {
                                        "type": "object",
                                        "properties": {
                                            "group_member_attribute": {
                                                "type": "string"
                                            },
                                            "user_group_identifier_attribute": {
                                                "type": "string"
                                            },
                                            "login_name_attribute": {
                                                "type": "string"
                                            },
                                            "group_name_attribute": {
                                                "type": "string"
                                            },
                                            "user_object_class": {
                                                "type": "string"
                                            },
                                            "group_object_class": {
                                                "type": "string"
                                            },
                                            "uid_number_attribute": {
                                                "type": "string"
                                            },
                                            "gid_number_attribute": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "encrypt_connection": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Partially Set LDAP interaction settings",
                "parameters": [
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "use_ldap": {
                                            "type": "boolean"
                                        },
                                        "bind_uri": {
                                            "type": "string"
                                        },
                                        "user": {
                                            "type": "string"
                                        },
                                        "password": {
                                            "type": "string",
                                            "format": "password"
                                        },
                                        "base_distinguished_names": {
                                            "type": "string"
                                        },
                                        "ldap_schema": {
                                            "type": "string",
                                            "enum": [
                                                "RFC2307",
                                                "CUSTOM"
                                            ],
                                            "description": "LDAP server schema to use. Default is RFC2307:\n * `CUSTOM` - CUSTOM,\n * `RFC2307` - RFC2307"
                                        },
                                        "ldap_schema_description": {
                                            "type": "object",
                                            "properties": {
                                                "group_member_attribute": {
                                                    "type": "string"
                                                },
                                                "user_group_identifier_attribute": {
                                                    "type": "string"
                                                },
                                                "login_name_attribute": {
                                                    "type": "string"
                                                },
                                                "group_name_attribute": {
                                                    "type": "string"
                                                },
                                                "user_object_class": {
                                                    "type": "string"
                                                },
                                                "group_object_class": {
                                                    "type": "string"
                                                },
                                                "uid_number_attribute": {
                                                    "type": "string"
                                                },
                                                "gid_number_attribute": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "encrypt_connection": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "ldap"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "use_ldap": {
                                        "type": "boolean"
                                    },
                                    "bind_uri": {
                                        "type": "string"
                                    },
                                    "user": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "base_distinguished_names": {
                                        "type": "string"
                                    },
                                    "ldap_schema": {
                                        "type": "string",
                                        "enum": [
                                            "RFC2307",
                                            "CUSTOM"
                                        ],
                                        "description": "LDAP server schema to use. Default is RFC2307:\n * `CUSTOM` - CUSTOM,\n * `RFC2307` - RFC2307"
                                    },
                                    "ldap_schema_description": {
                                        "type": "object",
                                        "properties": {
                                            "group_member_attribute": {
                                                "type": "string"
                                            },
                                            "user_group_identifier_attribute": {
                                                "type": "string"
                                            },
                                            "login_name_attribute": {
                                                "type": "string"
                                            },
                                            "group_name_attribute": {
                                                "type": "string"
                                            },
                                            "user_object_class": {
                                                "type": "string"
                                            },
                                            "group_object_class": {
                                                "type": "string"
                                            },
                                            "uid_number_attribute": {
                                                "type": "string"
                                            },
                                            "gid_number_attribute": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "encrypt_connection": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/groups/": {
            "get": {
                "summary": "List all groups. Refer to the 'Modify group' method for a description of the returned fields.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "sid": {
                                                "type": "string"
                                            },
                                            "gid": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "groups"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            },
            "post": {
                "summary": "Add a group.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "sid": {
                                            "type": "string"
                                        },
                                        "gid": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "groups"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "gid": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/groups/{id}": {
            "get": {
                "summary": "Retrieve the attributes of a group. Refer to the 'Modify group' method for a description of the returned fields.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The group's unique ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "sid": {
                                            "type": "string"
                                        },
                                        "gid": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "groups"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            },
            "put": {
                "summary": "Modify a group. The 'id' field must match the id in the URI.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The group's unique ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "sid": {
                                            "type": "string"
                                        },
                                        "gid": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "groups"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "gid": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete a group.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The group's unique ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success"
                    }
                },
                "tags": [
                    "groups"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/groups/{group_id}/members/": {
            "get": {
                "summary": "List members of a group, which are among the local users. Refer to the 'Modify user' method for a description of the returned fields.",
                "parameters": [
                    {
                        "name": "group_id",
                        "in": "path",
                        "description": "The group's unique ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "primary_group": {
                                                "type": "string"
                                            },
                                            "sid": {
                                                "type": "string"
                                            },
                                            "uid": {
                                                "type": "string"
                                            },
                                            "home_directory": {
                                                "type": "string"
                                            },
                                            "can_change_password": {
                                                "type": "boolean"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "groups"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            },
            "post": {
                "summary": "Add a member to a group. Refer to the 'Modify user' method for a description of the returned fields.",
                "parameters": [
                    {
                        "name": "group_id",
                        "in": "path",
                        "description": "The group's unique ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "primary_group": {
                                            "type": "string"
                                        },
                                        "sid": {
                                            "type": "string"
                                        },
                                        "uid": {
                                            "type": "string"
                                        },
                                        "home_directory": {
                                            "type": "string"
                                        },
                                        "can_change_password": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "groups"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "member_id": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/groups/{group_id}/members/{member_id}": {
            "delete": {
                "summary": "Remove a member from a group.",
                "parameters": [
                    {
                        "name": "group_id",
                        "in": "path",
                        "description": "The group's unique ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "member_id",
                        "in": "path",
                        "description": "The user's unique ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success"
                    }
                },
                "tags": [
                    "groups"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/users/": {
            "get": {
                "summary": "List all users in the local user database. Refer to the 'Modify user' method for a description of the returned fields.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "primary_group": {
                                                "type": "string"
                                            },
                                            "sid": {
                                                "type": "string"
                                            },
                                            "uid": {
                                                "type": "string"
                                            },
                                            "home_directory": {
                                                "type": "string"
                                            },
                                            "can_change_password": {
                                                "type": "boolean"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "users"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            },
            "post": {
                "summary": "Add a user.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "primary_group": {
                                            "type": "string"
                                        },
                                        "sid": {
                                            "type": "string"
                                        },
                                        "uid": {
                                            "type": "string"
                                        },
                                        "home_directory": {
                                            "type": "string"
                                        },
                                        "can_change_password": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "users"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "primary_group": {
                                        "type": "string"
                                    },
                                    "uid": {
                                        "type": "string"
                                    },
                                    "home_directory": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/users/{id}": {
            "get": {
                "summary": "Retrieve information about a single local user. Refer to the 'Modify user' method for a description of the returned fields.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The user's unique ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "primary_group": {
                                            "type": "string"
                                        },
                                        "sid": {
                                            "type": "string"
                                        },
                                        "uid": {
                                            "type": "string"
                                        },
                                        "home_directory": {
                                            "type": "string"
                                        },
                                        "can_change_password": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "users"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            },
            "put": {
                "summary": "Modify a local user.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The user's unique ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "primary_group": {
                                            "type": "string"
                                        },
                                        "sid": {
                                            "type": "string"
                                        },
                                        "uid": {
                                            "type": "string"
                                        },
                                        "home_directory": {
                                            "type": "string"
                                        },
                                        "can_change_password": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "users"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "primary_group": {
                                        "type": "string"
                                    },
                                    "uid": {
                                        "type": "string"
                                    },
                                    "home_directory": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete a local user.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The user's unique ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success"
                    }
                },
                "tags": [
                    "users"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/users/{id}/groups/": {
            "get": {
                "summary": "Retrieve group membership of a specific user. Refer to the 'Modify group' method for a description of the returned fields. Returns an empty array if the provided user is not a local user.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The user's unique ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "sid": {
                                                "type": "string"
                                            },
                                            "gid": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "users"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/users/{id}/setpassword": {
            "post": {
                "summary": "Set a local user's password.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The user's unique ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success"
                    }
                },
                "tags": [
                    "users"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "new_password": {
                                        "type": "string",
                                        "format": "password"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/users/{id}/unpack-identity": {
            "get": {
                "summary": "A record showing the given ID in a form that shows what domain it comes from and what its value is within that domain.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The user's unique ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id_type": {
                                            "type": "string",
                                            "enum": [
                                                "LOCAL_USER",
                                                "LOCAL_GROUP",
                                                "NFS_GID",
                                                "NFS_UID",
                                                "SMB_SID",
                                                "INTERNAL",
                                                "QUMULO_OPERATOR"
                                            ],
                                            "description": "id_type:\n * `INTERNAL` - INTERNAL,\n * `LOCAL_GROUP` - LOCAL_GROUP,\n * `LOCAL_USER` - LOCAL_USER,\n * `NFS_GID` - NFS_GID,\n * `NFS_UID` - NFS_UID,\n * `QUMULO_OPERATOR` - QUMULO_OPERATOR,\n * `SMB_SID` - SMB_SID"
                                        },
                                        "id_value": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "users"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/support/settings": {
            "put": {
                "summary": "Set monitoring configuration.",
                "parameters": [
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "monitor_uri": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "support"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "enabled": {
                                        "type": "boolean"
                                    },
                                    "mq_host": {
                                        "type": "string"
                                    },
                                    "mq_port": {
                                        "type": "number"
                                    },
                                    "mq_proxy_host": {
                                        "type": "string"
                                    },
                                    "mq_proxy_port": {
                                        "type": "number"
                                    },
                                    "s3_proxy_host": {
                                        "type": "string"
                                    },
                                    "s3_proxy_port": {
                                        "type": "number"
                                    },
                                    "s3_proxy_disable_https": {
                                        "type": "boolean"
                                    },
                                    "vpn_enabled": {
                                        "type": "boolean"
                                    },
                                    "vpn_host": {
                                        "type": "string"
                                    },
                                    "period": {
                                        "type": "number"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Partial set of monitoring configuration.",
                "parameters": [
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "monitor_uri": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "support"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "enabled": {
                                        "type": "boolean"
                                    },
                                    "mq_host": {
                                        "type": "string"
                                    },
                                    "mq_port": {
                                        "type": "number"
                                    },
                                    "mq_proxy_host": {
                                        "type": "string"
                                    },
                                    "mq_proxy_port": {
                                        "type": "number"
                                    },
                                    "s3_proxy_host": {
                                        "type": "string"
                                    },
                                    "s3_proxy_port": {
                                        "type": "number"
                                    },
                                    "s3_proxy_disable_https": {
                                        "type": "boolean"
                                    },
                                    "vpn_enabled": {
                                        "type": "boolean"
                                    },
                                    "vpn_host": {
                                        "type": "string"
                                    },
                                    "period": {
                                        "type": "number"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Get monitoring configuration.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "enabled": {
                                            "type": "boolean"
                                        },
                                        "mq_host": {
                                            "type": "string"
                                        },
                                        "mq_port": {
                                            "type": "number"
                                        },
                                        "mq_proxy_host": {
                                            "type": "string"
                                        },
                                        "mq_proxy_port": {
                                            "type": "number"
                                        },
                                        "s3_proxy_host": {
                                            "type": "string"
                                        },
                                        "s3_proxy_port": {
                                            "type": "number"
                                        },
                                        "s3_proxy_disable_https": {
                                            "type": "boolean"
                                        },
                                        "vpn_enabled": {
                                            "type": "boolean"
                                        },
                                        "vpn_host": {
                                            "type": "string"
                                        },
                                        "period": {
                                            "type": "number"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "support"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/support/status/": {
            "get": {
                "summary": "List the monitoring status of all nodes: whether various kinds of monitoring connections are enabled/connected/etc.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "node_id": {
                                                "type": "number"
                                            },
                                            "monitoring": {
                                                "type": "string",
                                                "enum": [
                                                    "DISABLED",
                                                    "IN_PROGRESS",
                                                    "CONNECTED",
                                                    "ERROR",
                                                    "ERROR_PENDING"
                                                ],
                                                "description": "monitoring:\n * `CONNECTED` - Connection successful,\n * `DISABLED` - Service is not enabled,\n * `ERROR` - Connection has been down for 5 minutes,\n * `ERROR_PENDING` - Connection error on last attempt,\n * `IN_PROGRESS` - Status has not yet been reported"
                                            },
                                            "file_upload": {
                                                "type": "string",
                                                "enum": [
                                                    "DISABLED",
                                                    "IN_PROGRESS",
                                                    "CONNECTED",
                                                    "ERROR",
                                                    "ERROR_PENDING"
                                                ],
                                                "description": "file_upload:\n * `CONNECTED` - Connection successful,\n * `DISABLED` - Service is not enabled,\n * `ERROR` - Connection has been down for 5 minutes,\n * `ERROR_PENDING` - Connection error on last attempt,\n * `IN_PROGRESS` - Status has not yet been reported"
                                            },
                                            "vpn_connection": {
                                                "type": "string",
                                                "enum": [
                                                    "DISABLED",
                                                    "IN_PROGRESS",
                                                    "CONNECTED",
                                                    "ERROR",
                                                    "ERROR_PENDING"
                                                ],
                                                "description": "vpn_connection:\n * `CONNECTED` - Connection successful,\n * `DISABLED` - Service is not enabled,\n * `ERROR` - Connection has been down for 5 minutes,\n * `ERROR_PENDING` - Connection error on last attempt,\n * `IN_PROGRESS` - Status has not yet been reported"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "support"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/support/vpn-keys": {
            "get": {
                "summary": "Get VPN keys.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "mqvpn_client_crt": {
                                            "type": "string"
                                        },
                                        "mqvpn_client_key": {
                                            "type": "string"
                                        },
                                        "qumulo_ca_crt": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "support"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            },
            "put": {
                "summary": "Set VPN keys.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "mqvpn_client_crt": {
                                            "type": "string"
                                        },
                                        "mqvpn_client_key": {
                                            "type": "string"
                                        },
                                        "qumulo_ca_crt": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "support"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "mqvpn_client_crt": {
                                        "type": "string"
                                    },
                                    "mqvpn_client_key": {
                                        "type": "string"
                                    },
                                    "qumulo_ca_crt": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Set VPN keys.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "mqvpn_client_crt": {
                                            "type": "string"
                                        },
                                        "mqvpn_client_key": {
                                            "type": "string"
                                        },
                                        "qumulo_ca_crt": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "support"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "mqvpn_client_crt": {
                                        "type": "string"
                                    },
                                    "mqvpn_client_key": {
                                        "type": "string"
                                    },
                                    "qumulo_ca_crt": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/nfs/exports/": {
            "get": {
                "summary": "This method lists NFS exports. Refer to the 'Modify NFS Export' method for a description of the returned fields.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "export_path": {
                                                "type": "string"
                                            },
                                            "fs_path": {
                                                "type": "string"
                                            },
                                            "description": {
                                                "type": "string"
                                            },
                                            "restrictions": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "host_restrictions": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "require_privileged_port": {
                                                            "type": "boolean"
                                                        },
                                                        "read_only": {
                                                            "type": "boolean"
                                                        },
                                                        "user_mapping": {
                                                            "type": "string",
                                                            "enum": [
                                                                "NFS_MAP_NONE",
                                                                "NFS_MAP_ROOT",
                                                                "NFS_MAP_ALL"
                                                            ],
                                                            "description": "NFS user mapping (squashing) support:\n * `NFS_MAP_ALL` - Map all users.,\n * `NFS_MAP_NONE` - Do not map users.,\n * `NFS_MAP_ROOT` - Map root user (uid 0)."
                                                        },
                                                        "map_to_user": {
                                                            "type": "object",
                                                            "properties": {
                                                                "id_type": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "LOCAL_USER",
                                                                        "LOCAL_GROUP",
                                                                        "NFS_GID",
                                                                        "NFS_UID",
                                                                        "SMB_SID",
                                                                        "INTERNAL",
                                                                        "QUMULO_OPERATOR"
                                                                    ],
                                                                    "description": "id_type:\n * `INTERNAL` - INTERNAL,\n * `LOCAL_GROUP` - LOCAL_GROUP,\n * `LOCAL_USER` - LOCAL_USER,\n * `NFS_GID` - NFS_GID,\n * `NFS_UID` - NFS_UID,\n * `QUMULO_OPERATOR` - QUMULO_OPERATOR,\n * `SMB_SID` - SMB_SID"
                                                                },
                                                                "id_value": {
                                                                    "type": "string"
                                                                }
                                                            }
                                                        },
                                                        "map_to_group": {
                                                            "type": "object",
                                                            "properties": {
                                                                "id_type": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "LOCAL_USER",
                                                                        "LOCAL_GROUP",
                                                                        "NFS_GID",
                                                                        "NFS_UID",
                                                                        "SMB_SID",
                                                                        "INTERNAL",
                                                                        "QUMULO_OPERATOR"
                                                                    ],
                                                                    "description": "id_type:\n * `INTERNAL` - INTERNAL,\n * `LOCAL_GROUP` - LOCAL_GROUP,\n * `LOCAL_USER` - LOCAL_USER,\n * `NFS_GID` - NFS_GID,\n * `NFS_UID` - NFS_UID,\n * `QUMULO_OPERATOR` - QUMULO_OPERATOR,\n * `SMB_SID` - SMB_SID"
                                                                },
                                                                "id_value": {
                                                                    "type": "string"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "present_64_bit_fields_as_32_bit": {
                                                "type": "boolean"
                                            },
                                            "fields_to_present_as_32_bit": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string",
                                                    "enum": [
                                                        "FILE_IDS",
                                                        "FILE_SIZES",
                                                        "FS_SIZE",
                                                        "ALL"
                                                    ],
                                                    "description": "Specify which NFS3 result values should be 32-bit sanitized on this export. Has no effect on exports used over NFS4.:\n * `ALL` - Force all 64 bit fields to fit in 32 bits.,\n * `FILE_IDS` - Hash high file ids to 32 bits.,\n * `FILE_SIZES` - Clamp large file sizes to 4GiB to fit in 32 bits.,\n * `FS_SIZE` - Clamp available, used and total space reported for the FS to 4GiB."
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "nfs"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            },
            "post": {
                "summary": "This method adds an NFS export.",
                "parameters": [
                    {
                        "name": "allow-fs-path-create",
                        "in": "query",
                        "description": "Specifies whether the file system path can be created if it does not already exist.",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "export_path": {
                                            "type": "string"
                                        },
                                        "fs_path": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "restrictions": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "host_restrictions": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "require_privileged_port": {
                                                        "type": "boolean"
                                                    },
                                                    "read_only": {
                                                        "type": "boolean"
                                                    },
                                                    "user_mapping": {
                                                        "type": "string",
                                                        "enum": [
                                                            "NFS_MAP_NONE",
                                                            "NFS_MAP_ROOT",
                                                            "NFS_MAP_ALL"
                                                        ],
                                                        "description": "NFS user mapping (squashing) support:\n * `NFS_MAP_ALL` - Map all users.,\n * `NFS_MAP_NONE` - Do not map users.,\n * `NFS_MAP_ROOT` - Map root user (uid 0)."
                                                    },
                                                    "map_to_user": {
                                                        "type": "object",
                                                        "properties": {
                                                            "id_type": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "LOCAL_USER",
                                                                    "LOCAL_GROUP",
                                                                    "NFS_GID",
                                                                    "NFS_UID",
                                                                    "SMB_SID",
                                                                    "INTERNAL",
                                                                    "QUMULO_OPERATOR"
                                                                ],
                                                                "description": "id_type:\n * `INTERNAL` - INTERNAL,\n * `LOCAL_GROUP` - LOCAL_GROUP,\n * `LOCAL_USER` - LOCAL_USER,\n * `NFS_GID` - NFS_GID,\n * `NFS_UID` - NFS_UID,\n * `QUMULO_OPERATOR` - QUMULO_OPERATOR,\n * `SMB_SID` - SMB_SID"
                                                            },
                                                            "id_value": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "map_to_group": {
                                                        "type": "object",
                                                        "properties": {
                                                            "id_type": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "LOCAL_USER",
                                                                    "LOCAL_GROUP",
                                                                    "NFS_GID",
                                                                    "NFS_UID",
                                                                    "SMB_SID",
                                                                    "INTERNAL",
                                                                    "QUMULO_OPERATOR"
                                                                ],
                                                                "description": "id_type:\n * `INTERNAL` - INTERNAL,\n * `LOCAL_GROUP` - LOCAL_GROUP,\n * `LOCAL_USER` - LOCAL_USER,\n * `NFS_GID` - NFS_GID,\n * `NFS_UID` - NFS_UID,\n * `QUMULO_OPERATOR` - QUMULO_OPERATOR,\n * `SMB_SID` - SMB_SID"
                                                            },
                                                            "id_value": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "present_64_bit_fields_as_32_bit": {
                                            "type": "boolean"
                                        },
                                        "fields_to_present_as_32_bit": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "enum": [
                                                    "FILE_IDS",
                                                    "FILE_SIZES",
                                                    "FS_SIZE",
                                                    "ALL"
                                                ],
                                                "description": "Specify which NFS3 result values should be 32-bit sanitized on this export. Has no effect on exports used over NFS4.:\n * `ALL` - Force all 64 bit fields to fit in 32 bits.,\n * `FILE_IDS` - Hash high file ids to 32 bits.,\n * `FILE_SIZES` - Clamp large file sizes to 4GiB to fit in 32 bits.,\n * `FS_SIZE` - Clamp available, used and total space reported for the FS to 4GiB."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "nfs"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "export_path": {
                                        "type": "string"
                                    },
                                    "fs_path": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "restrictions": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "host_restrictions": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "require_privileged_port": {
                                                    "type": "boolean"
                                                },
                                                "read_only": {
                                                    "type": "boolean"
                                                },
                                                "user_mapping": {
                                                    "type": "string",
                                                    "enum": [
                                                        "NFS_MAP_NONE",
                                                        "NFS_MAP_ROOT",
                                                        "NFS_MAP_ALL"
                                                    ],
                                                    "description": "NFS user mapping (squashing) support:\n * `NFS_MAP_ALL` - Map all users.,\n * `NFS_MAP_NONE` - Do not map users.,\n * `NFS_MAP_ROOT` - Map root user (uid 0)."
                                                },
                                                "map_to_user": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id_type": {
                                                            "type": "string",
                                                            "enum": [
                                                                "LOCAL_USER",
                                                                "LOCAL_GROUP",
                                                                "NFS_GID",
                                                                "NFS_UID",
                                                                "SMB_SID",
                                                                "INTERNAL",
                                                                "QUMULO_OPERATOR"
                                                            ],
                                                            "description": "id_type:\n * `INTERNAL` - INTERNAL,\n * `LOCAL_GROUP` - LOCAL_GROUP,\n * `LOCAL_USER` - LOCAL_USER,\n * `NFS_GID` - NFS_GID,\n * `NFS_UID` - NFS_UID,\n * `QUMULO_OPERATOR` - QUMULO_OPERATOR,\n * `SMB_SID` - SMB_SID"
                                                        },
                                                        "id_value": {
                                                            "type": "string"
                                                        }
                                                    }
                                                },
                                                "map_to_group": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id_type": {
                                                            "type": "string",
                                                            "enum": [
                                                                "LOCAL_USER",
                                                                "LOCAL_GROUP",
                                                                "NFS_GID",
                                                                "NFS_UID",
                                                                "SMB_SID",
                                                                "INTERNAL",
                                                                "QUMULO_OPERATOR"
                                                            ],
                                                            "description": "id_type:\n * `INTERNAL` - INTERNAL,\n * `LOCAL_GROUP` - LOCAL_GROUP,\n * `LOCAL_USER` - LOCAL_USER,\n * `NFS_GID` - NFS_GID,\n * `NFS_UID` - NFS_UID,\n * `QUMULO_OPERATOR` - QUMULO_OPERATOR,\n * `SMB_SID` - SMB_SID"
                                                        },
                                                        "id_value": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "present_64_bit_fields_as_32_bit": {
                                        "type": "boolean"
                                    },
                                    "fields_to_present_as_32_bit": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "enum": [
                                                "FILE_IDS",
                                                "FILE_SIZES",
                                                "FS_SIZE",
                                                "ALL"
                                            ],
                                            "description": "Specify which NFS3 result values should be 32-bit sanitized on this export. Has no effect on exports used over NFS4:\n * `ALL` - Force all 64 bit fields to fit in 32 bits.,\n * `FILE_IDS` - Hash high file ids to 32 bits.,\n * `FILE_SIZES` - Clamp large file sizes to 4GiB to fit in 32 bits.,\n * `FS_SIZE` - Clamp available, used and total space reported for the FS to 4GiB."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/nfs/settings": {
            "get": {
                "summary": "Retrieve current NFS server configuration.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "v4_enabled": {
                                            "type": "boolean"
                                        },
                                        "krb5_enabled": {
                                            "type": "boolean"
                                        },
                                        "krb5p_enabled": {
                                            "type": "boolean"
                                        },
                                        "auth_sys_enabled": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "nfs"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            },
            "put": {
                "summary": "Modify current NFS server configuration.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "v4_enabled": {
                                            "type": "boolean"
                                        },
                                        "krb5_enabled": {
                                            "type": "boolean"
                                        },
                                        "krb5p_enabled": {
                                            "type": "boolean"
                                        },
                                        "auth_sys_enabled": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "nfs"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "v4_enabled": {
                                        "type": "boolean"
                                    },
                                    "krb5_enabled": {
                                        "type": "boolean"
                                    },
                                    "krb5p_enabled": {
                                        "type": "boolean"
                                    },
                                    "auth_sys_enabled": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Modify current NFS server configuration.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "v4_enabled": {
                                            "type": "boolean"
                                        },
                                        "krb5_enabled": {
                                            "type": "boolean"
                                        },
                                        "krb5p_enabled": {
                                            "type": "boolean"
                                        },
                                        "auth_sys_enabled": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "nfs"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "v4_enabled": {
                                        "type": "boolean"
                                    },
                                    "krb5_enabled": {
                                        "type": "boolean"
                                    },
                                    "krb5p_enabled": {
                                        "type": "boolean"
                                    },
                                    "auth_sys_enabled": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/nfs/exports/{ref}": {
            "get": {
                "summary": "This method retrieves the specified NFS export. Refer to the 'Modify NFS Export' method for a description of the returned fields.",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "A unique identifier of the NFS export, either ID or export path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "export_path": {
                                            "type": "string"
                                        },
                                        "fs_path": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "restrictions": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "host_restrictions": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "require_privileged_port": {
                                                        "type": "boolean"
                                                    },
                                                    "read_only": {
                                                        "type": "boolean"
                                                    },
                                                    "user_mapping": {
                                                        "type": "string",
                                                        "enum": [
                                                            "NFS_MAP_NONE",
                                                            "NFS_MAP_ROOT",
                                                            "NFS_MAP_ALL"
                                                        ],
                                                        "description": "NFS user mapping (squashing) support:\n * `NFS_MAP_ALL` - Map all users.,\n * `NFS_MAP_NONE` - Do not map users.,\n * `NFS_MAP_ROOT` - Map root user (uid 0)."
                                                    },
                                                    "map_to_user": {
                                                        "type": "object",
                                                        "properties": {
                                                            "id_type": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "LOCAL_USER",
                                                                    "LOCAL_GROUP",
                                                                    "NFS_GID",
                                                                    "NFS_UID",
                                                                    "SMB_SID",
                                                                    "INTERNAL",
                                                                    "QUMULO_OPERATOR"
                                                                ],
                                                                "description": "id_type:\n * `INTERNAL` - INTERNAL,\n * `LOCAL_GROUP` - LOCAL_GROUP,\n * `LOCAL_USER` - LOCAL_USER,\n * `NFS_GID` - NFS_GID,\n * `NFS_UID` - NFS_UID,\n * `QUMULO_OPERATOR` - QUMULO_OPERATOR,\n * `SMB_SID` - SMB_SID"
                                                            },
                                                            "id_value": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "map_to_group": {
                                                        "type": "object",
                                                        "properties": {
                                                            "id_type": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "LOCAL_USER",
                                                                    "LOCAL_GROUP",
                                                                    "NFS_GID",
                                                                    "NFS_UID",
                                                                    "SMB_SID",
                                                                    "INTERNAL",
                                                                    "QUMULO_OPERATOR"
                                                                ],
                                                                "description": "id_type:\n * `INTERNAL` - INTERNAL,\n * `LOCAL_GROUP` - LOCAL_GROUP,\n * `LOCAL_USER` - LOCAL_USER,\n * `NFS_GID` - NFS_GID,\n * `NFS_UID` - NFS_UID,\n * `QUMULO_OPERATOR` - QUMULO_OPERATOR,\n * `SMB_SID` - SMB_SID"
                                                            },
                                                            "id_value": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "present_64_bit_fields_as_32_bit": {
                                            "type": "boolean"
                                        },
                                        "fields_to_present_as_32_bit": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "enum": [
                                                    "FILE_IDS",
                                                    "FILE_SIZES",
                                                    "FS_SIZE",
                                                    "ALL"
                                                ],
                                                "description": "Specify which NFS3 result values should be 32-bit sanitized on this export. Has no effect on exports used over NFS4.:\n * `ALL` - Force all 64 bit fields to fit in 32 bits.,\n * `FILE_IDS` - Hash high file ids to 32 bits.,\n * `FILE_SIZES` - Clamp large file sizes to 4GiB to fit in 32 bits.,\n * `FS_SIZE` - Clamp available, used and total space reported for the FS to 4GiB."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "nfs"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            },
            "put": {
                "summary": "This method sets all attributes of a NFS export.",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "A unique identifier of the NFS export, either ID or export path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "allow-fs-path-create",
                        "in": "query",
                        "description": "Specifies whether the file system path can be created if it does not already exist.",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "export_path": {
                                            "type": "string"
                                        },
                                        "fs_path": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "restrictions": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "host_restrictions": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "require_privileged_port": {
                                                        "type": "boolean"
                                                    },
                                                    "read_only": {
                                                        "type": "boolean"
                                                    },
                                                    "user_mapping": {
                                                        "type": "string",
                                                        "enum": [
                                                            "NFS_MAP_NONE",
                                                            "NFS_MAP_ROOT",
                                                            "NFS_MAP_ALL"
                                                        ],
                                                        "description": "NFS user mapping (squashing) support:\n * `NFS_MAP_ALL` - Map all users.,\n * `NFS_MAP_NONE` - Do not map users.,\n * `NFS_MAP_ROOT` - Map root user (uid 0)."
                                                    },
                                                    "map_to_user": {
                                                        "type": "object",
                                                        "properties": {
                                                            "id_type": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "LOCAL_USER",
                                                                    "LOCAL_GROUP",
                                                                    "NFS_GID",
                                                                    "NFS_UID",
                                                                    "SMB_SID",
                                                                    "INTERNAL",
                                                                    "QUMULO_OPERATOR"
                                                                ],
                                                                "description": "id_type:\n * `INTERNAL` - INTERNAL,\n * `LOCAL_GROUP` - LOCAL_GROUP,\n * `LOCAL_USER` - LOCAL_USER,\n * `NFS_GID` - NFS_GID,\n * `NFS_UID` - NFS_UID,\n * `QUMULO_OPERATOR` - QUMULO_OPERATOR,\n * `SMB_SID` - SMB_SID"
                                                            },
                                                            "id_value": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "map_to_group": {
                                                        "type": "object",
                                                        "properties": {
                                                            "id_type": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "LOCAL_USER",
                                                                    "LOCAL_GROUP",
                                                                    "NFS_GID",
                                                                    "NFS_UID",
                                                                    "SMB_SID",
                                                                    "INTERNAL",
                                                                    "QUMULO_OPERATOR"
                                                                ],
                                                                "description": "id_type:\n * `INTERNAL` - INTERNAL,\n * `LOCAL_GROUP` - LOCAL_GROUP,\n * `LOCAL_USER` - LOCAL_USER,\n * `NFS_GID` - NFS_GID,\n * `NFS_UID` - NFS_UID,\n * `QUMULO_OPERATOR` - QUMULO_OPERATOR,\n * `SMB_SID` - SMB_SID"
                                                            },
                                                            "id_value": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "present_64_bit_fields_as_32_bit": {
                                            "type": "boolean"
                                        },
                                        "fields_to_present_as_32_bit": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "enum": [
                                                    "FILE_IDS",
                                                    "FILE_SIZES",
                                                    "FS_SIZE",
                                                    "ALL"
                                                ],
                                                "description": "Specify which NFS3 result values should be 32-bit sanitized on this export. Has no effect on exports used over NFS4.:\n * `ALL` - Force all 64 bit fields to fit in 32 bits.,\n * `FILE_IDS` - Hash high file ids to 32 bits.,\n * `FILE_SIZES` - Clamp large file sizes to 4GiB to fit in 32 bits.,\n * `FS_SIZE` - Clamp available, used and total space reported for the FS to 4GiB."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "nfs"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string"
                                    },
                                    "export_path": {
                                        "type": "string"
                                    },
                                    "fs_path": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "restrictions": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "host_restrictions": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "require_privileged_port": {
                                                    "type": "boolean"
                                                },
                                                "read_only": {
                                                    "type": "boolean"
                                                },
                                                "user_mapping": {
                                                    "type": "string",
                                                    "enum": [
                                                        "NFS_MAP_NONE",
                                                        "NFS_MAP_ROOT",
                                                        "NFS_MAP_ALL"
                                                    ],
                                                    "description": "NFS user mapping (squashing) support:\n * `NFS_MAP_ALL` - Map all users.,\n * `NFS_MAP_NONE` - Do not map users.,\n * `NFS_MAP_ROOT` - Map root user (uid 0)."
                                                },
                                                "map_to_user": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id_type": {
                                                            "type": "string",
                                                            "enum": [
                                                                "LOCAL_USER",
                                                                "LOCAL_GROUP",
                                                                "NFS_GID",
                                                                "NFS_UID",
                                                                "SMB_SID",
                                                                "INTERNAL",
                                                                "QUMULO_OPERATOR"
                                                            ],
                                                            "description": "id_type:\n * `INTERNAL` - INTERNAL,\n * `LOCAL_GROUP` - LOCAL_GROUP,\n * `LOCAL_USER` - LOCAL_USER,\n * `NFS_GID` - NFS_GID,\n * `NFS_UID` - NFS_UID,\n * `QUMULO_OPERATOR` - QUMULO_OPERATOR,\n * `SMB_SID` - SMB_SID"
                                                        },
                                                        "id_value": {
                                                            "type": "string"
                                                        }
                                                    }
                                                },
                                                "map_to_group": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id_type": {
                                                            "type": "string",
                                                            "enum": [
                                                                "LOCAL_USER",
                                                                "LOCAL_GROUP",
                                                                "NFS_GID",
                                                                "NFS_UID",
                                                                "SMB_SID",
                                                                "INTERNAL",
                                                                "QUMULO_OPERATOR"
                                                            ],
                                                            "description": "id_type:\n * `INTERNAL` - INTERNAL,\n * `LOCAL_GROUP` - LOCAL_GROUP,\n * `LOCAL_USER` - LOCAL_USER,\n * `NFS_GID` - NFS_GID,\n * `NFS_UID` - NFS_UID,\n * `QUMULO_OPERATOR` - QUMULO_OPERATOR,\n * `SMB_SID` - SMB_SID"
                                                        },
                                                        "id_value": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "present_64_bit_fields_as_32_bit": {
                                        "type": "boolean"
                                    },
                                    "fields_to_present_as_32_bit": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "enum": [
                                                "FILE_IDS",
                                                "FILE_SIZES",
                                                "FS_SIZE",
                                                "ALL"
                                            ],
                                            "description": "Specify which NFS3 result values should be 32-bit sanitized on this export. Has no effect on exports used over NFS4.:\n * `ALL` - Force all 64 bit fields to fit in 32 bits.,\n * `FILE_IDS` - Hash high file ids to 32 bits.,\n * `FILE_SIZES` - Clamp large file sizes to 4GiB to fit in 32 bits.,\n * `FS_SIZE` - Clamp available, used and total space reported for the FS to 4GiB."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "This method modifies individual attributes of a NFS export.",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "A unique identifier of the NFS export, either ID or export path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "allow-fs-path-create",
                        "in": "query",
                        "description": "Specifies whether the file system path can be created if it does not already exist.",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "export_path": {
                                            "type": "string"
                                        },
                                        "fs_path": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "restrictions": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "host_restrictions": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "require_privileged_port": {
                                                        "type": "boolean"
                                                    },
                                                    "read_only": {
                                                        "type": "boolean"
                                                    },
                                                    "user_mapping": {
                                                        "type": "string",
                                                        "enum": [
                                                            "NFS_MAP_NONE",
                                                            "NFS_MAP_ROOT",
                                                            "NFS_MAP_ALL"
                                                        ],
                                                        "description": "NFS user mapping (squashing) support:\n * `NFS_MAP_ALL` - Map all users.,\n * `NFS_MAP_NONE` - Do not map users.,\n * `NFS_MAP_ROOT` - Map root user (uid 0)."
                                                    },
                                                    "map_to_user": {
                                                        "type": "object",
                                                        "properties": {
                                                            "id_type": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "LOCAL_USER",
                                                                    "LOCAL_GROUP",
                                                                    "NFS_GID",
                                                                    "NFS_UID",
                                                                    "SMB_SID",
                                                                    "INTERNAL",
                                                                    "QUMULO_OPERATOR"
                                                                ],
                                                                "description": "id_type:\n * `INTERNAL` - INTERNAL,\n * `LOCAL_GROUP` - LOCAL_GROUP,\n * `LOCAL_USER` - LOCAL_USER,\n * `NFS_GID` - NFS_GID,\n * `NFS_UID` - NFS_UID,\n * `QUMULO_OPERATOR` - QUMULO_OPERATOR,\n * `SMB_SID` - SMB_SID"
                                                            },
                                                            "id_value": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "map_to_group": {
                                                        "type": "object",
                                                        "properties": {
                                                            "id_type": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "LOCAL_USER",
                                                                    "LOCAL_GROUP",
                                                                    "NFS_GID",
                                                                    "NFS_UID",
                                                                    "SMB_SID",
                                                                    "INTERNAL",
                                                                    "QUMULO_OPERATOR"
                                                                ],
                                                                "description": "id_type:\n * `INTERNAL` - INTERNAL,\n * `LOCAL_GROUP` - LOCAL_GROUP,\n * `LOCAL_USER` - LOCAL_USER,\n * `NFS_GID` - NFS_GID,\n * `NFS_UID` - NFS_UID,\n * `QUMULO_OPERATOR` - QUMULO_OPERATOR,\n * `SMB_SID` - SMB_SID"
                                                            },
                                                            "id_value": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "present_64_bit_fields_as_32_bit": {
                                            "type": "boolean"
                                        },
                                        "fields_to_present_as_32_bit": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "enum": [
                                                    "FILE_IDS",
                                                    "FILE_SIZES",
                                                    "FS_SIZE",
                                                    "ALL"
                                                ],
                                                "description": "Specify which NFS3 result values should be 32-bit sanitized on this export. Has no effect on exports used over NFS4.:\n * `ALL` - Force all 64 bit fields to fit in 32 bits.,\n * `FILE_IDS` - Hash high file ids to 32 bits.,\n * `FILE_SIZES` - Clamp large file sizes to 4GiB to fit in 32 bits.,\n * `FS_SIZE` - Clamp available, used and total space reported for the FS to 4GiB."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "nfs"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string"
                                    },
                                    "export_path": {
                                        "type": "string"
                                    },
                                    "fs_path": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "restrictions": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "host_restrictions": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "require_privileged_port": {
                                                    "type": "boolean"
                                                },
                                                "read_only": {
                                                    "type": "boolean"
                                                },
                                                "user_mapping": {
                                                    "type": "string",
                                                    "enum": [
                                                        "NFS_MAP_NONE",
                                                        "NFS_MAP_ROOT",
                                                        "NFS_MAP_ALL"
                                                    ],
                                                    "description": "NFS user mapping (squashing) support:\n * `NFS_MAP_ALL` - Map all users.,\n * `NFS_MAP_NONE` - Do not map users.,\n * `NFS_MAP_ROOT` - Map root user (uid 0)."
                                                },
                                                "map_to_user": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id_type": {
                                                            "type": "string",
                                                            "enum": [
                                                                "LOCAL_USER",
                                                                "LOCAL_GROUP",
                                                                "NFS_GID",
                                                                "NFS_UID",
                                                                "SMB_SID",
                                                                "INTERNAL",
                                                                "QUMULO_OPERATOR"
                                                            ],
                                                            "description": "id_type:\n * `INTERNAL` - INTERNAL,\n * `LOCAL_GROUP` - LOCAL_GROUP,\n * `LOCAL_USER` - LOCAL_USER,\n * `NFS_GID` - NFS_GID,\n * `NFS_UID` - NFS_UID,\n * `QUMULO_OPERATOR` - QUMULO_OPERATOR,\n * `SMB_SID` - SMB_SID"
                                                        },
                                                        "id_value": {
                                                            "type": "string"
                                                        }
                                                    }
                                                },
                                                "map_to_group": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id_type": {
                                                            "type": "string",
                                                            "enum": [
                                                                "LOCAL_USER",
                                                                "LOCAL_GROUP",
                                                                "NFS_GID",
                                                                "NFS_UID",
                                                                "SMB_SID",
                                                                "INTERNAL",
                                                                "QUMULO_OPERATOR"
                                                            ],
                                                            "description": "id_type:\n * `INTERNAL` - INTERNAL,\n * `LOCAL_GROUP` - LOCAL_GROUP,\n * `LOCAL_USER` - LOCAL_USER,\n * `NFS_GID` - NFS_GID,\n * `NFS_UID` - NFS_UID,\n * `QUMULO_OPERATOR` - QUMULO_OPERATOR,\n * `SMB_SID` - SMB_SID"
                                                        },
                                                        "id_value": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "present_64_bit_fields_as_32_bit": {
                                        "type": "boolean"
                                    },
                                    "fields_to_present_as_32_bit": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "enum": [
                                                "FILE_IDS",
                                                "FILE_SIZES",
                                                "FS_SIZE",
                                                "ALL"
                                            ],
                                            "description": "Specify which NFS3 result values should be 32-bit sanitized on this export. Has no effect on exports used over NFS4.:\n * `ALL` - Force all 64 bit fields to fit in 32 bits.,\n * `FILE_IDS` - Hash high file ids to 32 bits.,\n * `FILE_SIZES` - Clamp large file sizes to 4GiB to fit in 32 bits.,\n * `FS_SIZE` - Clamp available, used and total space reported for the FS to 4GiB."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "This method deletes an NFS export.",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "A unique identifier of the NFS export, either ID or export path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success"
                    }
                },
                "tags": [
                    "nfs"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/network/settings": {
            "put": {
                "summary": "Change networking configuration for the whole cluster. This API is deprecated in favor of /v2/network/interfaces/ and /v2/network/interfaces/1/networks/.",
                "parameters": [
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "monitor_uri": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "network"
                ],
                "deprecated": true,
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "assigned_by": {
                                        "type": "string",
                                        "enum": [
                                            "DHCP",
                                            "STATIC",
                                            "LINK_LOCAL"
                                        ],
                                        "description": "How to assign IP address, either DHCP or STATIC:\n * `DHCP` - NETWORK_ASSIGNED_BY_DHCP,\n * `LINK_LOCAL` - NETWORK_ASSIGNED_BY_LINK_LOCAL,\n * `STATIC` - NETWORK_ASSIGNED_BY_STATIC"
                                    },
                                    "ip_ranges": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "floating_ip_ranges": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "netmask": {
                                        "type": "string"
                                    },
                                    "gateway": {
                                        "type": "string"
                                    },
                                    "gateway_ipv6": {
                                        "type": "string"
                                    },
                                    "dns_servers": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "dns_search_domains": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "mtu": {
                                        "type": "number"
                                    },
                                    "bonding_mode": {
                                        "type": "string",
                                        "enum": [
                                            "UNSPECIFIED",
                                            "ACTIVE_BACKUP",
                                            "IEEE_8023AD"
                                        ],
                                        "description": "Ethernet bonding mode (ACTIVE_BACKUP or IEEE_8023AD):\n * `ACTIVE_BACKUP` - BONDING_MODE_ACTIVE_BACKUP,\n * `IEEE_8023AD` - BONDING_MODE_IEEE_8023AD,\n * `UNSPECIFIED` - BONDING_MODE_UNSPECIFIED"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Update networking configuration for the whole cluster. This API is deprecated in favor of /v2/network/interfaces/ and /v2/network/interfaces/1/networks/.",
                "parameters": [],
                "responses": {
                    "202": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "monitor_uri": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "network"
                ],
                "deprecated": true,
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "assigned_by": {
                                        "type": "string",
                                        "enum": [
                                            "DHCP",
                                            "STATIC",
                                            "LINK_LOCAL"
                                        ],
                                        "description": "How to assign IP address, either DHCP or STATIC:\n * `DHCP` - NETWORK_ASSIGNED_BY_DHCP,\n * `LINK_LOCAL` - NETWORK_ASSIGNED_BY_LINK_LOCAL,\n * `STATIC` - NETWORK_ASSIGNED_BY_STATIC"
                                    },
                                    "ip_ranges": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "floating_ip_ranges": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "netmask": {
                                        "type": "string"
                                    },
                                    "gateway": {
                                        "type": "string"
                                    },
                                    "gateway_ipv6": {
                                        "type": "string"
                                    },
                                    "dns_servers": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "dns_search_domains": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "mtu": {
                                        "type": "number"
                                    },
                                    "bonding_mode": {
                                        "type": "string",
                                        "enum": [
                                            "UNSPECIFIED",
                                            "ACTIVE_BACKUP",
                                            "IEEE_8023AD"
                                        ],
                                        "description": "Ethernet bonding mode (ACTIVE_BACKUP or IEEE_8023AD):\n * `ACTIVE_BACKUP` - BONDING_MODE_ACTIVE_BACKUP,\n * `IEEE_8023AD` - BONDING_MODE_IEEE_8023AD,\n * `UNSPECIFIED` - BONDING_MODE_UNSPECIFIED"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Get global networking configuration for the whole cluster. This API is deprecated in favor of /v2/network/interfaces/ and /v2/network/interfaces/1/networks/.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "assigned_by": {
                                            "type": "string",
                                            "enum": [
                                                "DHCP",
                                                "STATIC",
                                                "LINK_LOCAL"
                                            ],
                                            "description": "How to assign IP address, either DHCP or STATIC:\n * `DHCP` - NETWORK_ASSIGNED_BY_DHCP,\n * `LINK_LOCAL` - NETWORK_ASSIGNED_BY_LINK_LOCAL,\n * `STATIC` - NETWORK_ASSIGNED_BY_STATIC"
                                        },
                                        "ip_ranges": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "floating_ip_ranges": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "netmask": {
                                            "type": "string"
                                        },
                                        "gateway": {
                                            "type": "string"
                                        },
                                        "gateway_ipv6": {
                                            "type": "string"
                                        },
                                        "dns_servers": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "dns_search_domains": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "mtu": {
                                            "type": "number"
                                        },
                                        "bonding_mode": {
                                            "type": "string",
                                            "enum": [
                                                "UNSPECIFIED",
                                                "ACTIVE_BACKUP",
                                                "IEEE_8023AD"
                                            ],
                                            "description": "Ethernet bonding mode (ACTIVE_BACKUP or IEEE_8023AD):\n * `ACTIVE_BACKUP` - BONDING_MODE_ACTIVE_BACKUP,\n * `IEEE_8023AD` - BONDING_MODE_IEEE_8023AD,\n * `UNSPECIFIED` - BONDING_MODE_UNSPECIFIED"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "network"
                ],
                "deprecated": true,
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/network/static-ip-allocation": {
            "get": {
                "summary": "Returns total/used/available numbers of IPs based on the current network configuration. Returns status code 400 if the server is in DHCP mode unless the try/floating query parameters are provided.",
                "parameters": [
                    {
                        "name": "netmask",
                        "in": "query",
                        "description": "Netmask to apply to the try and/or floating range arguments, overriding whatever is currently configured. Required if network is currently in DHCP mode.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "try",
                        "in": "query",
                        "description": "Comma-separated static IP range(s) to try. Defaults to currently configured static IP range.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "floating",
                        "in": "query",
                        "description": "Comma-separated floating IP range(s) to try. Defaults to currently configured floating IP range.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "total_ips": {
                                            "type": "number"
                                        },
                                        "used_ips": {
                                            "type": "number"
                                        },
                                        "available_ips": {
                                            "type": "number"
                                        },
                                        "total_floating_ips": {
                                            "type": "number"
                                        },
                                        "surplus_floating_ips": {
                                            "type": "number"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "network"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/network/floating-ip-allocation": {
            "get": {
                "summary": "Returns floating IPs per node distribution based on the current network configuration. Returns status code 400 if the server is in DHCP mode.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "number"
                                            },
                                            "floating_addresses": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "network"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/network/status/": {
            "get": {
                "summary": "This method lists the network status of all nodes. This API is deprecated in favor of /v2/network/interfaces/1/status/.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "number"
                                            },
                                            "node_name": {
                                                "type": "string"
                                            },
                                            "update_status": {
                                                "type": "string",
                                                "enum": [
                                                    "CHANGES_APPLIED",
                                                    "CHANGES_PENDING",
                                                    "UNAVAILABLE"
                                                ],
                                                "description": "update_status:\n * `CHANGES_APPLIED` - UPDATE_STATUS_CHANGES_APPLIED,\n * `CHANGES_PENDING` - UPDATE_STATUS_CHANGES_PENDING,\n * `UNAVAILABLE` - UPDATE_STATUS_UNAVAILABLE"
                                            },
                                            "network_status": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "number"
                                                    },
                                                    "assigned_by": {
                                                        "type": "string",
                                                        "enum": [
                                                            "DHCP",
                                                            "STATIC",
                                                            "LINK_LOCAL"
                                                        ],
                                                        "description": "How to assign IP address, either DHCP or STATIC:\n * `DHCP` - NETWORK_ASSIGNED_BY_DHCP,\n * `LINK_LOCAL` - NETWORK_ASSIGNED_BY_LINK_LOCAL,\n * `STATIC` - NETWORK_ASSIGNED_BY_STATIC"
                                                    },
                                                    "address": {
                                                        "type": "string"
                                                    },
                                                    "floating_addresses": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "netmask": {
                                                        "type": "string"
                                                    },
                                                    "gateway": {
                                                        "type": "string"
                                                    },
                                                    "gateway_ipv6": {
                                                        "type": "string"
                                                    },
                                                    "dns_servers": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "dns_search_domains": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "mtu": {
                                                        "type": "number"
                                                    },
                                                    "bonding_mode": {
                                                        "type": "string",
                                                        "enum": [
                                                            "UNSPECIFIED",
                                                            "ACTIVE_BACKUP",
                                                            "IEEE_8023AD"
                                                        ],
                                                        "description": "Ethernet bonding mode (ACTIVE_BACKUP or IEEE_8023AD):\n * `ACTIVE_BACKUP` - BONDING_MODE_ACTIVE_BACKUP,\n * `IEEE_8023AD` - BONDING_MODE_IEEE_8023AD,\n * `UNSPECIFIED` - BONDING_MODE_UNSPECIFIED"
                                                    }
                                                }
                                            },
                                            "network_details": {
                                                "type": "object",
                                                "properties": {
                                                    "speed": {
                                                        "type": "number"
                                                    },
                                                    "bytes_sent": {
                                                        "type": "string"
                                                    },
                                                    "bytes_received": {
                                                        "type": "string"
                                                    },
                                                    "cable_status": {
                                                        "type": "string",
                                                        "enum": [
                                                            "CONNECTED",
                                                            "DISCONNECTED",
                                                            "UNKNOWN"
                                                        ],
                                                        "description": "Whether network card is connected via cable.:\n * `CONNECTED` - NETWORK_CABLE_CONNECTED,\n * `DISCONNECTED` - NETWORK_CABLE_DISCONNECTED,\n * `UNKNOWN` - NETWORK_CABLE_UNKNOWN"
                                                    },
                                                    "interface_status": {
                                                        "type": "string",
                                                        "enum": [
                                                            "UP",
                                                            "DOWN",
                                                            "MISSING"
                                                        ],
                                                        "description": "Status of interface connection.:\n * `DOWN` - NETWORK_INTERFACE_DOWN,\n * `MISSING` - NETWORK_INTERFACE_MISSING,\n * `UP` - NETWORK_INTERFACE_UP"
                                                    },
                                                    "mac_address": {
                                                        "type": "string"
                                                    },
                                                    "timestamp": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "network"
                ],
                "deprecated": true,
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/network/status/{id}": {
            "get": {
                "summary": "This method retrieves the network configuration of the underlying system, including DHCP configuration, and status of any pending changes. This API is deprecated in favor of /v2/network/interfaces/1/status/{node_id}.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The unique ID of the node",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "number"
                                        },
                                        "node_name": {
                                            "type": "string"
                                        },
                                        "update_status": {
                                            "type": "string",
                                            "enum": [
                                                "CHANGES_APPLIED",
                                                "CHANGES_PENDING",
                                                "UNAVAILABLE"
                                            ],
                                            "description": "update_status:\n * `CHANGES_APPLIED` - UPDATE_STATUS_CHANGES_APPLIED,\n * `CHANGES_PENDING` - UPDATE_STATUS_CHANGES_PENDING,\n * `UNAVAILABLE` - UPDATE_STATUS_UNAVAILABLE"
                                        },
                                        "network_status": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "number"
                                                },
                                                "assigned_by": {
                                                    "type": "string",
                                                    "enum": [
                                                        "DHCP",
                                                        "STATIC",
                                                        "LINK_LOCAL"
                                                    ],
                                                    "description": "How to assign IP address, either DHCP or STATIC:\n * `DHCP` - NETWORK_ASSIGNED_BY_DHCP,\n * `LINK_LOCAL` - NETWORK_ASSIGNED_BY_LINK_LOCAL,\n * `STATIC` - NETWORK_ASSIGNED_BY_STATIC"
                                                },
                                                "address": {
                                                    "type": "string"
                                                },
                                                "floating_addresses": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "netmask": {
                                                    "type": "string"
                                                },
                                                "gateway": {
                                                    "type": "string"
                                                },
                                                "gateway_ipv6": {
                                                    "type": "string"
                                                },
                                                "dns_servers": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "dns_search_domains": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "mtu": {
                                                    "type": "number"
                                                },
                                                "bonding_mode": {
                                                    "type": "string",
                                                    "enum": [
                                                        "UNSPECIFIED",
                                                        "ACTIVE_BACKUP",
                                                        "IEEE_8023AD"
                                                    ],
                                                    "description": "Ethernet bonding mode (ACTIVE_BACKUP or IEEE_8023AD):\n * `ACTIVE_BACKUP` - BONDING_MODE_ACTIVE_BACKUP,\n * `IEEE_8023AD` - BONDING_MODE_IEEE_8023AD,\n * `UNSPECIFIED` - BONDING_MODE_UNSPECIFIED"
                                                }
                                            }
                                        },
                                        "network_details": {
                                            "type": "object",
                                            "properties": {
                                                "speed": {
                                                    "type": "number"
                                                },
                                                "bytes_sent": {
                                                    "type": "string"
                                                },
                                                "bytes_received": {
                                                    "type": "string"
                                                },
                                                "cable_status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "CONNECTED",
                                                        "DISCONNECTED",
                                                        "UNKNOWN"
                                                    ],
                                                    "description": "Whether network card is connected via cable.:\n * `CONNECTED` - NETWORK_CABLE_CONNECTED,\n * `DISCONNECTED` - NETWORK_CABLE_DISCONNECTED,\n * `UNKNOWN` - NETWORK_CABLE_UNKNOWN"
                                                },
                                                "interface_status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "UP",
                                                        "DOWN",
                                                        "MISSING"
                                                    ],
                                                    "description": "Status of interface connection.:\n * `DOWN` - NETWORK_INTERFACE_DOWN,\n * `MISSING` - NETWORK_INTERFACE_MISSING,\n * `UP` - NETWORK_INTERFACE_UP"
                                                },
                                                "mac_address": {
                                                    "type": "string"
                                                },
                                                "timestamp": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "network"
                ],
                "deprecated": true,
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v2/network/interfaces/": {
            "get": {
                "summary": "Get configurations of all interfaces for the whole cluster.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "number"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "default_gateway": {
                                                "type": "string"
                                            },
                                            "default_gateway_ipv6": {
                                                "type": "string"
                                            },
                                            "bonding_mode": {
                                                "type": "string",
                                                "enum": [
                                                    "UNSPECIFIED",
                                                    "ACTIVE_BACKUP",
                                                    "IEEE_8023AD"
                                                ],
                                                "description": "Linux bonding mode on this interface. Note that this enumeration has 2 values ACTIVE_BACKUP and IEEE_8023AD. In the future, if we support non-bonded interfaces, we probably will need to add a NOT_BONDED value.:\n * `ACTIVE_BACKUP` - BONDING_MODE_ACTIVE_BACKUP,\n * `IEEE_8023AD` - BONDING_MODE_IEEE_8023AD,\n * `UNSPECIFIED` - BONDING_MODE_UNSPECIFIED"
                                            },
                                            "mtu": {
                                                "type": "number"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "network"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v2/network/connections/": {
            "get": {
                "summary": "Return a list of NFS and SMB protocol connections to each node",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "number"
                                            },
                                            "connections": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "type": {
                                                            "type": "string",
                                                            "enum": [
                                                                "CONNECTION_TYPE_NFS",
                                                                "CONNECTION_TYPE_SMB",
                                                                "CONNECTION_TYPE_FTP"
                                                            ],
                                                            "description": "type:\n * `CONNECTION_TYPE_FTP` - CONNECTION_TYPE_FTP,\n * `CONNECTION_TYPE_NFS` - CONNECTION_TYPE_NFS,\n * `CONNECTION_TYPE_SMB` - CONNECTION_TYPE_SMB"
                                                        },
                                                        "network_address": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "network"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v2/network/interfaces/{interface_id}": {
            "get": {
                "summary": "Get configuration of an interface.",
                "parameters": [
                    {
                        "name": "interface_id",
                        "in": "path",
                        "description": "The unique ID of the network interface",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "number"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "default_gateway": {
                                            "type": "string"
                                        },
                                        "default_gateway_ipv6": {
                                            "type": "string"
                                        },
                                        "bonding_mode": {
                                            "type": "string",
                                            "enum": [
                                                "UNSPECIFIED",
                                                "ACTIVE_BACKUP",
                                                "IEEE_8023AD"
                                            ],
                                            "description": "Linux bonding mode on this interface. Note that this enumeration has 2 values ACTIVE_BACKUP and IEEE_8023AD. In the future, if we support non-bonded interfaces, we probably will need to add a NOT_BONDED value.:\n * `ACTIVE_BACKUP` - BONDING_MODE_ACTIVE_BACKUP,\n * `IEEE_8023AD` - BONDING_MODE_IEEE_8023AD,\n * `UNSPECIFIED` - BONDING_MODE_UNSPECIFIED"
                                        },
                                        "mtu": {
                                            "type": "number"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "network"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            },
            "patch": {
                "summary": "Update a subset of an interface configuration. Changes in interface MTU will be applied to the untagged STATIC network as well as the interface.",
                "parameters": [
                    {
                        "name": "interface_id",
                        "in": "path",
                        "description": "The unique ID of the network interface",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "monitor_uri": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "network"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "number"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "default_gateway": {
                                        "type": "string"
                                    },
                                    "default_gateway_ipv6": {
                                        "type": "string"
                                    },
                                    "bonding_mode": {
                                        "type": "string",
                                        "enum": [
                                            "UNSPECIFIED",
                                            "ACTIVE_BACKUP",
                                            "IEEE_8023AD"
                                        ],
                                        "description": "Linux bonding mode on this interface. Note that this enumeration has 2 values ACTIVE_BACKUP and IEEE_8023AD. In the future, if we support non-bonded interfaces, we probably will need to add a NOT_BONDED value.:\n * `ACTIVE_BACKUP` - BONDING_MODE_ACTIVE_BACKUP,\n * `IEEE_8023AD` - BONDING_MODE_IEEE_8023AD,\n * `UNSPECIFIED` - BONDING_MODE_UNSPECIFIED"
                                    },
                                    "mtu": {
                                        "type": "number"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Set configuration of an interface. Changes in interface MTU will be applied to the untagged STATIC network as well as the interface.",
                "parameters": [
                    {
                        "name": "interface_id",
                        "in": "path",
                        "description": "The unique ID of the network interface",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "monitor_uri": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "network"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "number"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "default_gateway": {
                                        "type": "string"
                                    },
                                    "default_gateway_ipv6": {
                                        "type": "string"
                                    },
                                    "bonding_mode": {
                                        "type": "string",
                                        "enum": [
                                            "UNSPECIFIED",
                                            "ACTIVE_BACKUP",
                                            "IEEE_8023AD"
                                        ],
                                        "description": "Linux bonding mode on this interface. Note that this enumeration has 2 values ACTIVE_BACKUP and IEEE_8023AD. In the future, if we support non-bonded interfaces, we probably will need to add a NOT_BONDED value.:\n * `ACTIVE_BACKUP` - BONDING_MODE_ACTIVE_BACKUP,\n * `IEEE_8023AD` - BONDING_MODE_IEEE_8023AD,\n * `UNSPECIFIED` - BONDING_MODE_UNSPECIFIED"
                                    },
                                    "mtu": {
                                        "type": "number"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/network/interfaces/{interface_id}/networks/": {
            "post": {
                "summary": "Add a network configuration to the interface. If the network being added is an untagged STATIC network, the MTU will be computed based on the interface configuration.",
                "parameters": [
                    {
                        "name": "interface_id",
                        "in": "path",
                        "description": "The unique ID of the network interface",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "monitor_uri": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "network"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "id": {
                                        "type": "number"
                                    },
                                    "assigned_by": {
                                        "type": "string",
                                        "enum": [
                                            "DHCP",
                                            "STATIC",
                                            "LINK_LOCAL"
                                        ],
                                        "description": "assigned_by:\n * `DHCP` - NETWORK_ASSIGNED_BY_DHCP,\n * `LINK_LOCAL` - NETWORK_ASSIGNED_BY_LINK_LOCAL,\n * `STATIC` - NETWORK_ASSIGNED_BY_STATIC"
                                    },
                                    "floating_ip_ranges": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "dns_servers": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "dns_search_domains": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "ip_ranges": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "netmask": {
                                        "type": "string"
                                    },
                                    "mtu": {
                                        "type": "number"
                                    },
                                    "vlan_id": {
                                        "type": "number"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Get configurations of all networks configured on an interface. This will always include at least one network, and exactly one if it is assigned by DHCP. Network 1 is created by default, but it may be removed if other networks are created viastatic assignment.",
                "parameters": [
                    {
                        "name": "interface_id",
                        "in": "path",
                        "description": "The unique ID of the network interface",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string"
                                            },
                                            "id": {
                                                "type": "number"
                                            },
                                            "assigned_by": {
                                                "type": "string",
                                                "enum": [
                                                    "DHCP",
                                                    "STATIC",
                                                    "LINK_LOCAL"
                                                ],
                                                "description": "assigned_by:\n * `DHCP` - NETWORK_ASSIGNED_BY_DHCP,\n * `LINK_LOCAL` - NETWORK_ASSIGNED_BY_LINK_LOCAL,\n * `STATIC` - NETWORK_ASSIGNED_BY_STATIC"
                                            },
                                            "floating_ip_ranges": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            },
                                            "dns_servers": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            },
                                            "dns_search_domains": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            },
                                            "ip_ranges": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            },
                                            "netmask": {
                                                "type": "string"
                                            },
                                            "mtu": {
                                                "type": "number"
                                            },
                                            "vlan_id": {
                                                "type": "number"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "network"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v2/network/interfaces/{id}/status/": {
            "get": {
                "summary": "Retrieve the network statuses of all nodes on the underlying network interface",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The unique ID of the network interface",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "node_id": {
                                                "type": "number"
                                            },
                                            "node_name": {
                                                "type": "string"
                                            },
                                            "update_status": {
                                                "type": "string",
                                                "enum": [
                                                    "CHANGES_APPLIED",
                                                    "CHANGES_PENDING",
                                                    "UNAVAILABLE"
                                                ],
                                                "description": "update_status:\n * `CHANGES_APPLIED` - UPDATE_STATUS_CHANGES_APPLIED,\n * `CHANGES_PENDING` - UPDATE_STATUS_CHANGES_PENDING,\n * `UNAVAILABLE` - UPDATE_STATUS_UNAVAILABLE"
                                            },
                                            "interface_details": {
                                                "type": "object",
                                                "properties": {
                                                    "speed": {
                                                        "type": "number"
                                                    },
                                                    "bytes_sent": {
                                                        "type": "string"
                                                    },
                                                    "bytes_received": {
                                                        "type": "string"
                                                    },
                                                    "cable_status": {
                                                        "type": "string",
                                                        "enum": [
                                                            "CONNECTED",
                                                            "DISCONNECTED",
                                                            "UNKNOWN"
                                                        ],
                                                        "description": "Whether network card is connected via cable.:\n * `CONNECTED` - NETWORK_CABLE_CONNECTED,\n * `DISCONNECTED` - NETWORK_CABLE_DISCONNECTED,\n * `UNKNOWN` - NETWORK_CABLE_UNKNOWN"
                                                    },
                                                    "interface_status": {
                                                        "type": "string",
                                                        "enum": [
                                                            "UP",
                                                            "DOWN",
                                                            "MISSING"
                                                        ],
                                                        "description": "Status of interface connection.:\n * `DOWN` - NETWORK_INTERFACE_DOWN,\n * `MISSING` - NETWORK_INTERFACE_MISSING,\n * `UP` - NETWORK_INTERFACE_UP"
                                                    },
                                                    "mac_address": {
                                                        "type": "string"
                                                    },
                                                    "timestamp": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "interface_status": {
                                                "type": "object",
                                                "properties": {
                                                    "interface_id": {
                                                        "type": "number"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "default_gateway": {
                                                        "type": "string"
                                                    },
                                                    "default_gateway_ipv6": {
                                                        "type": "string"
                                                    },
                                                    "bonding_mode": {
                                                        "type": "string",
                                                        "enum": [
                                                            "UNSPECIFIED",
                                                            "ACTIVE_BACKUP",
                                                            "IEEE_8023AD"
                                                        ],
                                                        "description": "Ethernet bonding mode (ACTIVE_BACKUP or IEEE_8023AD):\n * `ACTIVE_BACKUP` - BONDING_MODE_ACTIVE_BACKUP,\n * `IEEE_8023AD` - BONDING_MODE_IEEE_8023AD,\n * `UNSPECIFIED` - BONDING_MODE_UNSPECIFIED"
                                                    },
                                                    "mtu": {
                                                        "type": "number"
                                                    }
                                                }
                                            },
                                            "network_statuses": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string"
                                                        },
                                                        "assigned_by": {
                                                            "type": "string",
                                                            "enum": [
                                                                "DHCP",
                                                                "STATIC",
                                                                "LINK_LOCAL"
                                                            ],
                                                            "description": "How to assign IP address, either DHCP, STATIC, or LINK_LOCAL:\n * `DHCP` - NETWORK_ASSIGNED_BY_DHCP,\n * `LINK_LOCAL` - NETWORK_ASSIGNED_BY_LINK_LOCAL,\n * `STATIC` - NETWORK_ASSIGNED_BY_STATIC"
                                                        },
                                                        "address": {
                                                            "type": "string"
                                                        },
                                                        "floating_addresses": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "dns_servers": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "dns_search_domains": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "netmask": {
                                                            "type": "string"
                                                        },
                                                        "mtu": {
                                                            "type": "number"
                                                        },
                                                        "vlan_id": {
                                                            "type": "number"
                                                        }
                                                    }
                                                }
                                            },
                                            "aws_status": {
                                                "type": "object",
                                                "properties": {
                                                    "eni_id": {
                                                        "type": "string"
                                                    },
                                                    "device_number": {
                                                        "type": "number"
                                                    },
                                                    "private_ipv4_addresses": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "subnet_id": {
                                                        "type": "string"
                                                    },
                                                    "subnet_mask": {
                                                        "type": "string"
                                                    },
                                                    "vpc_id": {
                                                        "type": "string"
                                                    },
                                                    "security_groups": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            },
                                            "azure_status": {
                                                "type": "object",
                                                "properties": {
                                                    "private_ipv4_address": {
                                                        "type": "string"
                                                    },
                                                    "network": {
                                                        "type": "string"
                                                    },
                                                    "subnet_mask": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "gcp_status": {
                                                "type": "object",
                                                "properties": {
                                                    "private_ipv4_address": {
                                                        "type": "string"
                                                    },
                                                    "ip_aliases": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "network": {
                                                        "type": "string"
                                                    },
                                                    "subnet_mask": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "network"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v2/network/interfaces/{interface_id}/networks/{network_id}": {
            "get": {
                "summary": "Get configuration of a network on an interface.",
                "parameters": [
                    {
                        "name": "interface_id",
                        "in": "path",
                        "description": "The unique ID of the network interface",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "network_id",
                        "in": "path",
                        "description": "The unique ID of the virtual network",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "number"
                                        },
                                        "assigned_by": {
                                            "type": "string",
                                            "enum": [
                                                "DHCP",
                                                "STATIC",
                                                "LINK_LOCAL"
                                            ],
                                            "description": "assigned_by:\n * `DHCP` - NETWORK_ASSIGNED_BY_DHCP,\n * `LINK_LOCAL` - NETWORK_ASSIGNED_BY_LINK_LOCAL,\n * `STATIC` - NETWORK_ASSIGNED_BY_STATIC"
                                        },
                                        "floating_ip_ranges": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "dns_servers": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "dns_search_domains": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "ip_ranges": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "netmask": {
                                            "type": "string"
                                        },
                                        "mtu": {
                                            "type": "number"
                                        },
                                        "vlan_id": {
                                            "type": "number"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "network"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            },
            "patch": {
                "summary": "Update a subset of configuration of a network on an interface. MTU change will not be allowed if the network being updated is an untagged STATIC network. Please modify the interface config instead.",
                "parameters": [
                    {
                        "name": "interface_id",
                        "in": "path",
                        "description": "The unique ID of the network interface",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "network_id",
                        "in": "path",
                        "description": "The unique ID of the virtual network",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "monitor_uri": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "network"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "id": {
                                        "type": "number"
                                    },
                                    "assigned_by": {
                                        "type": "string",
                                        "enum": [
                                            "DHCP",
                                            "STATIC",
                                            "LINK_LOCAL"
                                        ],
                                        "description": "assigned_by:\n * `DHCP` - NETWORK_ASSIGNED_BY_DHCP,\n * `LINK_LOCAL` - NETWORK_ASSIGNED_BY_LINK_LOCAL,\n * `STATIC` - NETWORK_ASSIGNED_BY_STATIC"
                                    },
                                    "floating_ip_ranges": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "dns_servers": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "dns_search_domains": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "ip_ranges": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "netmask": {
                                        "type": "string"
                                    },
                                    "mtu": {
                                        "type": "number"
                                    },
                                    "vlan_id": {
                                        "type": "number"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Set configuration of a network on an interface. MTU change will not be allowed if the network being updated is an untagged STATIC network. Please modify the interface config instead.",
                "parameters": [
                    {
                        "name": "interface_id",
                        "in": "path",
                        "description": "The unique ID of the network interface",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "network_id",
                        "in": "path",
                        "description": "The unique ID of the virtual network",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "monitor_uri": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "network"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "id": {
                                        "type": "number"
                                    },
                                    "assigned_by": {
                                        "type": "string",
                                        "enum": [
                                            "DHCP",
                                            "STATIC",
                                            "LINK_LOCAL"
                                        ],
                                        "description": "assigned_by:\n * `DHCP` - NETWORK_ASSIGNED_BY_DHCP,\n * `LINK_LOCAL` - NETWORK_ASSIGNED_BY_LINK_LOCAL,\n * `STATIC` - NETWORK_ASSIGNED_BY_STATIC"
                                    },
                                    "floating_ip_ranges": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "dns_servers": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "dns_search_domains": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "ip_ranges": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "netmask": {
                                        "type": "string"
                                    },
                                    "mtu": {
                                        "type": "number"
                                    },
                                    "vlan_id": {
                                        "type": "number"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete configuration of a network on an interface.",
                "parameters": [
                    {
                        "name": "interface_id",
                        "in": "path",
                        "description": "The unique ID of the network interface",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "network_id",
                        "in": "path",
                        "description": "The unique ID of the virtual network",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "monitor_uri": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "network"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v2/network/interfaces/{interface_id}/status/{node_id}": {
            "get": {
                "summary": "Retrieve the network status of a node on the underlying network interface",
                "parameters": [
                    {
                        "name": "interface_id",
                        "in": "path",
                        "description": "The unique ID of the network interface",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "node_id",
                        "in": "path",
                        "description": "The unique ID of the node",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "node_id": {
                                            "type": "number"
                                        },
                                        "node_name": {
                                            "type": "string"
                                        },
                                        "update_status": {
                                            "type": "string",
                                            "enum": [
                                                "CHANGES_APPLIED",
                                                "CHANGES_PENDING",
                                                "UNAVAILABLE"
                                            ],
                                            "description": "update_status:\n * `CHANGES_APPLIED` - UPDATE_STATUS_CHANGES_APPLIED,\n * `CHANGES_PENDING` - UPDATE_STATUS_CHANGES_PENDING,\n * `UNAVAILABLE` - UPDATE_STATUS_UNAVAILABLE"
                                        },
                                        "interface_details": {
                                            "type": "object",
                                            "properties": {
                                                "speed": {
                                                    "type": "number"
                                                },
                                                "bytes_sent": {
                                                    "type": "string"
                                                },
                                                "bytes_received": {
                                                    "type": "string"
                                                },
                                                "cable_status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "CONNECTED",
                                                        "DISCONNECTED",
                                                        "UNKNOWN"
                                                    ],
                                                    "description": "Whether network card is connected via cable.:\n * `CONNECTED` - NETWORK_CABLE_CONNECTED,\n * `DISCONNECTED` - NETWORK_CABLE_DISCONNECTED,\n * `UNKNOWN` - NETWORK_CABLE_UNKNOWN"
                                                },
                                                "interface_status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "UP",
                                                        "DOWN",
                                                        "MISSING"
                                                    ],
                                                    "description": "Status of interface connection.:\n * `DOWN` - NETWORK_INTERFACE_DOWN,\n * `MISSING` - NETWORK_INTERFACE_MISSING,\n * `UP` - NETWORK_INTERFACE_UP"
                                                },
                                                "mac_address": {
                                                    "type": "string"
                                                },
                                                "timestamp": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "interface_status": {
                                            "type": "object",
                                            "properties": {
                                                "interface_id": {
                                                    "type": "number"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "default_gateway": {
                                                    "type": "string"
                                                },
                                                "default_gateway_ipv6": {
                                                    "type": "string"
                                                },
                                                "bonding_mode": {
                                                    "type": "string",
                                                    "enum": [
                                                        "UNSPECIFIED",
                                                        "ACTIVE_BACKUP",
                                                        "IEEE_8023AD"
                                                    ],
                                                    "description": "Ethernet bonding mode (ACTIVE_BACKUP or IEEE_8023AD):\n * `ACTIVE_BACKUP` - BONDING_MODE_ACTIVE_BACKUP,\n * `IEEE_8023AD` - BONDING_MODE_IEEE_8023AD,\n * `UNSPECIFIED` - BONDING_MODE_UNSPECIFIED"
                                                },
                                                "mtu": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "network_statuses": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "assigned_by": {
                                                        "type": "string",
                                                        "enum": [
                                                            "DHCP",
                                                            "STATIC",
                                                            "LINK_LOCAL"
                                                        ],
                                                        "description": "How to assign IP address, either DHCP, STATIC, or LINK_LOCAL:\n * `DHCP` - NETWORK_ASSIGNED_BY_DHCP,\n * `LINK_LOCAL` - NETWORK_ASSIGNED_BY_LINK_LOCAL,\n * `STATIC` - NETWORK_ASSIGNED_BY_STATIC"
                                                    },
                                                    "address": {
                                                        "type": "string"
                                                    },
                                                    "floating_addresses": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "dns_servers": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "dns_search_domains": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "netmask": {
                                                        "type": "string"
                                                    },
                                                    "mtu": {
                                                        "type": "number"
                                                    },
                                                    "vlan_id": {
                                                        "type": "number"
                                                    }
                                                }
                                            }
                                        },
                                        "aws_status": {
                                            "type": "object",
                                            "properties": {
                                                "eni_id": {
                                                    "type": "string"
                                                },
                                                "device_number": {
                                                    "type": "number"
                                                },
                                                "private_ipv4_addresses": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "subnet_id": {
                                                    "type": "string"
                                                },
                                                "subnet_mask": {
                                                    "type": "string"
                                                },
                                                "vpc_id": {
                                                    "type": "string"
                                                },
                                                "security_groups": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "azure_status": {
                                            "type": "object",
                                            "properties": {
                                                "private_ipv4_address": {
                                                    "type": "string"
                                                },
                                                "network": {
                                                    "type": "string"
                                                },
                                                "subnet_mask": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "gcp_status": {
                                            "type": "object",
                                            "properties": {
                                                "private_ipv4_address": {
                                                    "type": "string"
                                                },
                                                "ip_aliases": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "network": {
                                                    "type": "string"
                                                },
                                                "subnet_mask": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "network"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/auth/privileges/": {
            "get": {
                "summary": "Get information about all privileges.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success"
                    }
                },
                "tags": [
                    "auth"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v2/replication/source-relationships/": {
            "post": {
                "summary": "Create a new replication relationship with this cluster as the source. To begin replication, the corresponding relationship on the target cluster must be authorized using the authorize API.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "target_address": {
                                            "type": "string"
                                        },
                                        "target_port": {
                                            "type": "number"
                                        },
                                        "source_root_id": {
                                            "type": "string"
                                        },
                                        "source_root_read_only": {
                                            "type": "boolean"
                                        },
                                        "map_local_ids_to_nfs_ids": {
                                            "type": "boolean"
                                        },
                                        "replication_enabled": {
                                            "type": "boolean"
                                        },
                                        "replication_mode": {
                                            "type": "string",
                                            "enum": [
                                                "REPLICATION_CONTINUOUS",
                                                "REPLICATION_SNAPSHOT_POLICY",
                                                "REPLICATION_SNAPSHOT_POLICY_WITH_CONTINUOUS"
                                            ],
                                            "description": "Whether to replicate continuously, replicate snapshots from linked snapshot policies, or both:\n * `REPLICATION_CONTINUOUS` - REPLICATION_CONTINUOUS,\n * `REPLICATION_SNAPSHOT_POLICY` - REPLICATION_SNAPSHOT_POLICY,\n * `REPLICATION_SNAPSHOT_POLICY_WITH_CONTINUOUS` - REPLICATION_SNAPSHOT_POLICY_WITH_CONTINUOUS"
                                        },
                                        "blackout_window_timezone": {
                                            "type": "string"
                                        },
                                        "blackout_windows": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "start_hour": {
                                                        "type": "number"
                                                    },
                                                    "start_minute": {
                                                        "type": "number"
                                                    },
                                                    "end_hour": {
                                                        "type": "number"
                                                    },
                                                    "end_minute": {
                                                        "type": "number"
                                                    },
                                                    "on_days": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "enum": [
                                                                "SUN",
                                                                "MON",
                                                                "TUE",
                                                                "WED",
                                                                "THU",
                                                                "FRI",
                                                                "SAT",
                                                                "EVERY_DAY"
                                                            ],
                                                            "description": "List of days of the week on which the replication schedule applies. Choose from SUN, MON, TUE, WED, THU, FRI, and/or SAT. EVERY_DAY can be used to specify all days.:\n * `EVERY_DAY` - EVERY_DAY,\n * `FRI` - FRI,\n * `MON` - MON,\n * `SAT` - SAT,\n * `SUN` - SUN,\n * `THU` - THU,\n * `TUE` - TUE,\n * `WED` - WED"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "snapshot_policies": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "number"
                                                    },
                                                    "target_expiration": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "replication"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "target_address": {
                                        "type": "string"
                                    },
                                    "target_port": {
                                        "type": "number"
                                    },
                                    "source_root_id": {
                                        "type": "string"
                                    },
                                    "source_root_path": {
                                        "type": "string"
                                    },
                                    "source_root_read_only": {
                                        "type": "boolean"
                                    },
                                    "map_local_ids_to_nfs_ids": {
                                        "type": "boolean"
                                    },
                                    "target_root_path": {
                                        "type": "string"
                                    },
                                    "replication_enabled": {
                                        "type": "boolean"
                                    },
                                    "replication_mode": {
                                        "type": "string",
                                        "enum": [
                                            "REPLICATION_CONTINUOUS",
                                            "REPLICATION_SNAPSHOT_POLICY",
                                            "REPLICATION_SNAPSHOT_POLICY_WITH_CONTINUOUS"
                                        ],
                                        "description": "Whether to replicate continuously, replicate snapshots from linked snapshot policies, or both (defaults to continuous):\n * `REPLICATION_CONTINUOUS` - REPLICATION_CONTINUOUS,\n * `REPLICATION_SNAPSHOT_POLICY` - REPLICATION_SNAPSHOT_POLICY,\n * `REPLICATION_SNAPSHOT_POLICY_WITH_CONTINUOUS` - REPLICATION_SNAPSHOT_POLICY_WITH_CONTINUOUS"
                                    },
                                    "blackout_window_timezone": {
                                        "type": "string"
                                    },
                                    "blackout_windows": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "start_hour": {
                                                    "type": "number"
                                                },
                                                "start_minute": {
                                                    "type": "number"
                                                },
                                                "end_hour": {
                                                    "type": "number"
                                                },
                                                "end_minute": {
                                                    "type": "number"
                                                },
                                                "on_days": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "enum": [
                                                            "SUN",
                                                            "MON",
                                                            "TUE",
                                                            "WED",
                                                            "THU",
                                                            "FRI",
                                                            "SAT",
                                                            "EVERY_DAY"
                                                        ],
                                                        "description": "List of days of the week on which the replication schedule applies. Choose from SUN, MON, TUE, WED, THU, FRI, and/or SAT. EVERY_DAY can be used to specify all days.:\n * `EVERY_DAY` - EVERY_DAY,\n * `FRI` - FRI,\n * `MON` - MON,\n * `SAT` - SAT,\n * `SUN` - SUN,\n * `THU` - THU,\n * `TUE` - TUE,\n * `WED` - WED"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "snapshot_policies": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "number"
                                                },
                                                "target_expiration": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "List existing replication relationships where this cluster is the source.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "target_address": {
                                                "type": "string"
                                            },
                                            "target_port": {
                                                "type": "number"
                                            },
                                            "source_root_id": {
                                                "type": "string"
                                            },
                                            "source_root_read_only": {
                                                "type": "boolean"
                                            },
                                            "map_local_ids_to_nfs_ids": {
                                                "type": "boolean"
                                            },
                                            "replication_enabled": {
                                                "type": "boolean"
                                            },
                                            "replication_mode": {
                                                "type": "string",
                                                "enum": [
                                                    "REPLICATION_CONTINUOUS",
                                                    "REPLICATION_SNAPSHOT_POLICY",
                                                    "REPLICATION_SNAPSHOT_POLICY_WITH_CONTINUOUS"
                                                ],
                                                "description": "Whether to replicate continuously, replicate snapshots from linked snapshot policies, or both:\n * `REPLICATION_CONTINUOUS` - REPLICATION_CONTINUOUS,\n * `REPLICATION_SNAPSHOT_POLICY` - REPLICATION_SNAPSHOT_POLICY,\n * `REPLICATION_SNAPSHOT_POLICY_WITH_CONTINUOUS` - REPLICATION_SNAPSHOT_POLICY_WITH_CONTINUOUS"
                                            },
                                            "blackout_window_timezone": {
                                                "type": "string"
                                            },
                                            "blackout_windows": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "start_hour": {
                                                            "type": "number"
                                                        },
                                                        "start_minute": {
                                                            "type": "number"
                                                        },
                                                        "end_hour": {
                                                            "type": "number"
                                                        },
                                                        "end_minute": {
                                                            "type": "number"
                                                        },
                                                        "on_days": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "SUN",
                                                                    "MON",
                                                                    "TUE",
                                                                    "WED",
                                                                    "THU",
                                                                    "FRI",
                                                                    "SAT",
                                                                    "EVERY_DAY"
                                                                ],
                                                                "description": "List of days of the week on which the replication schedule applies. Choose from SUN, MON, TUE, WED, THU, FRI, and/or SAT. EVERY_DAY can be used to specify all days.:\n * `EVERY_DAY` - EVERY_DAY,\n * `FRI` - FRI,\n * `MON` - MON,\n * `SAT` - SAT,\n * `SUN` - SUN,\n * `THU` - THU,\n * `TUE` - TUE,\n * `WED` - WED"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "snapshot_policies": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "number"
                                                        },
                                                        "target_expiration": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "replication"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v2/replication/source-relationships/status/": {
            "get": {
                "summary": "List statuses for all existing replication relationships where this cluster is the source.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "target_address": {
                                                "type": "string"
                                            },
                                            "target_port": {
                                                "type": "number"
                                            },
                                            "source_root_read_only": {
                                                "type": "boolean"
                                            },
                                            "map_local_ids_to_nfs_ids": {
                                                "type": "boolean"
                                            },
                                            "replication_enabled": {
                                                "type": "boolean"
                                            },
                                            "replication_mode": {
                                                "type": "string",
                                                "enum": [
                                                    "REPLICATION_CONTINUOUS",
                                                    "REPLICATION_SNAPSHOT_POLICY",
                                                    "REPLICATION_SNAPSHOT_POLICY_WITH_CONTINUOUS"
                                                ],
                                                "description": "Whether to replicate continuously, replicate snapshots from linked snapshot policies, or both:\n * `REPLICATION_CONTINUOUS` - REPLICATION_CONTINUOUS,\n * `REPLICATION_SNAPSHOT_POLICY` - REPLICATION_SNAPSHOT_POLICY,\n * `REPLICATION_SNAPSHOT_POLICY_WITH_CONTINUOUS` - REPLICATION_SNAPSHOT_POLICY_WITH_CONTINUOUS"
                                            },
                                            "blackout_window_timezone": {
                                                "type": "string"
                                            },
                                            "blackout_windows": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "start_hour": {
                                                            "type": "number"
                                                        },
                                                        "start_minute": {
                                                            "type": "number"
                                                        },
                                                        "end_hour": {
                                                            "type": "number"
                                                        },
                                                        "end_minute": {
                                                            "type": "number"
                                                        },
                                                        "on_days": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "SUN",
                                                                    "MON",
                                                                    "TUE",
                                                                    "WED",
                                                                    "THU",
                                                                    "FRI",
                                                                    "SAT",
                                                                    "EVERY_DAY"
                                                                ],
                                                                "description": "List of days of the week on which the replication schedule applies. Choose from SUN, MON, TUE, WED, THU, FRI, and/or SAT. EVERY_DAY can be used to specify all days.:\n * `EVERY_DAY` - EVERY_DAY,\n * `FRI` - FRI,\n * `MON` - MON,\n * `SAT` - SAT,\n * `SUN` - SUN,\n * `THU` - THU,\n * `TUE` - TUE,\n * `WED` - WED"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "snapshot_policies": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "number"
                                                        },
                                                        "target_expiration": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            },
                                            "state": {
                                                "type": "string",
                                                "enum": [
                                                    "AWAITING_AUTHORIZATION",
                                                    "DISCONNECTED",
                                                    "DISCONNECTING",
                                                    "ENDED",
                                                    "ESTABLISHED",
                                                    "RECONNECTING",
                                                    "REESTABLISHING"
                                                ],
                                                "description": "Current state of replication relationship:\n * `AWAITING_AUTHORIZATION` - AWAITING_AUTHORIZATION,\n * `DISCONNECTED` - DISCONNECTED,\n * `DISCONNECTING` - DISCONNECTING,\n * `ENDED` - ENDED,\n * `ESTABLISHED` - ESTABLISHED,\n * `RECONNECTING` - RECONNECTING,\n * `REESTABLISHING` - REESTABLISHING"
                                            },
                                            "end_reason": {
                                                "type": "string"
                                            },
                                            "source_cluster_name": {
                                                "type": "string"
                                            },
                                            "source_cluster_uuid": {
                                                "type": "string"
                                            },
                                            "source_root_path": {
                                                "type": "string"
                                            },
                                            "target_cluster_name": {
                                                "type": "string"
                                            },
                                            "target_cluster_uuid": {
                                                "type": "string"
                                            },
                                            "target_root_path": {
                                                "type": "string"
                                            },
                                            "target_root_read_only": {
                                                "type": "boolean"
                                            },
                                            "job_state": {
                                                "type": "string",
                                                "enum": [
                                                    "REPLICATION_NOT_RUNNING",
                                                    "REPLICATION_RUNNING"
                                                ],
                                                "description": "Current state of the job:\n * `REPLICATION_NOT_RUNNING` - REPLICATION_NOT_RUNNING,\n * `REPLICATION_RUNNING` - REPLICATION_RUNNING"
                                            },
                                            "job_start_time": {
                                                "type": "string"
                                            },
                                            "recovery_point": {
                                                "type": "string"
                                            },
                                            "error_from_last_job": {
                                                "type": "string"
                                            },
                                            "duration_of_last_job": {
                                                "type": "object",
                                                "properties": {
                                                    "nanoseconds": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "authentication_key": {
                                                "type": "string"
                                            },
                                            "source_root_id": {
                                                "type": "string"
                                            },
                                            "next_active_time": {
                                                "type": "string"
                                            },
                                            "replication_job_status": {
                                                "type": "object",
                                                "properties": {
                                                    "percent_complete": {
                                                        "type": "number"
                                                    },
                                                    "estimated_seconds_remaining": {
                                                        "type": "string"
                                                    },
                                                    "bytes_transferred": {
                                                        "type": "string"
                                                    },
                                                    "bytes_unchanged": {
                                                        "type": "string"
                                                    },
                                                    "bytes_remaining": {
                                                        "type": "string"
                                                    },
                                                    "bytes_deleted": {
                                                        "type": "string"
                                                    },
                                                    "bytes_total": {
                                                        "type": "string"
                                                    },
                                                    "files_transferred": {
                                                        "type": "string"
                                                    },
                                                    "files_unchanged": {
                                                        "type": "string"
                                                    },
                                                    "files_remaining": {
                                                        "type": "string"
                                                    },
                                                    "files_deleted": {
                                                        "type": "string"
                                                    },
                                                    "files_total": {
                                                        "type": "string"
                                                    },
                                                    "throughput_overall": {
                                                        "type": "string"
                                                    },
                                                    "throughput_current": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "queued_snapshot_count": {
                                                "type": "number"
                                            },
                                            "recovery_point_snapshot": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "number"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "timestamp": {
                                                        "type": "string"
                                                    },
                                                    "directory_name": {
                                                        "type": "string"
                                                    },
                                                    "source_file_id": {
                                                        "type": "string"
                                                    },
                                                    "created_by_policy": {
                                                        "type": "boolean"
                                                    },
                                                    "expiration": {
                                                        "type": "string"
                                                    },
                                                    "in_delete": {
                                                        "type": "boolean"
                                                    }
                                                }
                                            },
                                            "replicating_snapshot": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "number"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "timestamp": {
                                                        "type": "string"
                                                    },
                                                    "directory_name": {
                                                        "type": "string"
                                                    },
                                                    "source_file_id": {
                                                        "type": "string"
                                                    },
                                                    "created_by_policy": {
                                                        "type": "boolean"
                                                    },
                                                    "expiration": {
                                                        "type": "string"
                                                    },
                                                    "in_delete": {
                                                        "type": "boolean"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "replication"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v2/replication/source-relationships/reverse-target-relationship": {
            "post": {
                "summary": "Reverse source and target for the specified replication relationship. This operation is initiated on the target cluster. The previous target directory will be made the new source, and the previous source directory will be made the new target. Any relationship configurations on the source will be retained, and any configurations on the target that have been retained from a previous reversal will be reapplied. To resume replication after reversal, edit any relationship configurations if desired and reconnect the relationship from the new target cluster.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "target_address": {
                                            "type": "string"
                                        },
                                        "target_port": {
                                            "type": "number"
                                        },
                                        "source_root_id": {
                                            "type": "string"
                                        },
                                        "source_root_read_only": {
                                            "type": "boolean"
                                        },
                                        "map_local_ids_to_nfs_ids": {
                                            "type": "boolean"
                                        },
                                        "replication_enabled": {
                                            "type": "boolean"
                                        },
                                        "replication_mode": {
                                            "type": "string",
                                            "enum": [
                                                "REPLICATION_CONTINUOUS",
                                                "REPLICATION_SNAPSHOT_POLICY",
                                                "REPLICATION_SNAPSHOT_POLICY_WITH_CONTINUOUS"
                                            ],
                                            "description": "Whether to replicate continuously, replicate snapshots from linked snapshot policies, or both:\n * `REPLICATION_CONTINUOUS` - REPLICATION_CONTINUOUS,\n * `REPLICATION_SNAPSHOT_POLICY` - REPLICATION_SNAPSHOT_POLICY,\n * `REPLICATION_SNAPSHOT_POLICY_WITH_CONTINUOUS` - REPLICATION_SNAPSHOT_POLICY_WITH_CONTINUOUS"
                                        },
                                        "blackout_window_timezone": {
                                            "type": "string"
                                        },
                                        "blackout_windows": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "start_hour": {
                                                        "type": "number"
                                                    },
                                                    "start_minute": {
                                                        "type": "number"
                                                    },
                                                    "end_hour": {
                                                        "type": "number"
                                                    },
                                                    "end_minute": {
                                                        "type": "number"
                                                    },
                                                    "on_days": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "enum": [
                                                                "SUN",
                                                                "MON",
                                                                "TUE",
                                                                "WED",
                                                                "THU",
                                                                "FRI",
                                                                "SAT",
                                                                "EVERY_DAY"
                                                            ],
                                                            "description": "List of days of the week on which the replication schedule applies. Choose from SUN, MON, TUE, WED, THU, FRI, and/or SAT. EVERY_DAY can be used to specify all days.:\n * `EVERY_DAY` - EVERY_DAY,\n * `FRI` - FRI,\n * `MON` - MON,\n * `SAT` - SAT,\n * `SUN` - SUN,\n * `THU` - THU,\n * `TUE` - TUE,\n * `WED` - WED"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "snapshot_policies": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "number"
                                                    },
                                                    "target_expiration": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "replication"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "target_relationship_id": {
                                        "type": "string"
                                    },
                                    "source_address": {
                                        "type": "string"
                                    },
                                    "source_port": {
                                        "type": "number"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/replication/target-relationships/status/": {
            "get": {
                "summary": "List statuses for all existing replication relationships where this cluster is the target.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "state": {
                                                "type": "string",
                                                "enum": [
                                                    "AWAITING_AUTHORIZATION",
                                                    "DISCONNECTED",
                                                    "DISCONNECTING",
                                                    "ENDED",
                                                    "ESTABLISHED",
                                                    "RECONNECTING",
                                                    "REESTABLISHING"
                                                ],
                                                "description": "Current state of replication relationship:\n * `AWAITING_AUTHORIZATION` - AWAITING_AUTHORIZATION,\n * `DISCONNECTED` - DISCONNECTED,\n * `DISCONNECTING` - DISCONNECTING,\n * `ENDED` - ENDED,\n * `ESTABLISHED` - ESTABLISHED,\n * `RECONNECTING` - RECONNECTING,\n * `REESTABLISHING` - REESTABLISHING"
                                            },
                                            "end_reason": {
                                                "type": "string"
                                            },
                                            "source_cluster_name": {
                                                "type": "string"
                                            },
                                            "source_cluster_uuid": {
                                                "type": "string"
                                            },
                                            "source_root_path": {
                                                "type": "string"
                                            },
                                            "source_root_read_only": {
                                                "type": "boolean"
                                            },
                                            "source_address": {
                                                "type": "string"
                                            },
                                            "source_port": {
                                                "type": "number"
                                            },
                                            "target_cluster_name": {
                                                "type": "string"
                                            },
                                            "target_cluster_uuid": {
                                                "type": "string"
                                            },
                                            "target_root_path": {
                                                "type": "string"
                                            },
                                            "target_root_read_only": {
                                                "type": "boolean"
                                            },
                                            "job_state": {
                                                "type": "string",
                                                "enum": [
                                                    "REPLICATION_NOT_RUNNING",
                                                    "REPLICATION_RUNNING"
                                                ],
                                                "description": "Current state of the job:\n * `REPLICATION_NOT_RUNNING` - REPLICATION_NOT_RUNNING,\n * `REPLICATION_RUNNING` - REPLICATION_RUNNING"
                                            },
                                            "job_start_time": {
                                                "type": "string"
                                            },
                                            "recovery_point": {
                                                "type": "string"
                                            },
                                            "error_from_last_job": {
                                                "type": "string"
                                            },
                                            "duration_of_last_job": {
                                                "type": "object",
                                                "properties": {
                                                    "nanoseconds": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "target_root_id": {
                                                "type": "string"
                                            },
                                            "replication_enabled": {
                                                "type": "boolean"
                                            },
                                            "replication_job_status": {
                                                "type": "object",
                                                "properties": {
                                                    "percent_complete": {
                                                        "type": "number"
                                                    },
                                                    "estimated_seconds_remaining": {
                                                        "type": "string"
                                                    },
                                                    "bytes_transferred": {
                                                        "type": "string"
                                                    },
                                                    "bytes_unchanged": {
                                                        "type": "string"
                                                    },
                                                    "bytes_remaining": {
                                                        "type": "string"
                                                    },
                                                    "bytes_deleted": {
                                                        "type": "string"
                                                    },
                                                    "bytes_total": {
                                                        "type": "string"
                                                    },
                                                    "files_transferred": {
                                                        "type": "string"
                                                    },
                                                    "files_unchanged": {
                                                        "type": "string"
                                                    },
                                                    "files_remaining": {
                                                        "type": "string"
                                                    },
                                                    "files_deleted": {
                                                        "type": "string"
                                                    },
                                                    "files_total": {
                                                        "type": "string"
                                                    },
                                                    "throughput_overall": {
                                                        "type": "string"
                                                    },
                                                    "throughput_current": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "recovery_point_snapshot": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "number"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "timestamp": {
                                                        "type": "string"
                                                    },
                                                    "directory_name": {
                                                        "type": "string"
                                                    },
                                                    "source_file_id": {
                                                        "type": "string"
                                                    },
                                                    "created_by_policy": {
                                                        "type": "boolean"
                                                    },
                                                    "expiration": {
                                                        "type": "string"
                                                    },
                                                    "in_delete": {
                                                        "type": "boolean"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "replication"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v2/replication/source-relationships/{id}": {
            "get": {
                "summary": "Get information about the specified replication relationship where this cluster is the source.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Relationship identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "target_address": {
                                            "type": "string"
                                        },
                                        "target_port": {
                                            "type": "number"
                                        },
                                        "source_root_id": {
                                            "type": "string"
                                        },
                                        "source_root_read_only": {
                                            "type": "boolean"
                                        },
                                        "map_local_ids_to_nfs_ids": {
                                            "type": "boolean"
                                        },
                                        "replication_enabled": {
                                            "type": "boolean"
                                        },
                                        "replication_mode": {
                                            "type": "string",
                                            "enum": [
                                                "REPLICATION_CONTINUOUS",
                                                "REPLICATION_SNAPSHOT_POLICY",
                                                "REPLICATION_SNAPSHOT_POLICY_WITH_CONTINUOUS"
                                            ],
                                            "description": "Whether to replicate continuously, replicate snapshots from linked snapshot policies, or both:\n * `REPLICATION_CONTINUOUS` - REPLICATION_CONTINUOUS,\n * `REPLICATION_SNAPSHOT_POLICY` - REPLICATION_SNAPSHOT_POLICY,\n * `REPLICATION_SNAPSHOT_POLICY_WITH_CONTINUOUS` - REPLICATION_SNAPSHOT_POLICY_WITH_CONTINUOUS"
                                        },
                                        "blackout_window_timezone": {
                                            "type": "string"
                                        },
                                        "blackout_windows": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "start_hour": {
                                                        "type": "number"
                                                    },
                                                    "start_minute": {
                                                        "type": "number"
                                                    },
                                                    "end_hour": {
                                                        "type": "number"
                                                    },
                                                    "end_minute": {
                                                        "type": "number"
                                                    },
                                                    "on_days": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "enum": [
                                                                "SUN",
                                                                "MON",
                                                                "TUE",
                                                                "WED",
                                                                "THU",
                                                                "FRI",
                                                                "SAT",
                                                                "EVERY_DAY"
                                                            ],
                                                            "description": "List of days of the week on which the replication schedule applies. Choose from SUN, MON, TUE, WED, THU, FRI, and/or SAT. EVERY_DAY can be used to specify all days.:\n * `EVERY_DAY` - EVERY_DAY,\n * `FRI` - FRI,\n * `MON` - MON,\n * `SAT` - SAT,\n * `SUN` - SUN,\n * `THU` - THU,\n * `TUE` - TUE,\n * `WED` - WED"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "snapshot_policies": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "number"
                                                    },
                                                    "target_expiration": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "replication"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            },
            "put": {
                "summary": "Modify an existing replication relationship where this cluster is the source.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Relationship identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "target_address": {
                                            "type": "string"
                                        },
                                        "target_port": {
                                            "type": "number"
                                        },
                                        "source_root_id": {
                                            "type": "string"
                                        },
                                        "source_root_read_only": {
                                            "type": "boolean"
                                        },
                                        "map_local_ids_to_nfs_ids": {
                                            "type": "boolean"
                                        },
                                        "replication_enabled": {
                                            "type": "boolean"
                                        },
                                        "replication_mode": {
                                            "type": "string",
                                            "enum": [
                                                "REPLICATION_CONTINUOUS",
                                                "REPLICATION_SNAPSHOT_POLICY",
                                                "REPLICATION_SNAPSHOT_POLICY_WITH_CONTINUOUS"
                                            ],
                                            "description": "Whether to replicate continuously, replicate snapshots from linked snapshot policies, or both:\n * `REPLICATION_CONTINUOUS` - REPLICATION_CONTINUOUS,\n * `REPLICATION_SNAPSHOT_POLICY` - REPLICATION_SNAPSHOT_POLICY,\n * `REPLICATION_SNAPSHOT_POLICY_WITH_CONTINUOUS` - REPLICATION_SNAPSHOT_POLICY_WITH_CONTINUOUS"
                                        },
                                        "blackout_window_timezone": {
                                            "type": "string"
                                        },
                                        "blackout_windows": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "start_hour": {
                                                        "type": "number"
                                                    },
                                                    "start_minute": {
                                                        "type": "number"
                                                    },
                                                    "end_hour": {
                                                        "type": "number"
                                                    },
                                                    "end_minute": {
                                                        "type": "number"
                                                    },
                                                    "on_days": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "enum": [
                                                                "SUN",
                                                                "MON",
                                                                "TUE",
                                                                "WED",
                                                                "THU",
                                                                "FRI",
                                                                "SAT",
                                                                "EVERY_DAY"
                                                            ],
                                                            "description": "List of days of the week on which the replication schedule applies. Choose from SUN, MON, TUE, WED, THU, FRI, and/or SAT. EVERY_DAY can be used to specify all days.:\n * `EVERY_DAY` - EVERY_DAY,\n * `FRI` - FRI,\n * `MON` - MON,\n * `SAT` - SAT,\n * `SUN` - SUN,\n * `THU` - THU,\n * `TUE` - TUE,\n * `WED` - WED"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "snapshot_policies": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "number"
                                                    },
                                                    "target_expiration": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "replication"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string"
                                    },
                                    "target_address": {
                                        "type": "string"
                                    },
                                    "target_port": {
                                        "type": "number"
                                    },
                                    "source_root_id": {
                                        "type": "string"
                                    },
                                    "source_root_read_only": {
                                        "type": "boolean"
                                    },
                                    "map_local_ids_to_nfs_ids": {
                                        "type": "boolean"
                                    },
                                    "replication_enabled": {
                                        "type": "boolean"
                                    },
                                    "replication_mode": {
                                        "type": "string",
                                        "enum": [
                                            "REPLICATION_CONTINUOUS",
                                            "REPLICATION_SNAPSHOT_POLICY",
                                            "REPLICATION_SNAPSHOT_POLICY_WITH_CONTINUOUS"
                                        ],
                                        "description": "Whether to replicate continuously, replicate snapshots from linked snapshot policies, or both:\n * `REPLICATION_CONTINUOUS` - REPLICATION_CONTINUOUS,\n * `REPLICATION_SNAPSHOT_POLICY` - REPLICATION_SNAPSHOT_POLICY,\n * `REPLICATION_SNAPSHOT_POLICY_WITH_CONTINUOUS` - REPLICATION_SNAPSHOT_POLICY_WITH_CONTINUOUS"
                                    },
                                    "blackout_window_timezone": {
                                        "type": "string"
                                    },
                                    "blackout_windows": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "start_hour": {
                                                    "type": "number"
                                                },
                                                "start_minute": {
                                                    "type": "number"
                                                },
                                                "end_hour": {
                                                    "type": "number"
                                                },
                                                "end_minute": {
                                                    "type": "number"
                                                },
                                                "on_days": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "enum": [
                                                            "SUN",
                                                            "MON",
                                                            "TUE",
                                                            "WED",
                                                            "THU",
                                                            "FRI",
                                                            "SAT",
                                                            "EVERY_DAY"
                                                        ],
                                                        "description": "List of days of the week on which the replication schedule applies. Choose from SUN, MON, TUE, WED, THU, FRI, and/or SAT. EVERY_DAY can be used to specify all days.:\n * `EVERY_DAY` - EVERY_DAY,\n * `FRI` - FRI,\n * `MON` - MON,\n * `SAT` - SAT,\n * `SUN` - SUN,\n * `THU` - THU,\n * `TUE` - TUE,\n * `WED` - WED"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "snapshot_policies": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "number"
                                                },
                                                "target_expiration": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Modify a subset of fields of an existing replication relationship where this cluster is the source.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Relationship identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "target_address": {
                                            "type": "string"
                                        },
                                        "target_port": {
                                            "type": "number"
                                        },
                                        "source_root_id": {
                                            "type": "string"
                                        },
                                        "source_root_read_only": {
                                            "type": "boolean"
                                        },
                                        "map_local_ids_to_nfs_ids": {
                                            "type": "boolean"
                                        },
                                        "replication_enabled": {
                                            "type": "boolean"
                                        },
                                        "replication_mode": {
                                            "type": "string",
                                            "enum": [
                                                "REPLICATION_CONTINUOUS",
                                                "REPLICATION_SNAPSHOT_POLICY",
                                                "REPLICATION_SNAPSHOT_POLICY_WITH_CONTINUOUS"
                                            ],
                                            "description": "Whether to replicate continuously, replicate snapshots from linked snapshot policies, or both:\n * `REPLICATION_CONTINUOUS` - REPLICATION_CONTINUOUS,\n * `REPLICATION_SNAPSHOT_POLICY` - REPLICATION_SNAPSHOT_POLICY,\n * `REPLICATION_SNAPSHOT_POLICY_WITH_CONTINUOUS` - REPLICATION_SNAPSHOT_POLICY_WITH_CONTINUOUS"
                                        },
                                        "blackout_window_timezone": {
                                            "type": "string"
                                        },
                                        "blackout_windows": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "start_hour": {
                                                        "type": "number"
                                                    },
                                                    "start_minute": {
                                                        "type": "number"
                                                    },
                                                    "end_hour": {
                                                        "type": "number"
                                                    },
                                                    "end_minute": {
                                                        "type": "number"
                                                    },
                                                    "on_days": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "enum": [
                                                                "SUN",
                                                                "MON",
                                                                "TUE",
                                                                "WED",
                                                                "THU",
                                                                "FRI",
                                                                "SAT",
                                                                "EVERY_DAY"
                                                            ],
                                                            "description": "List of days of the week on which the replication schedule applies. Choose from SUN, MON, TUE, WED, THU, FRI, and/or SAT. EVERY_DAY can be used to specify all days.:\n * `EVERY_DAY` - EVERY_DAY,\n * `FRI` - FRI,\n * `MON` - MON,\n * `SAT` - SAT,\n * `SUN` - SUN,\n * `THU` - THU,\n * `TUE` - TUE,\n * `WED` - WED"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "snapshot_policies": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "number"
                                                    },
                                                    "target_expiration": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "replication"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string"
                                    },
                                    "target_address": {
                                        "type": "string"
                                    },
                                    "target_port": {
                                        "type": "number"
                                    },
                                    "source_root_id": {
                                        "type": "string"
                                    },
                                    "source_root_read_only": {
                                        "type": "boolean"
                                    },
                                    "map_local_ids_to_nfs_ids": {
                                        "type": "boolean"
                                    },
                                    "replication_enabled": {
                                        "type": "boolean"
                                    },
                                    "replication_mode": {
                                        "type": "string",
                                        "enum": [
                                            "REPLICATION_CONTINUOUS",
                                            "REPLICATION_SNAPSHOT_POLICY",
                                            "REPLICATION_SNAPSHOT_POLICY_WITH_CONTINUOUS"
                                        ],
                                        "description": "Whether to replicate continuously, replicate snapshots from linked snapshot policies, or both:\n * `REPLICATION_CONTINUOUS` - REPLICATION_CONTINUOUS,\n * `REPLICATION_SNAPSHOT_POLICY` - REPLICATION_SNAPSHOT_POLICY,\n * `REPLICATION_SNAPSHOT_POLICY_WITH_CONTINUOUS` - REPLICATION_SNAPSHOT_POLICY_WITH_CONTINUOUS"
                                    },
                                    "blackout_window_timezone": {
                                        "type": "string"
                                    },
                                    "blackout_windows": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "start_hour": {
                                                    "type": "number"
                                                },
                                                "start_minute": {
                                                    "type": "number"
                                                },
                                                "end_hour": {
                                                    "type": "number"
                                                },
                                                "end_minute": {
                                                    "type": "number"
                                                },
                                                "on_days": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "enum": [
                                                            "SUN",
                                                            "MON",
                                                            "TUE",
                                                            "WED",
                                                            "THU",
                                                            "FRI",
                                                            "SAT",
                                                            "EVERY_DAY"
                                                        ],
                                                        "description": "List of days of the week on which the replication schedule applies. Choose from SUN, MON, TUE, WED, THU, FRI, and/or SAT. EVERY_DAY can be used to specify all days.:\n * `EVERY_DAY` - EVERY_DAY,\n * `FRI` - FRI,\n * `MON` - MON,\n * `SAT` - SAT,\n * `SUN` - SUN,\n * `THU` - THU,\n * `TUE` - TUE,\n * `WED` - WED"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "snapshot_policies": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "number"
                                                },
                                                "target_expiration": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete the specified replication relationship where this cluster is the source.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Relationship identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success"
                    }
                },
                "tags": [
                    "replication"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v2/replication/source-relationships/{id}/abort-replication": {
            "post": {
                "summary": "Abort any ongoing replication work for the specified replication relationship where this cluster is the source.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Relationship identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "skip-active-policy-snapshot",
                        "in": "query",
                        "description": "If set to true and the currently replicating snapshot was created by a policy, the next replication job will use the next queued snapshot instead of retrying the current one. Defaults to false if not specified.",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success"
                    }
                },
                "tags": [
                    "replication"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v2/replication/source-relationships/{id}/dismiss-error": {
            "post": {
                "summary": "Clear the error associated with this source relationship's last replication attempt, if one exists.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Relationship identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success"
                    }
                },
                "tags": [
                    "replication"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v2/replication/source-relationships/{id}/queued-snapshots/": {
            "get": {
                "summary": "List information for all snapshots awaiting replication by the specified relationship.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Relationship identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "entries": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "number"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "timestamp": {
                                                        "type": "string"
                                                    },
                                                    "directory_name": {
                                                        "type": "string"
                                                    },
                                                    "source_file_id": {
                                                        "type": "string"
                                                    },
                                                    "created_by_policy": {
                                                        "type": "boolean"
                                                    },
                                                    "in_delete": {
                                                        "type": "boolean"
                                                    },
                                                    "expiration": {
                                                        "type": "string"
                                                    },
                                                    "target_expiration": {
                                                        "type": "string"
                                                    },
                                                    "policy_id": {
                                                        "type": "number"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "replication"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v2/replication/source-relationships/{id}/replicate": {
            "post": {
                "summary": "Replicate from the source to the target of the specified replication relationship where this cluster is the source.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Relationship identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "monitor_uri": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "replication"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v2/replication/source-relationships/{id}/status": {
            "get": {
                "summary": "Get current status of the specified replication relationship where this cluster is the source.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Relationship identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "target_address": {
                                            "type": "string"
                                        },
                                        "target_port": {
                                            "type": "number"
                                        },
                                        "source_root_read_only": {
                                            "type": "boolean"
                                        },
                                        "map_local_ids_to_nfs_ids": {
                                            "type": "boolean"
                                        },
                                        "replication_enabled": {
                                            "type": "boolean"
                                        },
                                        "replication_mode": {
                                            "type": "string",
                                            "enum": [
                                                "REPLICATION_CONTINUOUS",
                                                "REPLICATION_SNAPSHOT_POLICY",
                                                "REPLICATION_SNAPSHOT_POLICY_WITH_CONTINUOUS"
                                            ],
                                            "description": "Whether to replicate continuously, replicate snapshots from linked snapshot policies, or both:\n * `REPLICATION_CONTINUOUS` - REPLICATION_CONTINUOUS,\n * `REPLICATION_SNAPSHOT_POLICY` - REPLICATION_SNAPSHOT_POLICY,\n * `REPLICATION_SNAPSHOT_POLICY_WITH_CONTINUOUS` - REPLICATION_SNAPSHOT_POLICY_WITH_CONTINUOUS"
                                        },
                                        "blackout_window_timezone": {
                                            "type": "string"
                                        },
                                        "blackout_windows": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "start_hour": {
                                                        "type": "number"
                                                    },
                                                    "start_minute": {
                                                        "type": "number"
                                                    },
                                                    "end_hour": {
                                                        "type": "number"
                                                    },
                                                    "end_minute": {
                                                        "type": "number"
                                                    },
                                                    "on_days": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "enum": [
                                                                "SUN",
                                                                "MON",
                                                                "TUE",
                                                                "WED",
                                                                "THU",
                                                                "FRI",
                                                                "SAT",
                                                                "EVERY_DAY"
                                                            ],
                                                            "description": "List of days of the week on which the replication schedule applies. Choose from SUN, MON, TUE, WED, THU, FRI, and/or SAT. EVERY_DAY can be used to specify all days.:\n * `EVERY_DAY` - EVERY_DAY,\n * `FRI` - FRI,\n * `MON` - MON,\n * `SAT` - SAT,\n * `SUN` - SUN,\n * `THU` - THU,\n * `TUE` - TUE,\n * `WED` - WED"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "snapshot_policies": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "number"
                                                    },
                                                    "target_expiration": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "state": {
                                            "type": "string",
                                            "enum": [
                                                "AWAITING_AUTHORIZATION",
                                                "DISCONNECTED",
                                                "DISCONNECTING",
                                                "ENDED",
                                                "ESTABLISHED",
                                                "RECONNECTING",
                                                "REESTABLISHING"
                                            ],
                                            "description": "Current state of replication relationship:\n * `AWAITING_AUTHORIZATION` - AWAITING_AUTHORIZATION,\n * `DISCONNECTED` - DISCONNECTED,\n * `DISCONNECTING` - DISCONNECTING,\n * `ENDED` - ENDED,\n * `ESTABLISHED` - ESTABLISHED,\n * `RECONNECTING` - RECONNECTING,\n * `REESTABLISHING` - REESTABLISHING"
                                        },
                                        "end_reason": {
                                            "type": "string"
                                        },
                                        "source_cluster_name": {
                                            "type": "string"
                                        },
                                        "source_cluster_uuid": {
                                            "type": "string"
                                        },
                                        "source_root_path": {
                                            "type": "string"
                                        },
                                        "target_cluster_name": {
                                            "type": "string"
                                        },
                                        "target_cluster_uuid": {
                                            "type": "string"
                                        },
                                        "target_root_path": {
                                            "type": "string"
                                        },
                                        "target_root_read_only": {
                                            "type": "boolean"
                                        },
                                        "job_state": {
                                            "type": "string",
                                            "enum": [
                                                "REPLICATION_NOT_RUNNING",
                                                "REPLICATION_RUNNING"
                                            ],
                                            "description": "Current state of the job:\n * `REPLICATION_NOT_RUNNING` - REPLICATION_NOT_RUNNING,\n * `REPLICATION_RUNNING` - REPLICATION_RUNNING"
                                        },
                                        "job_start_time": {
                                            "type": "string"
                                        },
                                        "recovery_point": {
                                            "type": "string"
                                        },
                                        "error_from_last_job": {
                                            "type": "string"
                                        },
                                        "duration_of_last_job": {
                                            "type": "object",
                                            "properties": {
                                                "nanoseconds": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "authentication_key": {
                                            "type": "string"
                                        },
                                        "source_root_id": {
                                            "type": "string"
                                        },
                                        "next_active_time": {
                                            "type": "string"
                                        },
                                        "replication_job_status": {
                                            "type": "object",
                                            "properties": {
                                                "percent_complete": {
                                                    "type": "number"
                                                },
                                                "estimated_seconds_remaining": {
                                                    "type": "string"
                                                },
                                                "bytes_transferred": {
                                                    "type": "string"
                                                },
                                                "bytes_unchanged": {
                                                    "type": "string"
                                                },
                                                "bytes_remaining": {
                                                    "type": "string"
                                                },
                                                "bytes_deleted": {
                                                    "type": "string"
                                                },
                                                "bytes_total": {
                                                    "type": "string"
                                                },
                                                "files_transferred": {
                                                    "type": "string"
                                                },
                                                "files_unchanged": {
                                                    "type": "string"
                                                },
                                                "files_remaining": {
                                                    "type": "string"
                                                },
                                                "files_deleted": {
                                                    "type": "string"
                                                },
                                                "files_total": {
                                                    "type": "string"
                                                },
                                                "throughput_overall": {
                                                    "type": "string"
                                                },
                                                "throughput_current": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "queued_snapshot_count": {
                                            "type": "number"
                                        },
                                        "recovery_point_snapshot": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "number"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "timestamp": {
                                                    "type": "string"
                                                },
                                                "directory_name": {
                                                    "type": "string"
                                                },
                                                "source_file_id": {
                                                    "type": "string"
                                                },
                                                "created_by_policy": {
                                                    "type": "boolean"
                                                },
                                                "expiration": {
                                                    "type": "string"
                                                },
                                                "in_delete": {
                                                    "type": "boolean"
                                                }
                                            }
                                        },
                                        "replicating_snapshot": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "number"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "timestamp": {
                                                    "type": "string"
                                                },
                                                "directory_name": {
                                                    "type": "string"
                                                },
                                                "source_file_id": {
                                                    "type": "string"
                                                },
                                                "created_by_policy": {
                                                    "type": "boolean"
                                                },
                                                "expiration": {
                                                    "type": "string"
                                                },
                                                "in_delete": {
                                                    "type": "boolean"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "replication"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v2/replication/target-relationships/{id}/authorize": {
            "post": {
                "summary": "Authorize the specified replication relationship, establishing this cluster as the target of replication.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Relationship identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "allow-non-empty-directory",
                        "in": "query",
                        "description": "Specifies whether the replication relationship may be authorized when the target directory is not empty. If set to true, existing data in the target directory that does not match the source directory will be overwritten or deleted. Defaults to false if not specified.",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "allow-fs-path-create",
                        "in": "query",
                        "description": "Specifies whether the target directory may be created with inherited permissions if the directory does not already exist. Defaults to false if not specified.",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "state": {
                                            "type": "string",
                                            "enum": [
                                                "AWAITING_AUTHORIZATION",
                                                "DISCONNECTED",
                                                "DISCONNECTING",
                                                "ENDED",
                                                "ESTABLISHED",
                                                "RECONNECTING",
                                                "REESTABLISHING"
                                            ],
                                            "description": "Current state of replication relationship:\n * `AWAITING_AUTHORIZATION` - AWAITING_AUTHORIZATION,\n * `DISCONNECTED` - DISCONNECTED,\n * `DISCONNECTING` - DISCONNECTING,\n * `ENDED` - ENDED,\n * `ESTABLISHED` - ESTABLISHED,\n * `RECONNECTING` - RECONNECTING,\n * `REESTABLISHING` - REESTABLISHING"
                                        },
                                        "end_reason": {
                                            "type": "string"
                                        },
                                        "source_cluster_name": {
                                            "type": "string"
                                        },
                                        "source_cluster_uuid": {
                                            "type": "string"
                                        },
                                        "source_root_path": {
                                            "type": "string"
                                        },
                                        "source_root_read_only": {
                                            "type": "boolean"
                                        },
                                        "source_address": {
                                            "type": "string"
                                        },
                                        "source_port": {
                                            "type": "number"
                                        },
                                        "target_cluster_name": {
                                            "type": "string"
                                        },
                                        "target_cluster_uuid": {
                                            "type": "string"
                                        },
                                        "target_root_path": {
                                            "type": "string"
                                        },
                                        "target_root_read_only": {
                                            "type": "boolean"
                                        },
                                        "job_state": {
                                            "type": "string",
                                            "enum": [
                                                "REPLICATION_NOT_RUNNING",
                                                "REPLICATION_RUNNING"
                                            ],
                                            "description": "Current state of the job:\n * `REPLICATION_NOT_RUNNING` - REPLICATION_NOT_RUNNING,\n * `REPLICATION_RUNNING` - REPLICATION_RUNNING"
                                        },
                                        "job_start_time": {
                                            "type": "string"
                                        },
                                        "recovery_point": {
                                            "type": "string"
                                        },
                                        "error_from_last_job": {
                                            "type": "string"
                                        },
                                        "duration_of_last_job": {
                                            "type": "object",
                                            "properties": {
                                                "nanoseconds": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "target_root_id": {
                                            "type": "string"
                                        },
                                        "replication_enabled": {
                                            "type": "boolean"
                                        },
                                        "replication_job_status": {
                                            "type": "object",
                                            "properties": {
                                                "percent_complete": {
                                                    "type": "number"
                                                },
                                                "estimated_seconds_remaining": {
                                                    "type": "string"
                                                },
                                                "bytes_transferred": {
                                                    "type": "string"
                                                },
                                                "bytes_unchanged": {
                                                    "type": "string"
                                                },
                                                "bytes_remaining": {
                                                    "type": "string"
                                                },
                                                "bytes_deleted": {
                                                    "type": "string"
                                                },
                                                "bytes_total": {
                                                    "type": "string"
                                                },
                                                "files_transferred": {
                                                    "type": "string"
                                                },
                                                "files_unchanged": {
                                                    "type": "string"
                                                },
                                                "files_remaining": {
                                                    "type": "string"
                                                },
                                                "files_deleted": {
                                                    "type": "string"
                                                },
                                                "files_total": {
                                                    "type": "string"
                                                },
                                                "throughput_overall": {
                                                    "type": "string"
                                                },
                                                "throughput_current": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "recovery_point_snapshot": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "number"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "timestamp": {
                                                    "type": "string"
                                                },
                                                "directory_name": {
                                                    "type": "string"
                                                },
                                                "source_file_id": {
                                                    "type": "string"
                                                },
                                                "created_by_policy": {
                                                    "type": "boolean"
                                                },
                                                "expiration": {
                                                    "type": "string"
                                                },
                                                "in_delete": {
                                                    "type": "boolean"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "replication"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v2/replication/target-relationships/{id}/delete": {
            "post": {
                "summary": "Delete the specified replication relationship where this cluster is the target.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Relationship identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success"
                    }
                },
                "tags": [
                    "replication"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v2/replication/target-relationships/{id}/dismiss-error": {
            "post": {
                "summary": "Clear the error associated with this target relationship's last replication attempt, if one exists.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Relationship identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success"
                    }
                },
                "tags": [
                    "replication"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v2/replication/target-relationships/{id}/make-writable": {
            "post": {
                "summary": "Revert target directory to the latest recovery point to ensure that it is in a point-in-time consistent state. Then disconnect the specified target replication relationship, breaking the relationship with the source and making the target directory writable. The revert action may take some time to complete. If the relationship is later reconnected, any changes made to the target directory since the relationship was disconnected will be reverted upon reconnecting.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Relationship identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "state": {
                                            "type": "string",
                                            "enum": [
                                                "AWAITING_AUTHORIZATION",
                                                "DISCONNECTED",
                                                "DISCONNECTING",
                                                "ENDED",
                                                "ESTABLISHED",
                                                "RECONNECTING",
                                                "REESTABLISHING"
                                            ],
                                            "description": "Current state of replication relationship:\n * `AWAITING_AUTHORIZATION` - AWAITING_AUTHORIZATION,\n * `DISCONNECTED` - DISCONNECTED,\n * `DISCONNECTING` - DISCONNECTING,\n * `ENDED` - ENDED,\n * `ESTABLISHED` - ESTABLISHED,\n * `RECONNECTING` - RECONNECTING,\n * `REESTABLISHING` - REESTABLISHING"
                                        },
                                        "end_reason": {
                                            "type": "string"
                                        },
                                        "source_cluster_name": {
                                            "type": "string"
                                        },
                                        "source_cluster_uuid": {
                                            "type": "string"
                                        },
                                        "source_root_path": {
                                            "type": "string"
                                        },
                                        "source_root_read_only": {
                                            "type": "boolean"
                                        },
                                        "source_address": {
                                            "type": "string"
                                        },
                                        "source_port": {
                                            "type": "number"
                                        },
                                        "target_cluster_name": {
                                            "type": "string"
                                        },
                                        "target_cluster_uuid": {
                                            "type": "string"
                                        },
                                        "target_root_path": {
                                            "type": "string"
                                        },
                                        "target_root_read_only": {
                                            "type": "boolean"
                                        },
                                        "job_state": {
                                            "type": "string",
                                            "enum": [
                                                "REPLICATION_NOT_RUNNING",
                                                "REPLICATION_RUNNING"
                                            ],
                                            "description": "Current state of the job:\n * `REPLICATION_NOT_RUNNING` - REPLICATION_NOT_RUNNING,\n * `REPLICATION_RUNNING` - REPLICATION_RUNNING"
                                        },
                                        "job_start_time": {
                                            "type": "string"
                                        },
                                        "recovery_point": {
                                            "type": "string"
                                        },
                                        "error_from_last_job": {
                                            "type": "string"
                                        },
                                        "duration_of_last_job": {
                                            "type": "object",
                                            "properties": {
                                                "nanoseconds": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "target_root_id": {
                                            "type": "string"
                                        },
                                        "replication_enabled": {
                                            "type": "boolean"
                                        },
                                        "replication_job_status": {
                                            "type": "object",
                                            "properties": {
                                                "percent_complete": {
                                                    "type": "number"
                                                },
                                                "estimated_seconds_remaining": {
                                                    "type": "string"
                                                },
                                                "bytes_transferred": {
                                                    "type": "string"
                                                },
                                                "bytes_unchanged": {
                                                    "type": "string"
                                                },
                                                "bytes_remaining": {
                                                    "type": "string"
                                                },
                                                "bytes_deleted": {
                                                    "type": "string"
                                                },
                                                "bytes_total": {
                                                    "type": "string"
                                                },
                                                "files_transferred": {
                                                    "type": "string"
                                                },
                                                "files_unchanged": {
                                                    "type": "string"
                                                },
                                                "files_remaining": {
                                                    "type": "string"
                                                },
                                                "files_deleted": {
                                                    "type": "string"
                                                },
                                                "files_total": {
                                                    "type": "string"
                                                },
                                                "throughput_overall": {
                                                    "type": "string"
                                                },
                                                "throughput_current": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "recovery_point_snapshot": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "number"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "timestamp": {
                                                    "type": "string"
                                                },
                                                "directory_name": {
                                                    "type": "string"
                                                },
                                                "source_file_id": {
                                                    "type": "string"
                                                },
                                                "created_by_policy": {
                                                    "type": "boolean"
                                                },
                                                "expiration": {
                                                    "type": "string"
                                                },
                                                "in_delete": {
                                                    "type": "boolean"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "replication"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v2/replication/target-relationships/{id}/reconnect": {
            "post": {
                "summary": "Make the target directory read-only and revert any changes made to the target directory since the latest recovery point. Then reconnect the specified target replication relationship with its source directory. The revert action may take some time to complete before replication is resumed.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Relationship identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "state": {
                                            "type": "string",
                                            "enum": [
                                                "AWAITING_AUTHORIZATION",
                                                "DISCONNECTED",
                                                "DISCONNECTING",
                                                "ENDED",
                                                "ESTABLISHED",
                                                "RECONNECTING",
                                                "REESTABLISHING"
                                            ],
                                            "description": "Current state of replication relationship:\n * `AWAITING_AUTHORIZATION` - AWAITING_AUTHORIZATION,\n * `DISCONNECTED` - DISCONNECTED,\n * `DISCONNECTING` - DISCONNECTING,\n * `ENDED` - ENDED,\n * `ESTABLISHED` - ESTABLISHED,\n * `RECONNECTING` - RECONNECTING,\n * `REESTABLISHING` - REESTABLISHING"
                                        },
                                        "end_reason": {
                                            "type": "string"
                                        },
                                        "source_cluster_name": {
                                            "type": "string"
                                        },
                                        "source_cluster_uuid": {
                                            "type": "string"
                                        },
                                        "source_root_path": {
                                            "type": "string"
                                        },
                                        "source_root_read_only": {
                                            "type": "boolean"
                                        },
                                        "source_address": {
                                            "type": "string"
                                        },
                                        "source_port": {
                                            "type": "number"
                                        },
                                        "target_cluster_name": {
                                            "type": "string"
                                        },
                                        "target_cluster_uuid": {
                                            "type": "string"
                                        },
                                        "target_root_path": {
                                            "type": "string"
                                        },
                                        "target_root_read_only": {
                                            "type": "boolean"
                                        },
                                        "job_state": {
                                            "type": "string",
                                            "enum": [
                                                "REPLICATION_NOT_RUNNING",
                                                "REPLICATION_RUNNING"
                                            ],
                                            "description": "Current state of the job:\n * `REPLICATION_NOT_RUNNING` - REPLICATION_NOT_RUNNING,\n * `REPLICATION_RUNNING` - REPLICATION_RUNNING"
                                        },
                                        "job_start_time": {
                                            "type": "string"
                                        },
                                        "recovery_point": {
                                            "type": "string"
                                        },
                                        "error_from_last_job": {
                                            "type": "string"
                                        },
                                        "duration_of_last_job": {
                                            "type": "object",
                                            "properties": {
                                                "nanoseconds": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "target_root_id": {
                                            "type": "string"
                                        },
                                        "replication_enabled": {
                                            "type": "boolean"
                                        },
                                        "replication_job_status": {
                                            "type": "object",
                                            "properties": {
                                                "percent_complete": {
                                                    "type": "number"
                                                },
                                                "estimated_seconds_remaining": {
                                                    "type": "string"
                                                },
                                                "bytes_transferred": {
                                                    "type": "string"
                                                },
                                                "bytes_unchanged": {
                                                    "type": "string"
                                                },
                                                "bytes_remaining": {
                                                    "type": "string"
                                                },
                                                "bytes_deleted": {
                                                    "type": "string"
                                                },
                                                "bytes_total": {
                                                    "type": "string"
                                                },
                                                "files_transferred": {
                                                    "type": "string"
                                                },
                                                "files_unchanged": {
                                                    "type": "string"
                                                },
                                                "files_remaining": {
                                                    "type": "string"
                                                },
                                                "files_deleted": {
                                                    "type": "string"
                                                },
                                                "files_total": {
                                                    "type": "string"
                                                },
                                                "throughput_overall": {
                                                    "type": "string"
                                                },
                                                "throughput_current": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "recovery_point_snapshot": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "number"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "timestamp": {
                                                    "type": "string"
                                                },
                                                "directory_name": {
                                                    "type": "string"
                                                },
                                                "source_file_id": {
                                                    "type": "string"
                                                },
                                                "created_by_policy": {
                                                    "type": "boolean"
                                                },
                                                "expiration": {
                                                    "type": "string"
                                                },
                                                "in_delete": {
                                                    "type": "boolean"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "replication"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v2/replication/target-relationships/{id}/status": {
            "get": {
                "summary": "Get current status of the specified replication relationship where this cluster is the target.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Relationship identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "state": {
                                            "type": "string",
                                            "enum": [
                                                "AWAITING_AUTHORIZATION",
                                                "DISCONNECTED",
                                                "DISCONNECTING",
                                                "ENDED",
                                                "ESTABLISHED",
                                                "RECONNECTING",
                                                "REESTABLISHING"
                                            ],
                                            "description": "Current state of replication relationship:\n * `AWAITING_AUTHORIZATION` - AWAITING_AUTHORIZATION,\n * `DISCONNECTED` - DISCONNECTED,\n * `DISCONNECTING` - DISCONNECTING,\n * `ENDED` - ENDED,\n * `ESTABLISHED` - ESTABLISHED,\n * `RECONNECTING` - RECONNECTING,\n * `REESTABLISHING` - REESTABLISHING"
                                        },
                                        "end_reason": {
                                            "type": "string"
                                        },
                                        "source_cluster_name": {
                                            "type": "string"
                                        },
                                        "source_cluster_uuid": {
                                            "type": "string"
                                        },
                                        "source_root_path": {
                                            "type": "string"
                                        },
                                        "source_root_read_only": {
                                            "type": "boolean"
                                        },
                                        "source_address": {
                                            "type": "string"
                                        },
                                        "source_port": {
                                            "type": "number"
                                        },
                                        "target_cluster_name": {
                                            "type": "string"
                                        },
                                        "target_cluster_uuid": {
                                            "type": "string"
                                        },
                                        "target_root_path": {
                                            "type": "string"
                                        },
                                        "target_root_read_only": {
                                            "type": "boolean"
                                        },
                                        "job_state": {
                                            "type": "string",
                                            "enum": [
                                                "REPLICATION_NOT_RUNNING",
                                                "REPLICATION_RUNNING"
                                            ],
                                            "description": "Current state of the job:\n * `REPLICATION_NOT_RUNNING` - REPLICATION_NOT_RUNNING,\n * `REPLICATION_RUNNING` - REPLICATION_RUNNING"
                                        },
                                        "job_start_time": {
                                            "type": "string"
                                        },
                                        "recovery_point": {
                                            "type": "string"
                                        },
                                        "error_from_last_job": {
                                            "type": "string"
                                        },
                                        "duration_of_last_job": {
                                            "type": "object",
                                            "properties": {
                                                "nanoseconds": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "target_root_id": {
                                            "type": "string"
                                        },
                                        "replication_enabled": {
                                            "type": "boolean"
                                        },
                                        "replication_job_status": {
                                            "type": "object",
                                            "properties": {
                                                "percent_complete": {
                                                    "type": "number"
                                                },
                                                "estimated_seconds_remaining": {
                                                    "type": "string"
                                                },
                                                "bytes_transferred": {
                                                    "type": "string"
                                                },
                                                "bytes_unchanged": {
                                                    "type": "string"
                                                },
                                                "bytes_remaining": {
                                                    "type": "string"
                                                },
                                                "bytes_deleted": {
                                                    "type": "string"
                                                },
                                                "bytes_total": {
                                                    "type": "string"
                                                },
                                                "files_transferred": {
                                                    "type": "string"
                                                },
                                                "files_unchanged": {
                                                    "type": "string"
                                                },
                                                "files_remaining": {
                                                    "type": "string"
                                                },
                                                "files_deleted": {
                                                    "type": "string"
                                                },
                                                "files_total": {
                                                    "type": "string"
                                                },
                                                "throughput_overall": {
                                                    "type": "string"
                                                },
                                                "throughput_current": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "recovery_point_snapshot": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "number"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "timestamp": {
                                                    "type": "string"
                                                },
                                                "directory_name": {
                                                    "type": "string"
                                                },
                                                "source_file_id": {
                                                    "type": "string"
                                                },
                                                "created_by_policy": {
                                                    "type": "boolean"
                                                },
                                                "expiration": {
                                                    "type": "string"
                                                },
                                                "in_delete": {
                                                    "type": "boolean"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "replication"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v2/replication/source-relationships/{relationship_id}/queued-snapshots/{snapshot_id}": {
            "delete": {
                "summary": "Release a snapshot queued for replication from the queue of the specified source replication relationship. This action will permanently remove the snapshot from the relationship's replication queue, but not delete the snapshot from the cluster.",
                "parameters": [
                    {
                        "name": "relationship_id",
                        "in": "path",
                        "description": "Relationship identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "snapshot_id",
                        "in": "path",
                        "description": "Snapshot identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success"
                    }
                },
                "tags": [
                    "replication"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v3/replication/object-relationships/": {
            "post": {
                "summary": "Create a new object replication relationship. Replication will automatically start after the relationship is created.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "direction": {
                                            "type": "string",
                                            "enum": [
                                                "COPY_TO_OBJECT",
                                                "COPY_FROM_OBJECT"
                                            ],
                                            "description": "The object relationship can either copy data to or from the object store:\n * `COPY_FROM_OBJECT` - COPY_FROM_OBJECT,\n * `COPY_TO_OBJECT` - COPY_TO_OBJECT"
                                        },
                                        "local_directory_id": {
                                            "type": "string"
                                        },
                                        "object_store_address": {
                                            "type": "string"
                                        },
                                        "port": {
                                            "type": "number"
                                        },
                                        "ca_certificate": {
                                            "type": "string"
                                        },
                                        "bucket": {
                                            "type": "string"
                                        },
                                        "bucket_style": {
                                            "type": "string",
                                            "enum": [
                                                "BUCKET_STYLE_PATH",
                                                "BUCKET_STYLE_VIRTUAL_HOSTED"
                                            ],
                                            "description": "Addressing style for requests to the bucket. BUCKET_STYLE_PATH indicates path-style addressing while BUCKET_STYLE_VIRTUAL_HOSTED indicates virtual hosted-style.:\n * `BUCKET_STYLE_PATH` - BUCKET_STYLE_PATH,\n * `BUCKET_STYLE_VIRTUAL_HOSTED` - BUCKET_STYLE_VIRTUAL_HOSTED"
                                        },
                                        "object_folder": {
                                            "type": "string"
                                        },
                                        "region": {
                                            "type": "string"
                                        },
                                        "access_key_id": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "replication"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "direction": {
                                        "type": "string",
                                        "enum": [
                                            "COPY_TO_OBJECT",
                                            "COPY_FROM_OBJECT"
                                        ],
                                        "description": "Whether data is to be copied to, or from, the object store:\n * `COPY_FROM_OBJECT` - COPY_FROM_OBJECT,\n * `COPY_TO_OBJECT` - COPY_TO_OBJECT"
                                    },
                                    "local_directory_id": {
                                        "type": "string"
                                    },
                                    "local_directory_path": {
                                        "type": "string"
                                    },
                                    "object_store_address": {
                                        "type": "string"
                                    },
                                    "port": {
                                        "type": "number"
                                    },
                                    "ca_certificate": {
                                        "type": "string"
                                    },
                                    "bucket": {
                                        "type": "string"
                                    },
                                    "bucket_style": {
                                        "type": "string",
                                        "enum": [
                                            "BUCKET_STYLE_PATH",
                                            "BUCKET_STYLE_VIRTUAL_HOSTED"
                                        ],
                                        "description": "Addressing style for requests to the bucket. Set to BUCKET_STYLE_PATH for path-style addressing or BUCKET_STYLE_VIRTUAL_HOSTED for virtual hosted-style (the default). For Amazon S3, virtual hosted-style is recommended as path-style is deprecated. Bucket names containing dots ('.') or characters that are not valid in domain names may require path-style. The object_store_address should not include the bucket name, regardless of addressing style.:\n * `BUCKET_STYLE_PATH` - BUCKET_STYLE_PATH,\n * `BUCKET_STYLE_VIRTUAL_HOSTED` - BUCKET_STYLE_VIRTUAL_HOSTED"
                                    },
                                    "object_folder": {
                                        "type": "string"
                                    },
                                    "region": {
                                        "type": "string"
                                    },
                                    "access_key_id": {
                                        "type": "string"
                                    },
                                    "secret_access_key": {
                                        "type": "string",
                                        "format": "password"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "List existing object replication relationships.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "direction": {
                                                "type": "string",
                                                "enum": [
                                                    "COPY_TO_OBJECT",
                                                    "COPY_FROM_OBJECT"
                                                ],
                                                "description": "The object relationship can either copy data to or from the object store:\n * `COPY_FROM_OBJECT` - COPY_FROM_OBJECT,\n * `COPY_TO_OBJECT` - COPY_TO_OBJECT"
                                            },
                                            "local_directory_id": {
                                                "type": "string"
                                            },
                                            "object_store_address": {
                                                "type": "string"
                                            },
                                            "port": {
                                                "type": "number"
                                            },
                                            "ca_certificate": {
                                                "type": "string"
                                            },
                                            "bucket": {
                                                "type": "string"
                                            },
                                            "bucket_style": {
                                                "type": "string",
                                                "enum": [
                                                    "BUCKET_STYLE_PATH",
                                                    "BUCKET_STYLE_VIRTUAL_HOSTED"
                                                ],
                                                "description": "Addressing style for requests to the bucket. BUCKET_STYLE_PATH indicates path-style addressing while BUCKET_STYLE_VIRTUAL_HOSTED indicates virtual hosted-style.:\n * `BUCKET_STYLE_PATH` - BUCKET_STYLE_PATH,\n * `BUCKET_STYLE_VIRTUAL_HOSTED` - BUCKET_STYLE_VIRTUAL_HOSTED"
                                            },
                                            "object_folder": {
                                                "type": "string"
                                            },
                                            "region": {
                                                "type": "string"
                                            },
                                            "access_key_id": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "replication"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v3/replication/object-relationships/status/": {
            "get": {
                "summary": "List statuses for all existing object replication relationships.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success"
                    }
                },
                "tags": [
                    "replication"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v3/replication/object-relationships/{id}/status": {
            "get": {
                "summary": "Get the status of an existing object replication relationship.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Relationship identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success"
                    }
                },
                "tags": [
                    "replication"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v3/replication/object-relationships/{id}/abort-replication": {
            "post": {
                "summary": "Abort any ongoing replication job for the specified object replication relationship.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Relationship identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success"
                    }
                },
                "tags": [
                    "replication"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v3/replication/object-relationships/{id}": {
            "get": {
                "summary": "Get information about the specified object replication relationship.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Relationship identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "direction": {
                                            "type": "string",
                                            "enum": [
                                                "COPY_TO_OBJECT",
                                                "COPY_FROM_OBJECT"
                                            ],
                                            "description": "The object relationship can either copy data to or from the object store:\n * `COPY_FROM_OBJECT` - COPY_FROM_OBJECT,\n * `COPY_TO_OBJECT` - COPY_TO_OBJECT"
                                        },
                                        "local_directory_id": {
                                            "type": "string"
                                        },
                                        "object_store_address": {
                                            "type": "string"
                                        },
                                        "port": {
                                            "type": "number"
                                        },
                                        "ca_certificate": {
                                            "type": "string"
                                        },
                                        "bucket": {
                                            "type": "string"
                                        },
                                        "bucket_style": {
                                            "type": "string",
                                            "enum": [
                                                "BUCKET_STYLE_PATH",
                                                "BUCKET_STYLE_VIRTUAL_HOSTED"
                                            ],
                                            "description": "Addressing style for requests to the bucket. BUCKET_STYLE_PATH indicates path-style addressing while BUCKET_STYLE_VIRTUAL_HOSTED indicates virtual hosted-style.:\n * `BUCKET_STYLE_PATH` - BUCKET_STYLE_PATH,\n * `BUCKET_STYLE_VIRTUAL_HOSTED` - BUCKET_STYLE_VIRTUAL_HOSTED"
                                        },
                                        "object_folder": {
                                            "type": "string"
                                        },
                                        "region": {
                                            "type": "string"
                                        },
                                        "access_key_id": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "replication"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            },
            "delete": {
                "summary": "Delete the specified object replication relationship, which must not be running a job.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Relationship identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success"
                    }
                },
                "tags": [
                    "replication"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v3/replication/object-relationships/{id}/replicate": {
            "post": {
                "summary": "Start a new replication job for the specified object relationship",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Relationship identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "monitor_uri": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "replication"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/auth/roles/": {
            "get": {
                "summary": "List all roles.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success"
                    }
                },
                "tags": [
                    "auth"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            },
            "post": {
                "summary": "Create a new role.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "privileges": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "enum": [
                                                    "PRIVILEGE_AD_READ",
                                                    "PRIVILEGE_AD_USE",
                                                    "PRIVILEGE_AD_WRITE",
                                                    "PRIVILEGE_ANALYTICS_READ",
                                                    "PRIVILEGE_AUDIT_READ",
                                                    "PRIVILEGE_AUDIT_WRITE",
                                                    "PRIVILEGE_AUTH_CACHE_READ",
                                                    "PRIVILEGE_AUTH_CACHE_WRITE",
                                                    "PRIVILEGE_CLUSTER_READ",
                                                    "PRIVILEGE_CLUSTER_WRITE",
                                                    "PRIVILEGE_DEBUG",
                                                    "PRIVILEGE_DNS_READ",
                                                    "PRIVILEGE_DNS_USE",
                                                    "PRIVILEGE_DNS_WRITE",
                                                    "PRIVILEGE_FILE_FULL_ACCESS",
                                                    "PRIVILEGE_FS_ATTRIBUTES_READ",
                                                    "PRIVILEGE_FS_DELETE_TREE_READ",
                                                    "PRIVILEGE_FS_DELETE_TREE_WRITE",
                                                    "PRIVILEGE_FS_LOCK_READ",
                                                    "PRIVILEGE_FS_LOCK_WRITE",
                                                    "PRIVILEGE_FS_SETTINGS_READ",
                                                    "PRIVILEGE_FS_SETTINGS_WRITE",
                                                    "PRIVILEGE_FTP_READ",
                                                    "PRIVILEGE_FTP_WRITE",
                                                    "PRIVILEGE_IDENTITY_MAPPING_READ",
                                                    "PRIVILEGE_IDENTITY_MAPPING_WRITE",
                                                    "PRIVILEGE_IDENTITY_READ",
                                                    "PRIVILEGE_IDENTITY_WRITE",
                                                    "PRIVILEGE_KERBEROS_KEYTAB_READ",
                                                    "PRIVILEGE_KERBEROS_KEYTAB_WRITE",
                                                    "PRIVILEGE_KERBEROS_SETTINGS_READ",
                                                    "PRIVILEGE_KERBEROS_SETTINGS_WRITE",
                                                    "PRIVILEGE_KV_READ",
                                                    "PRIVILEGE_LDAP_READ",
                                                    "PRIVILEGE_LDAP_USE",
                                                    "PRIVILEGE_LDAP_WRITE",
                                                    "PRIVILEGE_LOCAL_GROUP_READ",
                                                    "PRIVILEGE_LOCAL_GROUP_WRITE",
                                                    "PRIVILEGE_LOCAL_USER_READ",
                                                    "PRIVILEGE_LOCAL_USER_WRITE",
                                                    "PRIVILEGE_METRICS_READ",
                                                    "PRIVILEGE_NETWORK_IP_ALLOCATION_READ",
                                                    "PRIVILEGE_NETWORK_READ",
                                                    "PRIVILEGE_NETWORK_WRITE",
                                                    "PRIVILEGE_NFS_EXPORT_READ",
                                                    "PRIVILEGE_NFS_EXPORT_WRITE",
                                                    "PRIVILEGE_POWER_CYCLE",
                                                    "PRIVILEGE_QUOTA_READ",
                                                    "PRIVILEGE_QUOTA_WRITE",
                                                    "PRIVILEGE_RECONCILER_READ",
                                                    "PRIVILEGE_REPLICATION_REVERSE_RELATIONSHIP",
                                                    "PRIVILEGE_REPLICATION_SOURCE_READ",
                                                    "PRIVILEGE_REPLICATION_SOURCE_WRITE",
                                                    "PRIVILEGE_REPLICATION_TARGET_READ",
                                                    "PRIVILEGE_REPLICATION_TARGET_WRITE",
                                                    "PRIVILEGE_ROLE_READ",
                                                    "PRIVILEGE_ROLE_WRITE",
                                                    "PRIVILEGE_SMB_SHARE_READ",
                                                    "PRIVILEGE_SMB_SHARE_WRITE",
                                                    "PRIVILEGE_SNAPSHOT_CALCULATE_USED_CAPACITY_READ",
                                                    "PRIVILEGE_SNAPSHOT_DIFFERENCE_READ",
                                                    "PRIVILEGE_SNAPSHOT_POLICY_READ",
                                                    "PRIVILEGE_SNAPSHOT_POLICY_WRITE",
                                                    "PRIVILEGE_SNAPSHOT_READ",
                                                    "PRIVILEGE_SNAPSHOT_WRITE",
                                                    "PRIVILEGE_SUPPORT_READ",
                                                    "PRIVILEGE_SUPPORT_WRITE",
                                                    "PRIVILEGE_TEST_ONLY",
                                                    "PRIVILEGE_TIME_READ",
                                                    "PRIVILEGE_TIME_WRITE",
                                                    "PRIVILEGE_UNCONFIGURED_NODE_READ",
                                                    "PRIVILEGE_UPGRADE_READ",
                                                    "PRIVILEGE_UPGRADE_WRITE",
                                                    "PRIVILEGE_SMB_FILE_HANDLE_READ",
                                                    "PRIVILEGE_SMB_FILE_HANDLE_WRITE",
                                                    "PRIVILEGE_SMB_SESSION_READ",
                                                    "PRIVILEGE_SMB_SESSION_WRITE",
                                                    "PRIVILEGE_REPLICATION_OBJECT_READ",
                                                    "PRIVILEGE_REPLICATION_OBJECT_WRITE",
                                                    "PRIVILEGE_ENCRYPTION_WRITE",
                                                    "PRIVILEGE_ENCRYPTION_READ",
                                                    "PRIVILEGE_NFS_SETTINGS_READ",
                                                    "PRIVILEGE_NFS_SETTINGS_WRITE",
                                                    "PRIVILEGE_SERVICE_PUBLIC_KEYS_WRITE",
                                                    "PRIVILEGE_SERVICE_PUBLIC_KEYS_READ",
                                                    "PRIVILEGE_METRICS_CONFIG_READ",
                                                    "PRIVILEGE_METRICS_CONFIG_WRITE",
                                                    "PRIVILEGE_REBOOT_USE",
                                                    "PRIVILEGE_REBOOT_READ",
                                                    "PRIVILEGE_CHECKSUMMING_READ",
                                                    "PRIVILEGE_S3_SETTINGS_READ",
                                                    "PRIVILEGE_S3_SETTINGS_WRITE",
                                                    "PRIVILEGE_WEB_UI_SETTINGS_WRITE",
                                                    "PRIVILEGE_S3_CREDENTIALS_READ",
                                                    "PRIVILEGE_S3_CREDENTIALS_WRITE",
                                                    "PRIVILEGE_TENANT_READ",
                                                    "PRIVILEGE_TENANT_WRITE",
                                                    "PRIVILEGE_SAML_SETTINGS_READ",
                                                    "PRIVILEGE_SAML_SETTINGS_WRITE",
                                                    "PRIVILEGE_S3_BUCKETS_READ",
                                                    "PRIVILEGE_S3_BUCKETS_WRITE"
                                                ],
                                                "description": "Privileges the role has been granted:\n * `PRIVILEGE_AD_READ` - Read Qumulo Active Directory settings,\n * `PRIVILEGE_AD_USE` - Use Qumulo's APIs for performing queries against Active Directory,\n * `PRIVILEGE_AD_WRITE` - Modify Qumulo Active Directory settings,\n * `PRIVILEGE_ANALYTICS_READ` - Read cluster analytics,\n * `PRIVILEGE_AUDIT_READ` - Read audit settings,\n * `PRIVILEGE_AUDIT_WRITE` - Modify audit settings,\n * `PRIVILEGE_AUTH_CACHE_READ` - Internal-Only: Read authentication cache settings,\n * `PRIVILEGE_AUTH_CACHE_WRITE` - Internal-Only: Modify authentication cache settings,\n * `PRIVILEGE_CHECKSUMMING_READ` - View the status of checksumming,\n * `PRIVILEGE_CLUSTER_READ` - View nodes, disks, protection status, and SSL certificate,\n * `PRIVILEGE_CLUSTER_WRITE` - Modify cluster settings and disk/identify LEDs,\n * `PRIVILEGE_DEBUG` - Internal-Only: Perform debug operations on the cluster,\n * `PRIVILEGE_DNS_READ` - Read DNS settings,\n * `PRIVILEGE_DNS_USE` - Perform DNS lookups,\n * `PRIVILEGE_DNS_WRITE` - Modify DNS settings,\n * `PRIVILEGE_ENCRYPTION_READ` - View the status of at-rest-encryption,\n * `PRIVILEGE_ENCRYPTION_WRITE` - Rotate encryption keys for clusters with at-rest-encryption,\n * `PRIVILEGE_FILE_FULL_ACCESS` - Provides full access to all files regardless of permissions,\n * `PRIVILEGE_FS_ATTRIBUTES_READ` - Read file system statistics,\n * `PRIVILEGE_FS_DELETE_TREE_READ` - View the status of directory tree delete operations,\n * `PRIVILEGE_FS_DELETE_TREE_WRITE` - Use directory tree delete API. Granting this privilege allows the deletion of any file or directory on the cluster. File and directory permissions are not taken into account. Not required for `rm -r`.,\n * `PRIVILEGE_FS_LOCK_READ` - View NLM and SMB locks and waiters,\n * `PRIVILEGE_FS_LOCK_WRITE` - Release NLM and SMB locks,\n * `PRIVILEGE_FS_SETTINGS_READ` - View file system permissions settings,\n * `PRIVILEGE_FS_SETTINGS_WRITE` - Modify file system permissions mode,\n * `PRIVILEGE_FTP_READ` - View FTP status and settings,\n * `PRIVILEGE_FTP_WRITE` - Modify FTP status and settings,\n * `PRIVILEGE_IDENTITY_MAPPING_READ` - Get AD/LDAP User Defined Mappings,\n * `PRIVILEGE_IDENTITY_MAPPING_WRITE` - Set AD/LDAP User Defined Mappings,\n * `PRIVILEGE_IDENTITY_READ` - Use Qumulo's identity lookup and translation APIs,\n * `PRIVILEGE_IDENTITY_WRITE` - Modify identity attributes and clear authentication cache,\n * `PRIVILEGE_KERBEROS_KEYTAB_READ` - View Kerberos keytab,\n * `PRIVILEGE_KERBEROS_KEYTAB_WRITE` - Modify Kerberos keytab,\n * `PRIVILEGE_KERBEROS_SETTINGS_READ` - Read Kerberos settings,\n * `PRIVILEGE_KERBEROS_SETTINGS_WRITE` - Modify Kerberos settings,\n * `PRIVILEGE_KV_READ` - DEPRECATED: Read and delete KV store entries for all users,\n * `PRIVILEGE_LDAP_READ` - View LDAP settings,\n * `PRIVILEGE_LDAP_USE` - Use Qumulo's APIs for performing LDAP queries,\n * `PRIVILEGE_LDAP_WRITE` - Modify LDAP settings,\n * `PRIVILEGE_LOCAL_GROUP_READ` - View local groups and members,\n * `PRIVILEGE_LOCAL_GROUP_WRITE` - Modify local groups and membership,\n * `PRIVILEGE_LOCAL_USER_READ` - Get information about local users,\n * `PRIVILEGE_LOCAL_USER_WRITE` - Create and modify all local users,\n * `PRIVILEGE_METRICS_CONFIG_READ` - View metrics configuration,\n * `PRIVILEGE_METRICS_CONFIG_WRITE` - Modify metrics configuration,\n * `PRIVILEGE_METRICS_READ` - Get all metrics,\n * `PRIVILEGE_NETWORK_IP_ALLOCATION_READ` - View network IP address allocations,\n * `PRIVILEGE_NETWORK_READ` - Read network status and settings,\n * `PRIVILEGE_NETWORK_WRITE` - Modify network configuration,\n * `PRIVILEGE_NFS_EXPORT_READ` - View configuration of NFS exports,\n * `PRIVILEGE_NFS_EXPORT_WRITE` - Create, modify, and delete NFS exports,\n * `PRIVILEGE_NFS_SETTINGS_READ` - Internal-Only: View NFS server settings,\n * `PRIVILEGE_NFS_SETTINGS_WRITE` - Internal-Only: Modify NFS server settings,\n * `PRIVILEGE_POWER_CYCLE` - Shutdown and reboot nodes,\n * `PRIVILEGE_QUOTA_READ` - View all file system quotas,\n * `PRIVILEGE_QUOTA_WRITE` - Create, modify, and delete file system quotas,\n * `PRIVILEGE_REBOOT_READ` - View Reboot Status,\n * `PRIVILEGE_REBOOT_USE` - Perform Reboots,\n * `PRIVILEGE_RECONCILER_READ` - View reconciler status and metrics,\n * `PRIVILEGE_REPLICATION_OBJECT_READ` - View object store relationship settings and status,\n * `PRIVILEGE_REPLICATION_OBJECT_WRITE` - Create, modify, and delete object store relationships. Granting this privilege allows overwriting existing data, replicating, and potentially accessing any data on the cluster regardless of file and directory permissions.,\n * `PRIVILEGE_REPLICATION_REVERSE_RELATIONSHIP` - Reverse a source and target relationship,\n * `PRIVILEGE_REPLICATION_SOURCE_READ` - View source relationship settings and status,\n * `PRIVILEGE_REPLICATION_SOURCE_WRITE` - Create, modify, and delete source relationships. Granting this privilege allows replicating and potentially accessing any data on the cluster regardless of file and directory permissions.,\n * `PRIVILEGE_REPLICATION_TARGET_READ` - View target relationship settings and status,\n * `PRIVILEGE_REPLICATION_TARGET_WRITE` - Create, modify, and delete target relationships. Granting this privilege allows overwriting any data on the cluster regardless of file and directory permissions.,\n * `PRIVILEGE_ROLE_READ` - View roles and assignments,\n * `PRIVILEGE_ROLE_WRITE` - Create and modify roles and assignments,\n * `PRIVILEGE_S3_BUCKETS_READ` - View all S3 buckets present in the system,\n * `PRIVILEGE_S3_BUCKETS_WRITE` - Create or delete any S3 bucket in the system,\n * `PRIVILEGE_S3_CREDENTIALS_READ` - View any S3 access key present in the system,\n * `PRIVILEGE_S3_CREDENTIALS_WRITE` - Create or delete S3 access keys for any user in the system,\n * `PRIVILEGE_S3_SETTINGS_READ` - View S3 server settings,\n * `PRIVILEGE_S3_SETTINGS_WRITE` - Modify S3 server settings,\n * `PRIVILEGE_SAML_SETTINGS_READ` - View SAML integration settings,\n * `PRIVILEGE_SAML_SETTINGS_WRITE` - Modify SAML integration settings,\n * `PRIVILEGE_SERVICE_PUBLIC_KEYS_READ` - Internal-Only: Read public keys,\n * `PRIVILEGE_SERVICE_PUBLIC_KEYS_WRITE` - Internal-Only: Write public keys,\n * `PRIVILEGE_SMB_FILE_HANDLE_READ` - List open SMB file handles,\n * `PRIVILEGE_SMB_FILE_HANDLE_WRITE` - Force close an open SMB file handle,\n * `PRIVILEGE_SMB_SESSION_READ` - List logged on SMB sessions,\n * `PRIVILEGE_SMB_SESSION_WRITE` - Force close a logged on SMB session,\n * `PRIVILEGE_SMB_SHARE_READ` - View configuration of SMB shares and SMB server settings,\n * `PRIVILEGE_SMB_SHARE_WRITE` - Create, modify, and delete SMB shares and SMB server settings,\n * `PRIVILEGE_SNAPSHOT_CALCULATE_USED_CAPACITY_READ` - Recalculate capacity usage of snapshots,\n * `PRIVILEGE_SNAPSHOT_DIFFERENCE_READ` - View the changes between snapshots,\n * `PRIVILEGE_SNAPSHOT_POLICY_READ` - View snapshot policies and status,\n * `PRIVILEGE_SNAPSHOT_POLICY_WRITE` - Create, modify, and delete snapshot policies,\n * `PRIVILEGE_SNAPSHOT_READ` - List snapshots and view their status and cached capacity. Does not affect the visibility of the virtual `.snapshot` directories,\n * `PRIVILEGE_SNAPSHOT_WRITE` - Create, modify, and delete snapshots,\n * `PRIVILEGE_SUPPORT_READ` - View support configuration and status,\n * `PRIVILEGE_SUPPORT_WRITE` - Modify cloud-based monitoring and remote management,\n * `PRIVILEGE_TENANT_READ` - View any tenant information,\n * `PRIVILEGE_TENANT_WRITE` - Create, edit or delete tenants,\n * `PRIVILEGE_TEST_ONLY` - Test only actions,\n * `PRIVILEGE_TIME_READ` - View time and time settings,\n * `PRIVILEGE_TIME_WRITE` - Modify time settings,\n * `PRIVILEGE_UNCONFIGURED_NODE_READ` - List unconfigured Qumulo nodes,\n * `PRIVILEGE_UPGRADE_READ` - View upgrade configuration and status,\n * `PRIVILEGE_UPGRADE_WRITE` - Perform upgrades,\n * `PRIVILEGE_WEB_UI_SETTINGS_WRITE` - Modify web UI settings"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "auth"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "privileges": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "enum": [
                                                "PRIVILEGE_AD_READ",
                                                "PRIVILEGE_AD_USE",
                                                "PRIVILEGE_AD_WRITE",
                                                "PRIVILEGE_ANALYTICS_READ",
                                                "PRIVILEGE_AUDIT_READ",
                                                "PRIVILEGE_AUDIT_WRITE",
                                                "PRIVILEGE_AUTH_CACHE_READ",
                                                "PRIVILEGE_AUTH_CACHE_WRITE",
                                                "PRIVILEGE_CLUSTER_READ",
                                                "PRIVILEGE_CLUSTER_WRITE",
                                                "PRIVILEGE_DEBUG",
                                                "PRIVILEGE_DNS_READ",
                                                "PRIVILEGE_DNS_USE",
                                                "PRIVILEGE_DNS_WRITE",
                                                "PRIVILEGE_FILE_FULL_ACCESS",
                                                "PRIVILEGE_FS_ATTRIBUTES_READ",
                                                "PRIVILEGE_FS_DELETE_TREE_READ",
                                                "PRIVILEGE_FS_DELETE_TREE_WRITE",
                                                "PRIVILEGE_FS_LOCK_READ",
                                                "PRIVILEGE_FS_LOCK_WRITE",
                                                "PRIVILEGE_FS_SETTINGS_READ",
                                                "PRIVILEGE_FS_SETTINGS_WRITE",
                                                "PRIVILEGE_FTP_READ",
                                                "PRIVILEGE_FTP_WRITE",
                                                "PRIVILEGE_IDENTITY_MAPPING_READ",
                                                "PRIVILEGE_IDENTITY_MAPPING_WRITE",
                                                "PRIVILEGE_IDENTITY_READ",
                                                "PRIVILEGE_IDENTITY_WRITE",
                                                "PRIVILEGE_KERBEROS_KEYTAB_READ",
                                                "PRIVILEGE_KERBEROS_KEYTAB_WRITE",
                                                "PRIVILEGE_KERBEROS_SETTINGS_READ",
                                                "PRIVILEGE_KERBEROS_SETTINGS_WRITE",
                                                "PRIVILEGE_KV_READ",
                                                "PRIVILEGE_LDAP_READ",
                                                "PRIVILEGE_LDAP_USE",
                                                "PRIVILEGE_LDAP_WRITE",
                                                "PRIVILEGE_LOCAL_GROUP_READ",
                                                "PRIVILEGE_LOCAL_GROUP_WRITE",
                                                "PRIVILEGE_LOCAL_USER_READ",
                                                "PRIVILEGE_LOCAL_USER_WRITE",
                                                "PRIVILEGE_METRICS_READ",
                                                "PRIVILEGE_NETWORK_IP_ALLOCATION_READ",
                                                "PRIVILEGE_NETWORK_READ",
                                                "PRIVILEGE_NETWORK_WRITE",
                                                "PRIVILEGE_NFS_EXPORT_READ",
                                                "PRIVILEGE_NFS_EXPORT_WRITE",
                                                "PRIVILEGE_POWER_CYCLE",
                                                "PRIVILEGE_QUOTA_READ",
                                                "PRIVILEGE_QUOTA_WRITE",
                                                "PRIVILEGE_RECONCILER_READ",
                                                "PRIVILEGE_REPLICATION_REVERSE_RELATIONSHIP",
                                                "PRIVILEGE_REPLICATION_SOURCE_READ",
                                                "PRIVILEGE_REPLICATION_SOURCE_WRITE",
                                                "PRIVILEGE_REPLICATION_TARGET_READ",
                                                "PRIVILEGE_REPLICATION_TARGET_WRITE",
                                                "PRIVILEGE_ROLE_READ",
                                                "PRIVILEGE_ROLE_WRITE",
                                                "PRIVILEGE_SMB_SHARE_READ",
                                                "PRIVILEGE_SMB_SHARE_WRITE",
                                                "PRIVILEGE_SNAPSHOT_CALCULATE_USED_CAPACITY_READ",
                                                "PRIVILEGE_SNAPSHOT_DIFFERENCE_READ",
                                                "PRIVILEGE_SNAPSHOT_POLICY_READ",
                                                "PRIVILEGE_SNAPSHOT_POLICY_WRITE",
                                                "PRIVILEGE_SNAPSHOT_READ",
                                                "PRIVILEGE_SNAPSHOT_WRITE",
                                                "PRIVILEGE_SUPPORT_READ",
                                                "PRIVILEGE_SUPPORT_WRITE",
                                                "PRIVILEGE_TEST_ONLY",
                                                "PRIVILEGE_TIME_READ",
                                                "PRIVILEGE_TIME_WRITE",
                                                "PRIVILEGE_UNCONFIGURED_NODE_READ",
                                                "PRIVILEGE_UPGRADE_READ",
                                                "PRIVILEGE_UPGRADE_WRITE",
                                                "PRIVILEGE_SMB_FILE_HANDLE_READ",
                                                "PRIVILEGE_SMB_FILE_HANDLE_WRITE",
                                                "PRIVILEGE_SMB_SESSION_READ",
                                                "PRIVILEGE_SMB_SESSION_WRITE",
                                                "PRIVILEGE_REPLICATION_OBJECT_READ",
                                                "PRIVILEGE_REPLICATION_OBJECT_WRITE",
                                                "PRIVILEGE_ENCRYPTION_WRITE",
                                                "PRIVILEGE_ENCRYPTION_READ",
                                                "PRIVILEGE_NFS_SETTINGS_READ",
                                                "PRIVILEGE_NFS_SETTINGS_WRITE",
                                                "PRIVILEGE_SERVICE_PUBLIC_KEYS_WRITE",
                                                "PRIVILEGE_SERVICE_PUBLIC_KEYS_READ",
                                                "PRIVILEGE_METRICS_CONFIG_READ",
                                                "PRIVILEGE_METRICS_CONFIG_WRITE",
                                                "PRIVILEGE_REBOOT_USE",
                                                "PRIVILEGE_REBOOT_READ",
                                                "PRIVILEGE_CHECKSUMMING_READ",
                                                "PRIVILEGE_S3_SETTINGS_READ",
                                                "PRIVILEGE_S3_SETTINGS_WRITE",
                                                "PRIVILEGE_WEB_UI_SETTINGS_WRITE",
                                                "PRIVILEGE_S3_CREDENTIALS_READ",
                                                "PRIVILEGE_S3_CREDENTIALS_WRITE",
                                                "PRIVILEGE_TENANT_READ",
                                                "PRIVILEGE_TENANT_WRITE",
                                                "PRIVILEGE_SAML_SETTINGS_READ",
                                                "PRIVILEGE_SAML_SETTINGS_WRITE",
                                                "PRIVILEGE_S3_BUCKETS_READ",
                                                "PRIVILEGE_S3_BUCKETS_WRITE"
                                            ],
                                            "description": "Privileges the role has been granted:\n * `PRIVILEGE_AD_READ` - Read Qumulo Active Directory settings,\n * `PRIVILEGE_AD_USE` - Use Qumulo's APIs for performing queries against Active Directory,\n * `PRIVILEGE_AD_WRITE` - Modify Qumulo Active Directory settings,\n * `PRIVILEGE_ANALYTICS_READ` - Read cluster analytics,\n * `PRIVILEGE_AUDIT_READ` - Read audit settings,\n * `PRIVILEGE_AUDIT_WRITE` - Modify audit settings,\n * `PRIVILEGE_AUTH_CACHE_READ` - Internal-Only: Read authentication cache settings,\n * `PRIVILEGE_AUTH_CACHE_WRITE` - Internal-Only: Modify authentication cache settings,\n * `PRIVILEGE_CHECKSUMMING_READ` - View the status of checksumming,\n * `PRIVILEGE_CLUSTER_READ` - View nodes, disks, protection status, and SSL certificate,\n * `PRIVILEGE_CLUSTER_WRITE` - Modify cluster settings and disk/identify LEDs,\n * `PRIVILEGE_DEBUG` - Internal-Only: Perform debug operations on the cluster,\n * `PRIVILEGE_DNS_READ` - Read DNS settings,\n * `PRIVILEGE_DNS_USE` - Perform DNS lookups,\n * `PRIVILEGE_DNS_WRITE` - Modify DNS settings,\n * `PRIVILEGE_ENCRYPTION_READ` - View the status of at-rest-encryption,\n * `PRIVILEGE_ENCRYPTION_WRITE` - Rotate encryption keys for clusters with at-rest-encryption,\n * `PRIVILEGE_FILE_FULL_ACCESS` - Provides full access to all files regardless of permissions,\n * `PRIVILEGE_FS_ATTRIBUTES_READ` - Read file system statistics,\n * `PRIVILEGE_FS_DELETE_TREE_READ` - View the status of directory tree delete operations,\n * `PRIVILEGE_FS_DELETE_TREE_WRITE` - Use directory tree delete API. Granting this privilege allows the deletion of any file or directory on the cluster. File and directory permissions are not taken into account. Not required for `rm -r`.,\n * `PRIVILEGE_FS_LOCK_READ` - View NLM and SMB locks and waiters,\n * `PRIVILEGE_FS_LOCK_WRITE` - Release NLM and SMB locks,\n * `PRIVILEGE_FS_SETTINGS_READ` - View file system permissions settings,\n * `PRIVILEGE_FS_SETTINGS_WRITE` - Modify file system permissions mode,\n * `PRIVILEGE_FTP_READ` - View FTP status and settings,\n * `PRIVILEGE_FTP_WRITE` - Modify FTP status and settings,\n * `PRIVILEGE_IDENTITY_MAPPING_READ` - Get AD/LDAP User Defined Mappings,\n * `PRIVILEGE_IDENTITY_MAPPING_WRITE` - Set AD/LDAP User Defined Mappings,\n * `PRIVILEGE_IDENTITY_READ` - Use Qumulo's identity lookup and translation APIs,\n * `PRIVILEGE_IDENTITY_WRITE` - Modify identity attributes and clear authentication cache,\n * `PRIVILEGE_KERBEROS_KEYTAB_READ` - View Kerberos keytab,\n * `PRIVILEGE_KERBEROS_KEYTAB_WRITE` - Modify Kerberos keytab,\n * `PRIVILEGE_KERBEROS_SETTINGS_READ` - Read Kerberos settings,\n * `PRIVILEGE_KERBEROS_SETTINGS_WRITE` - Modify Kerberos settings,\n * `PRIVILEGE_KV_READ` - DEPRECATED: Read and delete KV store entries for all users,\n * `PRIVILEGE_LDAP_READ` - View LDAP settings,\n * `PRIVILEGE_LDAP_USE` - Use Qumulo's APIs for performing LDAP queries,\n * `PRIVILEGE_LDAP_WRITE` - Modify LDAP settings,\n * `PRIVILEGE_LOCAL_GROUP_READ` - View local groups and members,\n * `PRIVILEGE_LOCAL_GROUP_WRITE` - Modify local groups and membership,\n * `PRIVILEGE_LOCAL_USER_READ` - Get information about local users,\n * `PRIVILEGE_LOCAL_USER_WRITE` - Create and modify all local users,\n * `PRIVILEGE_METRICS_CONFIG_READ` - View metrics configuration,\n * `PRIVILEGE_METRICS_CONFIG_WRITE` - Modify metrics configuration,\n * `PRIVILEGE_METRICS_READ` - Get all metrics,\n * `PRIVILEGE_NETWORK_IP_ALLOCATION_READ` - View network IP address allocations,\n * `PRIVILEGE_NETWORK_READ` - Read network status and settings,\n * `PRIVILEGE_NETWORK_WRITE` - Modify network configuration,\n * `PRIVILEGE_NFS_EXPORT_READ` - View configuration of NFS exports,\n * `PRIVILEGE_NFS_EXPORT_WRITE` - Create, modify, and delete NFS exports,\n * `PRIVILEGE_NFS_SETTINGS_READ` - Internal-Only: View NFS server settings,\n * `PRIVILEGE_NFS_SETTINGS_WRITE` - Internal-Only: Modify NFS server settings,\n * `PRIVILEGE_POWER_CYCLE` - Shutdown and reboot nodes,\n * `PRIVILEGE_QUOTA_READ` - View all file system quotas,\n * `PRIVILEGE_QUOTA_WRITE` - Create, modify, and delete file system quotas,\n * `PRIVILEGE_REBOOT_READ` - View Reboot Status,\n * `PRIVILEGE_REBOOT_USE` - Perform Reboots,\n * `PRIVILEGE_RECONCILER_READ` - View reconciler status and metrics,\n * `PRIVILEGE_REPLICATION_OBJECT_READ` - View object store relationship settings and status,\n * `PRIVILEGE_REPLICATION_OBJECT_WRITE` - Create, modify, and delete object store relationships. Granting this privilege allows overwriting existing data, replicating, and potentially accessing any data on the cluster regardless of file and directory permissions.,\n * `PRIVILEGE_REPLICATION_REVERSE_RELATIONSHIP` - Reverse a source and target relationship,\n * `PRIVILEGE_REPLICATION_SOURCE_READ` - View source relationship settings and status,\n * `PRIVILEGE_REPLICATION_SOURCE_WRITE` - Create, modify, and delete source relationships. Granting this privilege allows replicating and potentially accessing any data on the cluster regardless of file and directory permissions.,\n * `PRIVILEGE_REPLICATION_TARGET_READ` - View target relationship settings and status,\n * `PRIVILEGE_REPLICATION_TARGET_WRITE` - Create, modify, and delete target relationships. Granting this privilege allows overwriting any data on the cluster regardless of file and directory permissions.,\n * `PRIVILEGE_ROLE_READ` - View roles and assignments,\n * `PRIVILEGE_ROLE_WRITE` - Create and modify roles and assignments,\n * `PRIVILEGE_S3_BUCKETS_READ` - View all S3 buckets present in the system,\n * `PRIVILEGE_S3_BUCKETS_WRITE` - Create or delete any S3 bucket in the system,\n * `PRIVILEGE_S3_CREDENTIALS_READ` - View any S3 access key present in the system,\n * `PRIVILEGE_S3_CREDENTIALS_WRITE` - Create or delete S3 access keys for any user in the system,\n * `PRIVILEGE_S3_SETTINGS_READ` - View S3 server settings,\n * `PRIVILEGE_S3_SETTINGS_WRITE` - Modify S3 server settings,\n * `PRIVILEGE_SAML_SETTINGS_READ` - View SAML integration settings,\n * `PRIVILEGE_SAML_SETTINGS_WRITE` - Modify SAML integration settings,\n * `PRIVILEGE_SERVICE_PUBLIC_KEYS_READ` - Internal-Only: Read public keys,\n * `PRIVILEGE_SERVICE_PUBLIC_KEYS_WRITE` - Internal-Only: Write public keys,\n * `PRIVILEGE_SMB_FILE_HANDLE_READ` - List open SMB file handles,\n * `PRIVILEGE_SMB_FILE_HANDLE_WRITE` - Force close an open SMB file handle,\n * `PRIVILEGE_SMB_SESSION_READ` - List logged on SMB sessions,\n * `PRIVILEGE_SMB_SESSION_WRITE` - Force close a logged on SMB session,\n * `PRIVILEGE_SMB_SHARE_READ` - View configuration of SMB shares and SMB server settings,\n * `PRIVILEGE_SMB_SHARE_WRITE` - Create, modify, and delete SMB shares and SMB server settings,\n * `PRIVILEGE_SNAPSHOT_CALCULATE_USED_CAPACITY_READ` - Recalculate capacity usage of snapshots,\n * `PRIVILEGE_SNAPSHOT_DIFFERENCE_READ` - View the changes between snapshots,\n * `PRIVILEGE_SNAPSHOT_POLICY_READ` - View snapshot policies and status,\n * `PRIVILEGE_SNAPSHOT_POLICY_WRITE` - Create, modify, and delete snapshot policies,\n * `PRIVILEGE_SNAPSHOT_READ` - List snapshots and view their status and cached capacity. Does not affect the visibility of the virtual `.snapshot` directories,\n * `PRIVILEGE_SNAPSHOT_WRITE` - Create, modify, and delete snapshots,\n * `PRIVILEGE_SUPPORT_READ` - View support configuration and status,\n * `PRIVILEGE_SUPPORT_WRITE` - Modify cloud-based monitoring and remote management,\n * `PRIVILEGE_TENANT_READ` - View any tenant information,\n * `PRIVILEGE_TENANT_WRITE` - Create, edit or delete tenants,\n * `PRIVILEGE_TEST_ONLY` - Test only actions,\n * `PRIVILEGE_TIME_READ` - View time and time settings,\n * `PRIVILEGE_TIME_WRITE` - Modify time settings,\n * `PRIVILEGE_UNCONFIGURED_NODE_READ` - List unconfigured Qumulo nodes,\n * `PRIVILEGE_UPGRADE_READ` - View upgrade configuration and status,\n * `PRIVILEGE_UPGRADE_WRITE` - Perform upgrades,\n * `PRIVILEGE_WEB_UI_SETTINGS_WRITE` - Modify web UI settings"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/auth/roles/{role_name}": {
            "get": {
                "summary": "Retrieve information about the role.",
                "parameters": [
                    {
                        "name": "role_name",
                        "in": "path",
                        "description": "The name of the role (This page URL-encodes the name for you)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "description": {
                                            "type": "string"
                                        },
                                        "privileges": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "enum": [
                                                    "PRIVILEGE_AD_READ",
                                                    "PRIVILEGE_AD_USE",
                                                    "PRIVILEGE_AD_WRITE",
                                                    "PRIVILEGE_ANALYTICS_READ",
                                                    "PRIVILEGE_AUDIT_READ",
                                                    "PRIVILEGE_AUDIT_WRITE",
                                                    "PRIVILEGE_AUTH_CACHE_READ",
                                                    "PRIVILEGE_AUTH_CACHE_WRITE",
                                                    "PRIVILEGE_CLUSTER_READ",
                                                    "PRIVILEGE_CLUSTER_WRITE",
                                                    "PRIVILEGE_DEBUG",
                                                    "PRIVILEGE_DNS_READ",
                                                    "PRIVILEGE_DNS_USE",
                                                    "PRIVILEGE_DNS_WRITE",
                                                    "PRIVILEGE_FILE_FULL_ACCESS",
                                                    "PRIVILEGE_FS_ATTRIBUTES_READ",
                                                    "PRIVILEGE_FS_DELETE_TREE_READ",
                                                    "PRIVILEGE_FS_DELETE_TREE_WRITE",
                                                    "PRIVILEGE_FS_LOCK_READ",
                                                    "PRIVILEGE_FS_LOCK_WRITE",
                                                    "PRIVILEGE_FS_SETTINGS_READ",
                                                    "PRIVILEGE_FS_SETTINGS_WRITE",
                                                    "PRIVILEGE_FTP_READ",
                                                    "PRIVILEGE_FTP_WRITE",
                                                    "PRIVILEGE_IDENTITY_MAPPING_READ",
                                                    "PRIVILEGE_IDENTITY_MAPPING_WRITE",
                                                    "PRIVILEGE_IDENTITY_READ",
                                                    "PRIVILEGE_IDENTITY_WRITE",
                                                    "PRIVILEGE_KERBEROS_KEYTAB_READ",
                                                    "PRIVILEGE_KERBEROS_KEYTAB_WRITE",
                                                    "PRIVILEGE_KERBEROS_SETTINGS_READ",
                                                    "PRIVILEGE_KERBEROS_SETTINGS_WRITE",
                                                    "PRIVILEGE_KV_READ",
                                                    "PRIVILEGE_LDAP_READ",
                                                    "PRIVILEGE_LDAP_USE",
                                                    "PRIVILEGE_LDAP_WRITE",
                                                    "PRIVILEGE_LOCAL_GROUP_READ",
                                                    "PRIVILEGE_LOCAL_GROUP_WRITE",
                                                    "PRIVILEGE_LOCAL_USER_READ",
                                                    "PRIVILEGE_LOCAL_USER_WRITE",
                                                    "PRIVILEGE_METRICS_READ",
                                                    "PRIVILEGE_NETWORK_IP_ALLOCATION_READ",
                                                    "PRIVILEGE_NETWORK_READ",
                                                    "PRIVILEGE_NETWORK_WRITE",
                                                    "PRIVILEGE_NFS_EXPORT_READ",
                                                    "PRIVILEGE_NFS_EXPORT_WRITE",
                                                    "PRIVILEGE_POWER_CYCLE",
                                                    "PRIVILEGE_QUOTA_READ",
                                                    "PRIVILEGE_QUOTA_WRITE",
                                                    "PRIVILEGE_RECONCILER_READ",
                                                    "PRIVILEGE_REPLICATION_REVERSE_RELATIONSHIP",
                                                    "PRIVILEGE_REPLICATION_SOURCE_READ",
                                                    "PRIVILEGE_REPLICATION_SOURCE_WRITE",
                                                    "PRIVILEGE_REPLICATION_TARGET_READ",
                                                    "PRIVILEGE_REPLICATION_TARGET_WRITE",
                                                    "PRIVILEGE_ROLE_READ",
                                                    "PRIVILEGE_ROLE_WRITE",
                                                    "PRIVILEGE_SMB_SHARE_READ",
                                                    "PRIVILEGE_SMB_SHARE_WRITE",
                                                    "PRIVILEGE_SNAPSHOT_CALCULATE_USED_CAPACITY_READ",
                                                    "PRIVILEGE_SNAPSHOT_DIFFERENCE_READ",
                                                    "PRIVILEGE_SNAPSHOT_POLICY_READ",
                                                    "PRIVILEGE_SNAPSHOT_POLICY_WRITE",
                                                    "PRIVILEGE_SNAPSHOT_READ",
                                                    "PRIVILEGE_SNAPSHOT_WRITE",
                                                    "PRIVILEGE_SUPPORT_READ",
                                                    "PRIVILEGE_SUPPORT_WRITE",
                                                    "PRIVILEGE_TEST_ONLY",
                                                    "PRIVILEGE_TIME_READ",
                                                    "PRIVILEGE_TIME_WRITE",
                                                    "PRIVILEGE_UNCONFIGURED_NODE_READ",
                                                    "PRIVILEGE_UPGRADE_READ",
                                                    "PRIVILEGE_UPGRADE_WRITE",
                                                    "PRIVILEGE_SMB_FILE_HANDLE_READ",
                                                    "PRIVILEGE_SMB_FILE_HANDLE_WRITE",
                                                    "PRIVILEGE_SMB_SESSION_READ",
                                                    "PRIVILEGE_SMB_SESSION_WRITE",
                                                    "PRIVILEGE_REPLICATION_OBJECT_READ",
                                                    "PRIVILEGE_REPLICATION_OBJECT_WRITE",
                                                    "PRIVILEGE_ENCRYPTION_WRITE",
                                                    "PRIVILEGE_ENCRYPTION_READ",
                                                    "PRIVILEGE_NFS_SETTINGS_READ",
                                                    "PRIVILEGE_NFS_SETTINGS_WRITE",
                                                    "PRIVILEGE_SERVICE_PUBLIC_KEYS_WRITE",
                                                    "PRIVILEGE_SERVICE_PUBLIC_KEYS_READ",
                                                    "PRIVILEGE_METRICS_CONFIG_READ",
                                                    "PRIVILEGE_METRICS_CONFIG_WRITE",
                                                    "PRIVILEGE_REBOOT_USE",
                                                    "PRIVILEGE_REBOOT_READ",
                                                    "PRIVILEGE_CHECKSUMMING_READ",
                                                    "PRIVILEGE_S3_SETTINGS_READ",
                                                    "PRIVILEGE_S3_SETTINGS_WRITE",
                                                    "PRIVILEGE_WEB_UI_SETTINGS_WRITE",
                                                    "PRIVILEGE_S3_CREDENTIALS_READ",
                                                    "PRIVILEGE_S3_CREDENTIALS_WRITE",
                                                    "PRIVILEGE_TENANT_READ",
                                                    "PRIVILEGE_TENANT_WRITE",
                                                    "PRIVILEGE_SAML_SETTINGS_READ",
                                                    "PRIVILEGE_SAML_SETTINGS_WRITE",
                                                    "PRIVILEGE_S3_BUCKETS_READ",
                                                    "PRIVILEGE_S3_BUCKETS_WRITE"
                                                ],
                                                "description": "Privileges the role has been granted:\n * `PRIVILEGE_AD_READ` - Read Qumulo Active Directory settings,\n * `PRIVILEGE_AD_USE` - Use Qumulo's APIs for performing queries against Active Directory,\n * `PRIVILEGE_AD_WRITE` - Modify Qumulo Active Directory settings,\n * `PRIVILEGE_ANALYTICS_READ` - Read cluster analytics,\n * `PRIVILEGE_AUDIT_READ` - Read audit settings,\n * `PRIVILEGE_AUDIT_WRITE` - Modify audit settings,\n * `PRIVILEGE_AUTH_CACHE_READ` - Internal-Only: Read authentication cache settings,\n * `PRIVILEGE_AUTH_CACHE_WRITE` - Internal-Only: Modify authentication cache settings,\n * `PRIVILEGE_CHECKSUMMING_READ` - View the status of checksumming,\n * `PRIVILEGE_CLUSTER_READ` - View nodes, disks, protection status, and SSL certificate,\n * `PRIVILEGE_CLUSTER_WRITE` - Modify cluster settings and disk/identify LEDs,\n * `PRIVILEGE_DEBUG` - Internal-Only: Perform debug operations on the cluster,\n * `PRIVILEGE_DNS_READ` - Read DNS settings,\n * `PRIVILEGE_DNS_USE` - Perform DNS lookups,\n * `PRIVILEGE_DNS_WRITE` - Modify DNS settings,\n * `PRIVILEGE_ENCRYPTION_READ` - View the status of at-rest-encryption,\n * `PRIVILEGE_ENCRYPTION_WRITE` - Rotate encryption keys for clusters with at-rest-encryption,\n * `PRIVILEGE_FILE_FULL_ACCESS` - Provides full access to all files regardless of permissions,\n * `PRIVILEGE_FS_ATTRIBUTES_READ` - Read file system statistics,\n * `PRIVILEGE_FS_DELETE_TREE_READ` - View the status of directory tree delete operations,\n * `PRIVILEGE_FS_DELETE_TREE_WRITE` - Use directory tree delete API. Granting this privilege allows the deletion of any file or directory on the cluster. File and directory permissions are not taken into account. Not required for `rm -r`.,\n * `PRIVILEGE_FS_LOCK_READ` - View NLM and SMB locks and waiters,\n * `PRIVILEGE_FS_LOCK_WRITE` - Release NLM and SMB locks,\n * `PRIVILEGE_FS_SETTINGS_READ` - View file system permissions settings,\n * `PRIVILEGE_FS_SETTINGS_WRITE` - Modify file system permissions mode,\n * `PRIVILEGE_FTP_READ` - View FTP status and settings,\n * `PRIVILEGE_FTP_WRITE` - Modify FTP status and settings,\n * `PRIVILEGE_IDENTITY_MAPPING_READ` - Get AD/LDAP User Defined Mappings,\n * `PRIVILEGE_IDENTITY_MAPPING_WRITE` - Set AD/LDAP User Defined Mappings,\n * `PRIVILEGE_IDENTITY_READ` - Use Qumulo's identity lookup and translation APIs,\n * `PRIVILEGE_IDENTITY_WRITE` - Modify identity attributes and clear authentication cache,\n * `PRIVILEGE_KERBEROS_KEYTAB_READ` - View Kerberos keytab,\n * `PRIVILEGE_KERBEROS_KEYTAB_WRITE` - Modify Kerberos keytab,\n * `PRIVILEGE_KERBEROS_SETTINGS_READ` - Read Kerberos settings,\n * `PRIVILEGE_KERBEROS_SETTINGS_WRITE` - Modify Kerberos settings,\n * `PRIVILEGE_KV_READ` - DEPRECATED: Read and delete KV store entries for all users,\n * `PRIVILEGE_LDAP_READ` - View LDAP settings,\n * `PRIVILEGE_LDAP_USE` - Use Qumulo's APIs for performing LDAP queries,\n * `PRIVILEGE_LDAP_WRITE` - Modify LDAP settings,\n * `PRIVILEGE_LOCAL_GROUP_READ` - View local groups and members,\n * `PRIVILEGE_LOCAL_GROUP_WRITE` - Modify local groups and membership,\n * `PRIVILEGE_LOCAL_USER_READ` - Get information about local users,\n * `PRIVILEGE_LOCAL_USER_WRITE` - Create and modify all local users,\n * `PRIVILEGE_METRICS_CONFIG_READ` - View metrics configuration,\n * `PRIVILEGE_METRICS_CONFIG_WRITE` - Modify metrics configuration,\n * `PRIVILEGE_METRICS_READ` - Get all metrics,\n * `PRIVILEGE_NETWORK_IP_ALLOCATION_READ` - View network IP address allocations,\n * `PRIVILEGE_NETWORK_READ` - Read network status and settings,\n * `PRIVILEGE_NETWORK_WRITE` - Modify network configuration,\n * `PRIVILEGE_NFS_EXPORT_READ` - View configuration of NFS exports,\n * `PRIVILEGE_NFS_EXPORT_WRITE` - Create, modify, and delete NFS exports,\n * `PRIVILEGE_NFS_SETTINGS_READ` - Internal-Only: View NFS server settings,\n * `PRIVILEGE_NFS_SETTINGS_WRITE` - Internal-Only: Modify NFS server settings,\n * `PRIVILEGE_POWER_CYCLE` - Shutdown and reboot nodes,\n * `PRIVILEGE_QUOTA_READ` - View all file system quotas,\n * `PRIVILEGE_QUOTA_WRITE` - Create, modify, and delete file system quotas,\n * `PRIVILEGE_REBOOT_READ` - View Reboot Status,\n * `PRIVILEGE_REBOOT_USE` - Perform Reboots,\n * `PRIVILEGE_RECONCILER_READ` - View reconciler status and metrics,\n * `PRIVILEGE_REPLICATION_OBJECT_READ` - View object store relationship settings and status,\n * `PRIVILEGE_REPLICATION_OBJECT_WRITE` - Create, modify, and delete object store relationships. Granting this privilege allows overwriting existing data, replicating, and potentially accessing any data on the cluster regardless of file and directory permissions.,\n * `PRIVILEGE_REPLICATION_REVERSE_RELATIONSHIP` - Reverse a source and target relationship,\n * `PRIVILEGE_REPLICATION_SOURCE_READ` - View source relationship settings and status,\n * `PRIVILEGE_REPLICATION_SOURCE_WRITE` - Create, modify, and delete source relationships. Granting this privilege allows replicating and potentially accessing any data on the cluster regardless of file and directory permissions.,\n * `PRIVILEGE_REPLICATION_TARGET_READ` - View target relationship settings and status,\n * `PRIVILEGE_REPLICATION_TARGET_WRITE` - Create, modify, and delete target relationships. Granting this privilege allows overwriting any data on the cluster regardless of file and directory permissions.,\n * `PRIVILEGE_ROLE_READ` - View roles and assignments,\n * `PRIVILEGE_ROLE_WRITE` - Create and modify roles and assignments,\n * `PRIVILEGE_S3_BUCKETS_READ` - View all S3 buckets present in the system,\n * `PRIVILEGE_S3_BUCKETS_WRITE` - Create or delete any S3 bucket in the system,\n * `PRIVILEGE_S3_CREDENTIALS_READ` - View any S3 access key present in the system,\n * `PRIVILEGE_S3_CREDENTIALS_WRITE` - Create or delete S3 access keys for any user in the system,\n * `PRIVILEGE_S3_SETTINGS_READ` - View S3 server settings,\n * `PRIVILEGE_S3_SETTINGS_WRITE` - Modify S3 server settings,\n * `PRIVILEGE_SAML_SETTINGS_READ` - View SAML integration settings,\n * `PRIVILEGE_SAML_SETTINGS_WRITE` - Modify SAML integration settings,\n * `PRIVILEGE_SERVICE_PUBLIC_KEYS_READ` - Internal-Only: Read public keys,\n * `PRIVILEGE_SERVICE_PUBLIC_KEYS_WRITE` - Internal-Only: Write public keys,\n * `PRIVILEGE_SMB_FILE_HANDLE_READ` - List open SMB file handles,\n * `PRIVILEGE_SMB_FILE_HANDLE_WRITE` - Force close an open SMB file handle,\n * `PRIVILEGE_SMB_SESSION_READ` - List logged on SMB sessions,\n * `PRIVILEGE_SMB_SESSION_WRITE` - Force close a logged on SMB session,\n * `PRIVILEGE_SMB_SHARE_READ` - View configuration of SMB shares and SMB server settings,\n * `PRIVILEGE_SMB_SHARE_WRITE` - Create, modify, and delete SMB shares and SMB server settings,\n * `PRIVILEGE_SNAPSHOT_CALCULATE_USED_CAPACITY_READ` - Recalculate capacity usage of snapshots,\n * `PRIVILEGE_SNAPSHOT_DIFFERENCE_READ` - View the changes between snapshots,\n * `PRIVILEGE_SNAPSHOT_POLICY_READ` - View snapshot policies and status,\n * `PRIVILEGE_SNAPSHOT_POLICY_WRITE` - Create, modify, and delete snapshot policies,\n * `PRIVILEGE_SNAPSHOT_READ` - List snapshots and view their status and cached capacity. Does not affect the visibility of the virtual `.snapshot` directories,\n * `PRIVILEGE_SNAPSHOT_WRITE` - Create, modify, and delete snapshots,\n * `PRIVILEGE_SUPPORT_READ` - View support configuration and status,\n * `PRIVILEGE_SUPPORT_WRITE` - Modify cloud-based monitoring and remote management,\n * `PRIVILEGE_TENANT_READ` - View any tenant information,\n * `PRIVILEGE_TENANT_WRITE` - Create, edit or delete tenants,\n * `PRIVILEGE_TEST_ONLY` - Test only actions,\n * `PRIVILEGE_TIME_READ` - View time and time settings,\n * `PRIVILEGE_TIME_WRITE` - Modify time settings,\n * `PRIVILEGE_UNCONFIGURED_NODE_READ` - List unconfigured Qumulo nodes,\n * `PRIVILEGE_UPGRADE_READ` - View upgrade configuration and status,\n * `PRIVILEGE_UPGRADE_WRITE` - Perform upgrades,\n * `PRIVILEGE_WEB_UI_SETTINGS_WRITE` - Modify web UI settings"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "auth"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            },
            "put": {
                "summary": "Modify a role.",
                "parameters": [
                    {
                        "name": "role_name",
                        "in": "path",
                        "description": "The name of the role (This page URL-encodes the name for you)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "description": {
                                            "type": "string"
                                        },
                                        "privileges": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "enum": [
                                                    "PRIVILEGE_AD_READ",
                                                    "PRIVILEGE_AD_USE",
                                                    "PRIVILEGE_AD_WRITE",
                                                    "PRIVILEGE_ANALYTICS_READ",
                                                    "PRIVILEGE_AUDIT_READ",
                                                    "PRIVILEGE_AUDIT_WRITE",
                                                    "PRIVILEGE_AUTH_CACHE_READ",
                                                    "PRIVILEGE_AUTH_CACHE_WRITE",
                                                    "PRIVILEGE_CLUSTER_READ",
                                                    "PRIVILEGE_CLUSTER_WRITE",
                                                    "PRIVILEGE_DEBUG",
                                                    "PRIVILEGE_DNS_READ",
                                                    "PRIVILEGE_DNS_USE",
                                                    "PRIVILEGE_DNS_WRITE",
                                                    "PRIVILEGE_FILE_FULL_ACCESS",
                                                    "PRIVILEGE_FS_ATTRIBUTES_READ",
                                                    "PRIVILEGE_FS_DELETE_TREE_READ",
                                                    "PRIVILEGE_FS_DELETE_TREE_WRITE",
                                                    "PRIVILEGE_FS_LOCK_READ",
                                                    "PRIVILEGE_FS_LOCK_WRITE",
                                                    "PRIVILEGE_FS_SETTINGS_READ",
                                                    "PRIVILEGE_FS_SETTINGS_WRITE",
                                                    "PRIVILEGE_FTP_READ",
                                                    "PRIVILEGE_FTP_WRITE",
                                                    "PRIVILEGE_IDENTITY_MAPPING_READ",
                                                    "PRIVILEGE_IDENTITY_MAPPING_WRITE",
                                                    "PRIVILEGE_IDENTITY_READ",
                                                    "PRIVILEGE_IDENTITY_WRITE",
                                                    "PRIVILEGE_KERBEROS_KEYTAB_READ",
                                                    "PRIVILEGE_KERBEROS_KEYTAB_WRITE",
                                                    "PRIVILEGE_KERBEROS_SETTINGS_READ",
                                                    "PRIVILEGE_KERBEROS_SETTINGS_WRITE",
                                                    "PRIVILEGE_KV_READ",
                                                    "PRIVILEGE_LDAP_READ",
                                                    "PRIVILEGE_LDAP_USE",
                                                    "PRIVILEGE_LDAP_WRITE",
                                                    "PRIVILEGE_LOCAL_GROUP_READ",
                                                    "PRIVILEGE_LOCAL_GROUP_WRITE",
                                                    "PRIVILEGE_LOCAL_USER_READ",
                                                    "PRIVILEGE_LOCAL_USER_WRITE",
                                                    "PRIVILEGE_METRICS_READ",
                                                    "PRIVILEGE_NETWORK_IP_ALLOCATION_READ",
                                                    "PRIVILEGE_NETWORK_READ",
                                                    "PRIVILEGE_NETWORK_WRITE",
                                                    "PRIVILEGE_NFS_EXPORT_READ",
                                                    "PRIVILEGE_NFS_EXPORT_WRITE",
                                                    "PRIVILEGE_POWER_CYCLE",
                                                    "PRIVILEGE_QUOTA_READ",
                                                    "PRIVILEGE_QUOTA_WRITE",
                                                    "PRIVILEGE_RECONCILER_READ",
                                                    "PRIVILEGE_REPLICATION_REVERSE_RELATIONSHIP",
                                                    "PRIVILEGE_REPLICATION_SOURCE_READ",
                                                    "PRIVILEGE_REPLICATION_SOURCE_WRITE",
                                                    "PRIVILEGE_REPLICATION_TARGET_READ",
                                                    "PRIVILEGE_REPLICATION_TARGET_WRITE",
                                                    "PRIVILEGE_ROLE_READ",
                                                    "PRIVILEGE_ROLE_WRITE",
                                                    "PRIVILEGE_SMB_SHARE_READ",
                                                    "PRIVILEGE_SMB_SHARE_WRITE",
                                                    "PRIVILEGE_SNAPSHOT_CALCULATE_USED_CAPACITY_READ",
                                                    "PRIVILEGE_SNAPSHOT_DIFFERENCE_READ",
                                                    "PRIVILEGE_SNAPSHOT_POLICY_READ",
                                                    "PRIVILEGE_SNAPSHOT_POLICY_WRITE",
                                                    "PRIVILEGE_SNAPSHOT_READ",
                                                    "PRIVILEGE_SNAPSHOT_WRITE",
                                                    "PRIVILEGE_SUPPORT_READ",
                                                    "PRIVILEGE_SUPPORT_WRITE",
                                                    "PRIVILEGE_TEST_ONLY",
                                                    "PRIVILEGE_TIME_READ",
                                                    "PRIVILEGE_TIME_WRITE",
                                                    "PRIVILEGE_UNCONFIGURED_NODE_READ",
                                                    "PRIVILEGE_UPGRADE_READ",
                                                    "PRIVILEGE_UPGRADE_WRITE",
                                                    "PRIVILEGE_SMB_FILE_HANDLE_READ",
                                                    "PRIVILEGE_SMB_FILE_HANDLE_WRITE",
                                                    "PRIVILEGE_SMB_SESSION_READ",
                                                    "PRIVILEGE_SMB_SESSION_WRITE",
                                                    "PRIVILEGE_REPLICATION_OBJECT_READ",
                                                    "PRIVILEGE_REPLICATION_OBJECT_WRITE",
                                                    "PRIVILEGE_ENCRYPTION_WRITE",
                                                    "PRIVILEGE_ENCRYPTION_READ",
                                                    "PRIVILEGE_NFS_SETTINGS_READ",
                                                    "PRIVILEGE_NFS_SETTINGS_WRITE",
                                                    "PRIVILEGE_SERVICE_PUBLIC_KEYS_WRITE",
                                                    "PRIVILEGE_SERVICE_PUBLIC_KEYS_READ",
                                                    "PRIVILEGE_METRICS_CONFIG_READ",
                                                    "PRIVILEGE_METRICS_CONFIG_WRITE",
                                                    "PRIVILEGE_REBOOT_USE",
                                                    "PRIVILEGE_REBOOT_READ",
                                                    "PRIVILEGE_CHECKSUMMING_READ",
                                                    "PRIVILEGE_S3_SETTINGS_READ",
                                                    "PRIVILEGE_S3_SETTINGS_WRITE",
                                                    "PRIVILEGE_WEB_UI_SETTINGS_WRITE",
                                                    "PRIVILEGE_S3_CREDENTIALS_READ",
                                                    "PRIVILEGE_S3_CREDENTIALS_WRITE",
                                                    "PRIVILEGE_TENANT_READ",
                                                    "PRIVILEGE_TENANT_WRITE",
                                                    "PRIVILEGE_SAML_SETTINGS_READ",
                                                    "PRIVILEGE_SAML_SETTINGS_WRITE",
                                                    "PRIVILEGE_S3_BUCKETS_READ",
                                                    "PRIVILEGE_S3_BUCKETS_WRITE"
                                                ],
                                                "description": "Privileges the role has been granted:\n * `PRIVILEGE_AD_READ` - Read Qumulo Active Directory settings,\n * `PRIVILEGE_AD_USE` - Use Qumulo's APIs for performing queries against Active Directory,\n * `PRIVILEGE_AD_WRITE` - Modify Qumulo Active Directory settings,\n * `PRIVILEGE_ANALYTICS_READ` - Read cluster analytics,\n * `PRIVILEGE_AUDIT_READ` - Read audit settings,\n * `PRIVILEGE_AUDIT_WRITE` - Modify audit settings,\n * `PRIVILEGE_AUTH_CACHE_READ` - Internal-Only: Read authentication cache settings,\n * `PRIVILEGE_AUTH_CACHE_WRITE` - Internal-Only: Modify authentication cache settings,\n * `PRIVILEGE_CHECKSUMMING_READ` - View the status of checksumming,\n * `PRIVILEGE_CLUSTER_READ` - View nodes, disks, protection status, and SSL certificate,\n * `PRIVILEGE_CLUSTER_WRITE` - Modify cluster settings and disk/identify LEDs,\n * `PRIVILEGE_DEBUG` - Internal-Only: Perform debug operations on the cluster,\n * `PRIVILEGE_DNS_READ` - Read DNS settings,\n * `PRIVILEGE_DNS_USE` - Perform DNS lookups,\n * `PRIVILEGE_DNS_WRITE` - Modify DNS settings,\n * `PRIVILEGE_ENCRYPTION_READ` - View the status of at-rest-encryption,\n * `PRIVILEGE_ENCRYPTION_WRITE` - Rotate encryption keys for clusters with at-rest-encryption,\n * `PRIVILEGE_FILE_FULL_ACCESS` - Provides full access to all files regardless of permissions,\n * `PRIVILEGE_FS_ATTRIBUTES_READ` - Read file system statistics,\n * `PRIVILEGE_FS_DELETE_TREE_READ` - View the status of directory tree delete operations,\n * `PRIVILEGE_FS_DELETE_TREE_WRITE` - Use directory tree delete API. Granting this privilege allows the deletion of any file or directory on the cluster. File and directory permissions are not taken into account. Not required for `rm -r`.,\n * `PRIVILEGE_FS_LOCK_READ` - View NLM and SMB locks and waiters,\n * `PRIVILEGE_FS_LOCK_WRITE` - Release NLM and SMB locks,\n * `PRIVILEGE_FS_SETTINGS_READ` - View file system permissions settings,\n * `PRIVILEGE_FS_SETTINGS_WRITE` - Modify file system permissions mode,\n * `PRIVILEGE_FTP_READ` - View FTP status and settings,\n * `PRIVILEGE_FTP_WRITE` - Modify FTP status and settings,\n * `PRIVILEGE_IDENTITY_MAPPING_READ` - Get AD/LDAP User Defined Mappings,\n * `PRIVILEGE_IDENTITY_MAPPING_WRITE` - Set AD/LDAP User Defined Mappings,\n * `PRIVILEGE_IDENTITY_READ` - Use Qumulo's identity lookup and translation APIs,\n * `PRIVILEGE_IDENTITY_WRITE` - Modify identity attributes and clear authentication cache,\n * `PRIVILEGE_KERBEROS_KEYTAB_READ` - View Kerberos keytab,\n * `PRIVILEGE_KERBEROS_KEYTAB_WRITE` - Modify Kerberos keytab,\n * `PRIVILEGE_KERBEROS_SETTINGS_READ` - Read Kerberos settings,\n * `PRIVILEGE_KERBEROS_SETTINGS_WRITE` - Modify Kerberos settings,\n * `PRIVILEGE_KV_READ` - DEPRECATED: Read and delete KV store entries for all users,\n * `PRIVILEGE_LDAP_READ` - View LDAP settings,\n * `PRIVILEGE_LDAP_USE` - Use Qumulo's APIs for performing LDAP queries,\n * `PRIVILEGE_LDAP_WRITE` - Modify LDAP settings,\n * `PRIVILEGE_LOCAL_GROUP_READ` - View local groups and members,\n * `PRIVILEGE_LOCAL_GROUP_WRITE` - Modify local groups and membership,\n * `PRIVILEGE_LOCAL_USER_READ` - Get information about local users,\n * `PRIVILEGE_LOCAL_USER_WRITE` - Create and modify all local users,\n * `PRIVILEGE_METRICS_CONFIG_READ` - View metrics configuration,\n * `PRIVILEGE_METRICS_CONFIG_WRITE` - Modify metrics configuration,\n * `PRIVILEGE_METRICS_READ` - Get all metrics,\n * `PRIVILEGE_NETWORK_IP_ALLOCATION_READ` - View network IP address allocations,\n * `PRIVILEGE_NETWORK_READ` - Read network status and settings,\n * `PRIVILEGE_NETWORK_WRITE` - Modify network configuration,\n * `PRIVILEGE_NFS_EXPORT_READ` - View configuration of NFS exports,\n * `PRIVILEGE_NFS_EXPORT_WRITE` - Create, modify, and delete NFS exports,\n * `PRIVILEGE_NFS_SETTINGS_READ` - Internal-Only: View NFS server settings,\n * `PRIVILEGE_NFS_SETTINGS_WRITE` - Internal-Only: Modify NFS server settings,\n * `PRIVILEGE_POWER_CYCLE` - Shutdown and reboot nodes,\n * `PRIVILEGE_QUOTA_READ` - View all file system quotas,\n * `PRIVILEGE_QUOTA_WRITE` - Create, modify, and delete file system quotas,\n * `PRIVILEGE_REBOOT_READ` - View Reboot Status,\n * `PRIVILEGE_REBOOT_USE` - Perform Reboots,\n * `PRIVILEGE_RECONCILER_READ` - View reconciler status and metrics,\n * `PRIVILEGE_REPLICATION_OBJECT_READ` - View object store relationship settings and status,\n * `PRIVILEGE_REPLICATION_OBJECT_WRITE` - Create, modify, and delete object store relationships. Granting this privilege allows overwriting existing data, replicating, and potentially accessing any data on the cluster regardless of file and directory permissions.,\n * `PRIVILEGE_REPLICATION_REVERSE_RELATIONSHIP` - Reverse a source and target relationship,\n * `PRIVILEGE_REPLICATION_SOURCE_READ` - View source relationship settings and status,\n * `PRIVILEGE_REPLICATION_SOURCE_WRITE` - Create, modify, and delete source relationships. Granting this privilege allows replicating and potentially accessing any data on the cluster regardless of file and directory permissions.,\n * `PRIVILEGE_REPLICATION_TARGET_READ` - View target relationship settings and status,\n * `PRIVILEGE_REPLICATION_TARGET_WRITE` - Create, modify, and delete target relationships. Granting this privilege allows overwriting any data on the cluster regardless of file and directory permissions.,\n * `PRIVILEGE_ROLE_READ` - View roles and assignments,\n * `PRIVILEGE_ROLE_WRITE` - Create and modify roles and assignments,\n * `PRIVILEGE_S3_BUCKETS_READ` - View all S3 buckets present in the system,\n * `PRIVILEGE_S3_BUCKETS_WRITE` - Create or delete any S3 bucket in the system,\n * `PRIVILEGE_S3_CREDENTIALS_READ` - View any S3 access key present in the system,\n * `PRIVILEGE_S3_CREDENTIALS_WRITE` - Create or delete S3 access keys for any user in the system,\n * `PRIVILEGE_S3_SETTINGS_READ` - View S3 server settings,\n * `PRIVILEGE_S3_SETTINGS_WRITE` - Modify S3 server settings,\n * `PRIVILEGE_SAML_SETTINGS_READ` - View SAML integration settings,\n * `PRIVILEGE_SAML_SETTINGS_WRITE` - Modify SAML integration settings,\n * `PRIVILEGE_SERVICE_PUBLIC_KEYS_READ` - Internal-Only: Read public keys,\n * `PRIVILEGE_SERVICE_PUBLIC_KEYS_WRITE` - Internal-Only: Write public keys,\n * `PRIVILEGE_SMB_FILE_HANDLE_READ` - List open SMB file handles,\n * `PRIVILEGE_SMB_FILE_HANDLE_WRITE` - Force close an open SMB file handle,\n * `PRIVILEGE_SMB_SESSION_READ` - List logged on SMB sessions,\n * `PRIVILEGE_SMB_SESSION_WRITE` - Force close a logged on SMB session,\n * `PRIVILEGE_SMB_SHARE_READ` - View configuration of SMB shares and SMB server settings,\n * `PRIVILEGE_SMB_SHARE_WRITE` - Create, modify, and delete SMB shares and SMB server settings,\n * `PRIVILEGE_SNAPSHOT_CALCULATE_USED_CAPACITY_READ` - Recalculate capacity usage of snapshots,\n * `PRIVILEGE_SNAPSHOT_DIFFERENCE_READ` - View the changes between snapshots,\n * `PRIVILEGE_SNAPSHOT_POLICY_READ` - View snapshot policies and status,\n * `PRIVILEGE_SNAPSHOT_POLICY_WRITE` - Create, modify, and delete snapshot policies,\n * `PRIVILEGE_SNAPSHOT_READ` - List snapshots and view their status and cached capacity. Does not affect the visibility of the virtual `.snapshot` directories,\n * `PRIVILEGE_SNAPSHOT_WRITE` - Create, modify, and delete snapshots,\n * `PRIVILEGE_SUPPORT_READ` - View support configuration and status,\n * `PRIVILEGE_SUPPORT_WRITE` - Modify cloud-based monitoring and remote management,\n * `PRIVILEGE_TENANT_READ` - View any tenant information,\n * `PRIVILEGE_TENANT_WRITE` - Create, edit or delete tenants,\n * `PRIVILEGE_TEST_ONLY` - Test only actions,\n * `PRIVILEGE_TIME_READ` - View time and time settings,\n * `PRIVILEGE_TIME_WRITE` - Modify time settings,\n * `PRIVILEGE_UNCONFIGURED_NODE_READ` - List unconfigured Qumulo nodes,\n * `PRIVILEGE_UPGRADE_READ` - View upgrade configuration and status,\n * `PRIVILEGE_UPGRADE_WRITE` - Perform upgrades,\n * `PRIVILEGE_WEB_UI_SETTINGS_WRITE` - Modify web UI settings"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "auth"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "description": {
                                        "type": "string"
                                    },
                                    "privileges": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "enum": [
                                                "PRIVILEGE_AD_READ",
                                                "PRIVILEGE_AD_USE",
                                                "PRIVILEGE_AD_WRITE",
                                                "PRIVILEGE_ANALYTICS_READ",
                                                "PRIVILEGE_AUDIT_READ",
                                                "PRIVILEGE_AUDIT_WRITE",
                                                "PRIVILEGE_AUTH_CACHE_READ",
                                                "PRIVILEGE_AUTH_CACHE_WRITE",
                                                "PRIVILEGE_CLUSTER_READ",
                                                "PRIVILEGE_CLUSTER_WRITE",
                                                "PRIVILEGE_DEBUG",
                                                "PRIVILEGE_DNS_READ",
                                                "PRIVILEGE_DNS_USE",
                                                "PRIVILEGE_DNS_WRITE",
                                                "PRIVILEGE_FILE_FULL_ACCESS",
                                                "PRIVILEGE_FS_ATTRIBUTES_READ",
                                                "PRIVILEGE_FS_DELETE_TREE_READ",
                                                "PRIVILEGE_FS_DELETE_TREE_WRITE",
                                                "PRIVILEGE_FS_LOCK_READ",
                                                "PRIVILEGE_FS_LOCK_WRITE",
                                                "PRIVILEGE_FS_SETTINGS_READ",
                                                "PRIVILEGE_FS_SETTINGS_WRITE",
                                                "PRIVILEGE_FTP_READ",
                                                "PRIVILEGE_FTP_WRITE",
                                                "PRIVILEGE_IDENTITY_MAPPING_READ",
                                                "PRIVILEGE_IDENTITY_MAPPING_WRITE",
                                                "PRIVILEGE_IDENTITY_READ",
                                                "PRIVILEGE_IDENTITY_WRITE",
                                                "PRIVILEGE_KERBEROS_KEYTAB_READ",
                                                "PRIVILEGE_KERBEROS_KEYTAB_WRITE",
                                                "PRIVILEGE_KERBEROS_SETTINGS_READ",
                                                "PRIVILEGE_KERBEROS_SETTINGS_WRITE",
                                                "PRIVILEGE_KV_READ",
                                                "PRIVILEGE_LDAP_READ",
                                                "PRIVILEGE_LDAP_USE",
                                                "PRIVILEGE_LDAP_WRITE",
                                                "PRIVILEGE_LOCAL_GROUP_READ",
                                                "PRIVILEGE_LOCAL_GROUP_WRITE",
                                                "PRIVILEGE_LOCAL_USER_READ",
                                                "PRIVILEGE_LOCAL_USER_WRITE",
                                                "PRIVILEGE_METRICS_READ",
                                                "PRIVILEGE_NETWORK_IP_ALLOCATION_READ",
                                                "PRIVILEGE_NETWORK_READ",
                                                "PRIVILEGE_NETWORK_WRITE",
                                                "PRIVILEGE_NFS_EXPORT_READ",
                                                "PRIVILEGE_NFS_EXPORT_WRITE",
                                                "PRIVILEGE_POWER_CYCLE",
                                                "PRIVILEGE_QUOTA_READ",
                                                "PRIVILEGE_QUOTA_WRITE",
                                                "PRIVILEGE_RECONCILER_READ",
                                                "PRIVILEGE_REPLICATION_REVERSE_RELATIONSHIP",
                                                "PRIVILEGE_REPLICATION_SOURCE_READ",
                                                "PRIVILEGE_REPLICATION_SOURCE_WRITE",
                                                "PRIVILEGE_REPLICATION_TARGET_READ",
                                                "PRIVILEGE_REPLICATION_TARGET_WRITE",
                                                "PRIVILEGE_ROLE_READ",
                                                "PRIVILEGE_ROLE_WRITE",
                                                "PRIVILEGE_SMB_SHARE_READ",
                                                "PRIVILEGE_SMB_SHARE_WRITE",
                                                "PRIVILEGE_SNAPSHOT_CALCULATE_USED_CAPACITY_READ",
                                                "PRIVILEGE_SNAPSHOT_DIFFERENCE_READ",
                                                "PRIVILEGE_SNAPSHOT_POLICY_READ",
                                                "PRIVILEGE_SNAPSHOT_POLICY_WRITE",
                                                "PRIVILEGE_SNAPSHOT_READ",
                                                "PRIVILEGE_SNAPSHOT_WRITE",
                                                "PRIVILEGE_SUPPORT_READ",
                                                "PRIVILEGE_SUPPORT_WRITE",
                                                "PRIVILEGE_TEST_ONLY",
                                                "PRIVILEGE_TIME_READ",
                                                "PRIVILEGE_TIME_WRITE",
                                                "PRIVILEGE_UNCONFIGURED_NODE_READ",
                                                "PRIVILEGE_UPGRADE_READ",
                                                "PRIVILEGE_UPGRADE_WRITE",
                                                "PRIVILEGE_SMB_FILE_HANDLE_READ",
                                                "PRIVILEGE_SMB_FILE_HANDLE_WRITE",
                                                "PRIVILEGE_SMB_SESSION_READ",
                                                "PRIVILEGE_SMB_SESSION_WRITE",
                                                "PRIVILEGE_REPLICATION_OBJECT_READ",
                                                "PRIVILEGE_REPLICATION_OBJECT_WRITE",
                                                "PRIVILEGE_ENCRYPTION_WRITE",
                                                "PRIVILEGE_ENCRYPTION_READ",
                                                "PRIVILEGE_NFS_SETTINGS_READ",
                                                "PRIVILEGE_NFS_SETTINGS_WRITE",
                                                "PRIVILEGE_SERVICE_PUBLIC_KEYS_WRITE",
                                                "PRIVILEGE_SERVICE_PUBLIC_KEYS_READ",
                                                "PRIVILEGE_METRICS_CONFIG_READ",
                                                "PRIVILEGE_METRICS_CONFIG_WRITE",
                                                "PRIVILEGE_REBOOT_USE",
                                                "PRIVILEGE_REBOOT_READ",
                                                "PRIVILEGE_CHECKSUMMING_READ",
                                                "PRIVILEGE_S3_SETTINGS_READ",
                                                "PRIVILEGE_S3_SETTINGS_WRITE",
                                                "PRIVILEGE_WEB_UI_SETTINGS_WRITE",
                                                "PRIVILEGE_S3_CREDENTIALS_READ",
                                                "PRIVILEGE_S3_CREDENTIALS_WRITE",
                                                "PRIVILEGE_TENANT_READ",
                                                "PRIVILEGE_TENANT_WRITE",
                                                "PRIVILEGE_SAML_SETTINGS_READ",
                                                "PRIVILEGE_SAML_SETTINGS_WRITE",
                                                "PRIVILEGE_S3_BUCKETS_READ",
                                                "PRIVILEGE_S3_BUCKETS_WRITE"
                                            ],
                                            "description": "Privileges the role has been granted:\n * `PRIVILEGE_AD_READ` - Read Qumulo Active Directory settings,\n * `PRIVILEGE_AD_USE` - Use Qumulo's APIs for performing queries against Active Directory,\n * `PRIVILEGE_AD_WRITE` - Modify Qumulo Active Directory settings,\n * `PRIVILEGE_ANALYTICS_READ` - Read cluster analytics,\n * `PRIVILEGE_AUDIT_READ` - Read audit settings,\n * `PRIVILEGE_AUDIT_WRITE` - Modify audit settings,\n * `PRIVILEGE_AUTH_CACHE_READ` - Internal-Only: Read authentication cache settings,\n * `PRIVILEGE_AUTH_CACHE_WRITE` - Internal-Only: Modify authentication cache settings,\n * `PRIVILEGE_CHECKSUMMING_READ` - View the status of checksumming,\n * `PRIVILEGE_CLUSTER_READ` - View nodes, disks, protection status, and SSL certificate,\n * `PRIVILEGE_CLUSTER_WRITE` - Modify cluster settings and disk/identify LEDs,\n * `PRIVILEGE_DEBUG` - Internal-Only: Perform debug operations on the cluster,\n * `PRIVILEGE_DNS_READ` - Read DNS settings,\n * `PRIVILEGE_DNS_USE` - Perform DNS lookups,\n * `PRIVILEGE_DNS_WRITE` - Modify DNS settings,\n * `PRIVILEGE_ENCRYPTION_READ` - View the status of at-rest-encryption,\n * `PRIVILEGE_ENCRYPTION_WRITE` - Rotate encryption keys for clusters with at-rest-encryption,\n * `PRIVILEGE_FILE_FULL_ACCESS` - Provides full access to all files regardless of permissions,\n * `PRIVILEGE_FS_ATTRIBUTES_READ` - Read file system statistics,\n * `PRIVILEGE_FS_DELETE_TREE_READ` - View the status of directory tree delete operations,\n * `PRIVILEGE_FS_DELETE_TREE_WRITE` - Use directory tree delete API. Granting this privilege allows the deletion of any file or directory on the cluster. File and directory permissions are not taken into account. Not required for `rm -r`.,\n * `PRIVILEGE_FS_LOCK_READ` - View NLM and SMB locks and waiters,\n * `PRIVILEGE_FS_LOCK_WRITE` - Release NLM and SMB locks,\n * `PRIVILEGE_FS_SETTINGS_READ` - View file system permissions settings,\n * `PRIVILEGE_FS_SETTINGS_WRITE` - Modify file system permissions mode,\n * `PRIVILEGE_FTP_READ` - View FTP status and settings,\n * `PRIVILEGE_FTP_WRITE` - Modify FTP status and settings,\n * `PRIVILEGE_IDENTITY_MAPPING_READ` - Get AD/LDAP User Defined Mappings,\n * `PRIVILEGE_IDENTITY_MAPPING_WRITE` - Set AD/LDAP User Defined Mappings,\n * `PRIVILEGE_IDENTITY_READ` - Use Qumulo's identity lookup and translation APIs,\n * `PRIVILEGE_IDENTITY_WRITE` - Modify identity attributes and clear authentication cache,\n * `PRIVILEGE_KERBEROS_KEYTAB_READ` - View Kerberos keytab,\n * `PRIVILEGE_KERBEROS_KEYTAB_WRITE` - Modify Kerberos keytab,\n * `PRIVILEGE_KERBEROS_SETTINGS_READ` - Read Kerberos settings,\n * `PRIVILEGE_KERBEROS_SETTINGS_WRITE` - Modify Kerberos settings,\n * `PRIVILEGE_KV_READ` - DEPRECATED: Read and delete KV store entries for all users,\n * `PRIVILEGE_LDAP_READ` - View LDAP settings,\n * `PRIVILEGE_LDAP_USE` - Use Qumulo's APIs for performing LDAP queries,\n * `PRIVILEGE_LDAP_WRITE` - Modify LDAP settings,\n * `PRIVILEGE_LOCAL_GROUP_READ` - View local groups and members,\n * `PRIVILEGE_LOCAL_GROUP_WRITE` - Modify local groups and membership,\n * `PRIVILEGE_LOCAL_USER_READ` - Get information about local users,\n * `PRIVILEGE_LOCAL_USER_WRITE` - Create and modify all local users,\n * `PRIVILEGE_METRICS_CONFIG_READ` - View metrics configuration,\n * `PRIVILEGE_METRICS_CONFIG_WRITE` - Modify metrics configuration,\n * `PRIVILEGE_METRICS_READ` - Get all metrics,\n * `PRIVILEGE_NETWORK_IP_ALLOCATION_READ` - View network IP address allocations,\n * `PRIVILEGE_NETWORK_READ` - Read network status and settings,\n * `PRIVILEGE_NETWORK_WRITE` - Modify network configuration,\n * `PRIVILEGE_NFS_EXPORT_READ` - View configuration of NFS exports,\n * `PRIVILEGE_NFS_EXPORT_WRITE` - Create, modify, and delete NFS exports,\n * `PRIVILEGE_NFS_SETTINGS_READ` - Internal-Only: View NFS server settings,\n * `PRIVILEGE_NFS_SETTINGS_WRITE` - Internal-Only: Modify NFS server settings,\n * `PRIVILEGE_POWER_CYCLE` - Shutdown and reboot nodes,\n * `PRIVILEGE_QUOTA_READ` - View all file system quotas,\n * `PRIVILEGE_QUOTA_WRITE` - Create, modify, and delete file system quotas,\n * `PRIVILEGE_REBOOT_READ` - View Reboot Status,\n * `PRIVILEGE_REBOOT_USE` - Perform Reboots,\n * `PRIVILEGE_RECONCILER_READ` - View reconciler status and metrics,\n * `PRIVILEGE_REPLICATION_OBJECT_READ` - View object store relationship settings and status,\n * `PRIVILEGE_REPLICATION_OBJECT_WRITE` - Create, modify, and delete object store relationships. Granting this privilege allows overwriting existing data, replicating, and potentially accessing any data on the cluster regardless of file and directory permissions.,\n * `PRIVILEGE_REPLICATION_REVERSE_RELATIONSHIP` - Reverse a source and target relationship,\n * `PRIVILEGE_REPLICATION_SOURCE_READ` - View source relationship settings and status,\n * `PRIVILEGE_REPLICATION_SOURCE_WRITE` - Create, modify, and delete source relationships. Granting this privilege allows replicating and potentially accessing any data on the cluster regardless of file and directory permissions.,\n * `PRIVILEGE_REPLICATION_TARGET_READ` - View target relationship settings and status,\n * `PRIVILEGE_REPLICATION_TARGET_WRITE` - Create, modify, and delete target relationships. Granting this privilege allows overwriting any data on the cluster regardless of file and directory permissions.,\n * `PRIVILEGE_ROLE_READ` - View roles and assignments,\n * `PRIVILEGE_ROLE_WRITE` - Create and modify roles and assignments,\n * `PRIVILEGE_S3_BUCKETS_READ` - View all S3 buckets present in the system,\n * `PRIVILEGE_S3_BUCKETS_WRITE` - Create or delete any S3 bucket in the system,\n * `PRIVILEGE_S3_CREDENTIALS_READ` - View any S3 access key present in the system,\n * `PRIVILEGE_S3_CREDENTIALS_WRITE` - Create or delete S3 access keys for any user in the system,\n * `PRIVILEGE_S3_SETTINGS_READ` - View S3 server settings,\n * `PRIVILEGE_S3_SETTINGS_WRITE` - Modify S3 server settings,\n * `PRIVILEGE_SAML_SETTINGS_READ` - View SAML integration settings,\n * `PRIVILEGE_SAML_SETTINGS_WRITE` - Modify SAML integration settings,\n * `PRIVILEGE_SERVICE_PUBLIC_KEYS_READ` - Internal-Only: Read public keys,\n * `PRIVILEGE_SERVICE_PUBLIC_KEYS_WRITE` - Internal-Only: Write public keys,\n * `PRIVILEGE_SMB_FILE_HANDLE_READ` - List open SMB file handles,\n * `PRIVILEGE_SMB_FILE_HANDLE_WRITE` - Force close an open SMB file handle,\n * `PRIVILEGE_SMB_SESSION_READ` - List logged on SMB sessions,\n * `PRIVILEGE_SMB_SESSION_WRITE` - Force close a logged on SMB session,\n * `PRIVILEGE_SMB_SHARE_READ` - View configuration of SMB shares and SMB server settings,\n * `PRIVILEGE_SMB_SHARE_WRITE` - Create, modify, and delete SMB shares and SMB server settings,\n * `PRIVILEGE_SNAPSHOT_CALCULATE_USED_CAPACITY_READ` - Recalculate capacity usage of snapshots,\n * `PRIVILEGE_SNAPSHOT_DIFFERENCE_READ` - View the changes between snapshots,\n * `PRIVILEGE_SNAPSHOT_POLICY_READ` - View snapshot policies and status,\n * `PRIVILEGE_SNAPSHOT_POLICY_WRITE` - Create, modify, and delete snapshot policies,\n * `PRIVILEGE_SNAPSHOT_READ` - List snapshots and view their status and cached capacity. Does not affect the visibility of the virtual `.snapshot` directories,\n * `PRIVILEGE_SNAPSHOT_WRITE` - Create, modify, and delete snapshots,\n * `PRIVILEGE_SUPPORT_READ` - View support configuration and status,\n * `PRIVILEGE_SUPPORT_WRITE` - Modify cloud-based monitoring and remote management,\n * `PRIVILEGE_TENANT_READ` - View any tenant information,\n * `PRIVILEGE_TENANT_WRITE` - Create, edit or delete tenants,\n * `PRIVILEGE_TEST_ONLY` - Test only actions,\n * `PRIVILEGE_TIME_READ` - View time and time settings,\n * `PRIVILEGE_TIME_WRITE` - Modify time settings,\n * `PRIVILEGE_UNCONFIGURED_NODE_READ` - List unconfigured Qumulo nodes,\n * `PRIVILEGE_UPGRADE_READ` - View upgrade configuration and status,\n * `PRIVILEGE_UPGRADE_WRITE` - Perform upgrades,\n * `PRIVILEGE_WEB_UI_SETTINGS_WRITE` - Modify web UI settings"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Modify fields on a role.",
                "parameters": [
                    {
                        "name": "role_name",
                        "in": "path",
                        "description": "The name of the role (This page URL-encodes the name for you)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "description": {
                                            "type": "string"
                                        },
                                        "privileges": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "enum": [
                                                    "PRIVILEGE_AD_READ",
                                                    "PRIVILEGE_AD_USE",
                                                    "PRIVILEGE_AD_WRITE",
                                                    "PRIVILEGE_ANALYTICS_READ",
                                                    "PRIVILEGE_AUDIT_READ",
                                                    "PRIVILEGE_AUDIT_WRITE",
                                                    "PRIVILEGE_AUTH_CACHE_READ",
                                                    "PRIVILEGE_AUTH_CACHE_WRITE",
                                                    "PRIVILEGE_CLUSTER_READ",
                                                    "PRIVILEGE_CLUSTER_WRITE",
                                                    "PRIVILEGE_DEBUG",
                                                    "PRIVILEGE_DNS_READ",
                                                    "PRIVILEGE_DNS_USE",
                                                    "PRIVILEGE_DNS_WRITE",
                                                    "PRIVILEGE_FILE_FULL_ACCESS",
                                                    "PRIVILEGE_FS_ATTRIBUTES_READ",
                                                    "PRIVILEGE_FS_DELETE_TREE_READ",
                                                    "PRIVILEGE_FS_DELETE_TREE_WRITE",
                                                    "PRIVILEGE_FS_LOCK_READ",
                                                    "PRIVILEGE_FS_LOCK_WRITE",
                                                    "PRIVILEGE_FS_SETTINGS_READ",
                                                    "PRIVILEGE_FS_SETTINGS_WRITE",
                                                    "PRIVILEGE_FTP_READ",
                                                    "PRIVILEGE_FTP_WRITE",
                                                    "PRIVILEGE_IDENTITY_MAPPING_READ",
                                                    "PRIVILEGE_IDENTITY_MAPPING_WRITE",
                                                    "PRIVILEGE_IDENTITY_READ",
                                                    "PRIVILEGE_IDENTITY_WRITE",
                                                    "PRIVILEGE_KERBEROS_KEYTAB_READ",
                                                    "PRIVILEGE_KERBEROS_KEYTAB_WRITE",
                                                    "PRIVILEGE_KERBEROS_SETTINGS_READ",
                                                    "PRIVILEGE_KERBEROS_SETTINGS_WRITE",
                                                    "PRIVILEGE_KV_READ",
                                                    "PRIVILEGE_LDAP_READ",
                                                    "PRIVILEGE_LDAP_USE",
                                                    "PRIVILEGE_LDAP_WRITE",
                                                    "PRIVILEGE_LOCAL_GROUP_READ",
                                                    "PRIVILEGE_LOCAL_GROUP_WRITE",
                                                    "PRIVILEGE_LOCAL_USER_READ",
                                                    "PRIVILEGE_LOCAL_USER_WRITE",
                                                    "PRIVILEGE_METRICS_READ",
                                                    "PRIVILEGE_NETWORK_IP_ALLOCATION_READ",
                                                    "PRIVILEGE_NETWORK_READ",
                                                    "PRIVILEGE_NETWORK_WRITE",
                                                    "PRIVILEGE_NFS_EXPORT_READ",
                                                    "PRIVILEGE_NFS_EXPORT_WRITE",
                                                    "PRIVILEGE_POWER_CYCLE",
                                                    "PRIVILEGE_QUOTA_READ",
                                                    "PRIVILEGE_QUOTA_WRITE",
                                                    "PRIVILEGE_RECONCILER_READ",
                                                    "PRIVILEGE_REPLICATION_REVERSE_RELATIONSHIP",
                                                    "PRIVILEGE_REPLICATION_SOURCE_READ",
                                                    "PRIVILEGE_REPLICATION_SOURCE_WRITE",
                                                    "PRIVILEGE_REPLICATION_TARGET_READ",
                                                    "PRIVILEGE_REPLICATION_TARGET_WRITE",
                                                    "PRIVILEGE_ROLE_READ",
                                                    "PRIVILEGE_ROLE_WRITE",
                                                    "PRIVILEGE_SMB_SHARE_READ",
                                                    "PRIVILEGE_SMB_SHARE_WRITE",
                                                    "PRIVILEGE_SNAPSHOT_CALCULATE_USED_CAPACITY_READ",
                                                    "PRIVILEGE_SNAPSHOT_DIFFERENCE_READ",
                                                    "PRIVILEGE_SNAPSHOT_POLICY_READ",
                                                    "PRIVILEGE_SNAPSHOT_POLICY_WRITE",
                                                    "PRIVILEGE_SNAPSHOT_READ",
                                                    "PRIVILEGE_SNAPSHOT_WRITE",
                                                    "PRIVILEGE_SUPPORT_READ",
                                                    "PRIVILEGE_SUPPORT_WRITE",
                                                    "PRIVILEGE_TEST_ONLY",
                                                    "PRIVILEGE_TIME_READ",
                                                    "PRIVILEGE_TIME_WRITE",
                                                    "PRIVILEGE_UNCONFIGURED_NODE_READ",
                                                    "PRIVILEGE_UPGRADE_READ",
                                                    "PRIVILEGE_UPGRADE_WRITE",
                                                    "PRIVILEGE_SMB_FILE_HANDLE_READ",
                                                    "PRIVILEGE_SMB_FILE_HANDLE_WRITE",
                                                    "PRIVILEGE_SMB_SESSION_READ",
                                                    "PRIVILEGE_SMB_SESSION_WRITE",
                                                    "PRIVILEGE_REPLICATION_OBJECT_READ",
                                                    "PRIVILEGE_REPLICATION_OBJECT_WRITE",
                                                    "PRIVILEGE_ENCRYPTION_WRITE",
                                                    "PRIVILEGE_ENCRYPTION_READ",
                                                    "PRIVILEGE_NFS_SETTINGS_READ",
                                                    "PRIVILEGE_NFS_SETTINGS_WRITE",
                                                    "PRIVILEGE_SERVICE_PUBLIC_KEYS_WRITE",
                                                    "PRIVILEGE_SERVICE_PUBLIC_KEYS_READ",
                                                    "PRIVILEGE_METRICS_CONFIG_READ",
                                                    "PRIVILEGE_METRICS_CONFIG_WRITE",
                                                    "PRIVILEGE_REBOOT_USE",
                                                    "PRIVILEGE_REBOOT_READ",
                                                    "PRIVILEGE_CHECKSUMMING_READ",
                                                    "PRIVILEGE_S3_SETTINGS_READ",
                                                    "PRIVILEGE_S3_SETTINGS_WRITE",
                                                    "PRIVILEGE_WEB_UI_SETTINGS_WRITE",
                                                    "PRIVILEGE_S3_CREDENTIALS_READ",
                                                    "PRIVILEGE_S3_CREDENTIALS_WRITE",
                                                    "PRIVILEGE_TENANT_READ",
                                                    "PRIVILEGE_TENANT_WRITE",
                                                    "PRIVILEGE_SAML_SETTINGS_READ",
                                                    "PRIVILEGE_SAML_SETTINGS_WRITE",
                                                    "PRIVILEGE_S3_BUCKETS_READ",
                                                    "PRIVILEGE_S3_BUCKETS_WRITE"
                                                ],
                                                "description": "Privileges the role has been granted:\n * `PRIVILEGE_AD_READ` - Read Qumulo Active Directory settings,\n * `PRIVILEGE_AD_USE` - Use Qumulo's APIs for performing queries against Active Directory,\n * `PRIVILEGE_AD_WRITE` - Modify Qumulo Active Directory settings,\n * `PRIVILEGE_ANALYTICS_READ` - Read cluster analytics,\n * `PRIVILEGE_AUDIT_READ` - Read audit settings,\n * `PRIVILEGE_AUDIT_WRITE` - Modify audit settings,\n * `PRIVILEGE_AUTH_CACHE_READ` - Internal-Only: Read authentication cache settings,\n * `PRIVILEGE_AUTH_CACHE_WRITE` - Internal-Only: Modify authentication cache settings,\n * `PRIVILEGE_CHECKSUMMING_READ` - View the status of checksumming,\n * `PRIVILEGE_CLUSTER_READ` - View nodes, disks, protection status, and SSL certificate,\n * `PRIVILEGE_CLUSTER_WRITE` - Modify cluster settings and disk/identify LEDs,\n * `PRIVILEGE_DEBUG` - Internal-Only: Perform debug operations on the cluster,\n * `PRIVILEGE_DNS_READ` - Read DNS settings,\n * `PRIVILEGE_DNS_USE` - Perform DNS lookups,\n * `PRIVILEGE_DNS_WRITE` - Modify DNS settings,\n * `PRIVILEGE_ENCRYPTION_READ` - View the status of at-rest-encryption,\n * `PRIVILEGE_ENCRYPTION_WRITE` - Rotate encryption keys for clusters with at-rest-encryption,\n * `PRIVILEGE_FILE_FULL_ACCESS` - Provides full access to all files regardless of permissions,\n * `PRIVILEGE_FS_ATTRIBUTES_READ` - Read file system statistics,\n * `PRIVILEGE_FS_DELETE_TREE_READ` - View the status of directory tree delete operations,\n * `PRIVILEGE_FS_DELETE_TREE_WRITE` - Use directory tree delete API. Granting this privilege allows the deletion of any file or directory on the cluster. File and directory permissions are not taken into account. Not required for `rm -r`.,\n * `PRIVILEGE_FS_LOCK_READ` - View NLM and SMB locks and waiters,\n * `PRIVILEGE_FS_LOCK_WRITE` - Release NLM and SMB locks,\n * `PRIVILEGE_FS_SETTINGS_READ` - View file system permissions settings,\n * `PRIVILEGE_FS_SETTINGS_WRITE` - Modify file system permissions mode,\n * `PRIVILEGE_FTP_READ` - View FTP status and settings,\n * `PRIVILEGE_FTP_WRITE` - Modify FTP status and settings,\n * `PRIVILEGE_IDENTITY_MAPPING_READ` - Get AD/LDAP User Defined Mappings,\n * `PRIVILEGE_IDENTITY_MAPPING_WRITE` - Set AD/LDAP User Defined Mappings,\n * `PRIVILEGE_IDENTITY_READ` - Use Qumulo's identity lookup and translation APIs,\n * `PRIVILEGE_IDENTITY_WRITE` - Modify identity attributes and clear authentication cache,\n * `PRIVILEGE_KERBEROS_KEYTAB_READ` - View Kerberos keytab,\n * `PRIVILEGE_KERBEROS_KEYTAB_WRITE` - Modify Kerberos keytab,\n * `PRIVILEGE_KERBEROS_SETTINGS_READ` - Read Kerberos settings,\n * `PRIVILEGE_KERBEROS_SETTINGS_WRITE` - Modify Kerberos settings,\n * `PRIVILEGE_KV_READ` - DEPRECATED: Read and delete KV store entries for all users,\n * `PRIVILEGE_LDAP_READ` - View LDAP settings,\n * `PRIVILEGE_LDAP_USE` - Use Qumulo's APIs for performing LDAP queries,\n * `PRIVILEGE_LDAP_WRITE` - Modify LDAP settings,\n * `PRIVILEGE_LOCAL_GROUP_READ` - View local groups and members,\n * `PRIVILEGE_LOCAL_GROUP_WRITE` - Modify local groups and membership,\n * `PRIVILEGE_LOCAL_USER_READ` - Get information about local users,\n * `PRIVILEGE_LOCAL_USER_WRITE` - Create and modify all local users,\n * `PRIVILEGE_METRICS_CONFIG_READ` - View metrics configuration,\n * `PRIVILEGE_METRICS_CONFIG_WRITE` - Modify metrics configuration,\n * `PRIVILEGE_METRICS_READ` - Get all metrics,\n * `PRIVILEGE_NETWORK_IP_ALLOCATION_READ` - View network IP address allocations,\n * `PRIVILEGE_NETWORK_READ` - Read network status and settings,\n * `PRIVILEGE_NETWORK_WRITE` - Modify network configuration,\n * `PRIVILEGE_NFS_EXPORT_READ` - View configuration of NFS exports,\n * `PRIVILEGE_NFS_EXPORT_WRITE` - Create, modify, and delete NFS exports,\n * `PRIVILEGE_NFS_SETTINGS_READ` - Internal-Only: View NFS server settings,\n * `PRIVILEGE_NFS_SETTINGS_WRITE` - Internal-Only: Modify NFS server settings,\n * `PRIVILEGE_POWER_CYCLE` - Shutdown and reboot nodes,\n * `PRIVILEGE_QUOTA_READ` - View all file system quotas,\n * `PRIVILEGE_QUOTA_WRITE` - Create, modify, and delete file system quotas,\n * `PRIVILEGE_REBOOT_READ` - View Reboot Status,\n * `PRIVILEGE_REBOOT_USE` - Perform Reboots,\n * `PRIVILEGE_RECONCILER_READ` - View reconciler status and metrics,\n * `PRIVILEGE_REPLICATION_OBJECT_READ` - View object store relationship settings and status,\n * `PRIVILEGE_REPLICATION_OBJECT_WRITE` - Create, modify, and delete object store relationships. Granting this privilege allows overwriting existing data, replicating, and potentially accessing any data on the cluster regardless of file and directory permissions.,\n * `PRIVILEGE_REPLICATION_REVERSE_RELATIONSHIP` - Reverse a source and target relationship,\n * `PRIVILEGE_REPLICATION_SOURCE_READ` - View source relationship settings and status,\n * `PRIVILEGE_REPLICATION_SOURCE_WRITE` - Create, modify, and delete source relationships. Granting this privilege allows replicating and potentially accessing any data on the cluster regardless of file and directory permissions.,\n * `PRIVILEGE_REPLICATION_TARGET_READ` - View target relationship settings and status,\n * `PRIVILEGE_REPLICATION_TARGET_WRITE` - Create, modify, and delete target relationships. Granting this privilege allows overwriting any data on the cluster regardless of file and directory permissions.,\n * `PRIVILEGE_ROLE_READ` - View roles and assignments,\n * `PRIVILEGE_ROLE_WRITE` - Create and modify roles and assignments,\n * `PRIVILEGE_S3_BUCKETS_READ` - View all S3 buckets present in the system,\n * `PRIVILEGE_S3_BUCKETS_WRITE` - Create or delete any S3 bucket in the system,\n * `PRIVILEGE_S3_CREDENTIALS_READ` - View any S3 access key present in the system,\n * `PRIVILEGE_S3_CREDENTIALS_WRITE` - Create or delete S3 access keys for any user in the system,\n * `PRIVILEGE_S3_SETTINGS_READ` - View S3 server settings,\n * `PRIVILEGE_S3_SETTINGS_WRITE` - Modify S3 server settings,\n * `PRIVILEGE_SAML_SETTINGS_READ` - View SAML integration settings,\n * `PRIVILEGE_SAML_SETTINGS_WRITE` - Modify SAML integration settings,\n * `PRIVILEGE_SERVICE_PUBLIC_KEYS_READ` - Internal-Only: Read public keys,\n * `PRIVILEGE_SERVICE_PUBLIC_KEYS_WRITE` - Internal-Only: Write public keys,\n * `PRIVILEGE_SMB_FILE_HANDLE_READ` - List open SMB file handles,\n * `PRIVILEGE_SMB_FILE_HANDLE_WRITE` - Force close an open SMB file handle,\n * `PRIVILEGE_SMB_SESSION_READ` - List logged on SMB sessions,\n * `PRIVILEGE_SMB_SESSION_WRITE` - Force close a logged on SMB session,\n * `PRIVILEGE_SMB_SHARE_READ` - View configuration of SMB shares and SMB server settings,\n * `PRIVILEGE_SMB_SHARE_WRITE` - Create, modify, and delete SMB shares and SMB server settings,\n * `PRIVILEGE_SNAPSHOT_CALCULATE_USED_CAPACITY_READ` - Recalculate capacity usage of snapshots,\n * `PRIVILEGE_SNAPSHOT_DIFFERENCE_READ` - View the changes between snapshots,\n * `PRIVILEGE_SNAPSHOT_POLICY_READ` - View snapshot policies and status,\n * `PRIVILEGE_SNAPSHOT_POLICY_WRITE` - Create, modify, and delete snapshot policies,\n * `PRIVILEGE_SNAPSHOT_READ` - List snapshots and view their status and cached capacity. Does not affect the visibility of the virtual `.snapshot` directories,\n * `PRIVILEGE_SNAPSHOT_WRITE` - Create, modify, and delete snapshots,\n * `PRIVILEGE_SUPPORT_READ` - View support configuration and status,\n * `PRIVILEGE_SUPPORT_WRITE` - Modify cloud-based monitoring and remote management,\n * `PRIVILEGE_TENANT_READ` - View any tenant information,\n * `PRIVILEGE_TENANT_WRITE` - Create, edit or delete tenants,\n * `PRIVILEGE_TEST_ONLY` - Test only actions,\n * `PRIVILEGE_TIME_READ` - View time and time settings,\n * `PRIVILEGE_TIME_WRITE` - Modify time settings,\n * `PRIVILEGE_UNCONFIGURED_NODE_READ` - List unconfigured Qumulo nodes,\n * `PRIVILEGE_UPGRADE_READ` - View upgrade configuration and status,\n * `PRIVILEGE_UPGRADE_WRITE` - Perform upgrades,\n * `PRIVILEGE_WEB_UI_SETTINGS_WRITE` - Modify web UI settings"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "auth"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "description": {
                                        "type": "string"
                                    },
                                    "privileges": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "enum": [
                                                "PRIVILEGE_AD_READ",
                                                "PRIVILEGE_AD_USE",
                                                "PRIVILEGE_AD_WRITE",
                                                "PRIVILEGE_ANALYTICS_READ",
                                                "PRIVILEGE_AUDIT_READ",
                                                "PRIVILEGE_AUDIT_WRITE",
                                                "PRIVILEGE_AUTH_CACHE_READ",
                                                "PRIVILEGE_AUTH_CACHE_WRITE",
                                                "PRIVILEGE_CLUSTER_READ",
                                                "PRIVILEGE_CLUSTER_WRITE",
                                                "PRIVILEGE_DEBUG",
                                                "PRIVILEGE_DNS_READ",
                                                "PRIVILEGE_DNS_USE",
                                                "PRIVILEGE_DNS_WRITE",
                                                "PRIVILEGE_FILE_FULL_ACCESS",
                                                "PRIVILEGE_FS_ATTRIBUTES_READ",
                                                "PRIVILEGE_FS_DELETE_TREE_READ",
                                                "PRIVILEGE_FS_DELETE_TREE_WRITE",
                                                "PRIVILEGE_FS_LOCK_READ",
                                                "PRIVILEGE_FS_LOCK_WRITE",
                                                "PRIVILEGE_FS_SETTINGS_READ",
                                                "PRIVILEGE_FS_SETTINGS_WRITE",
                                                "PRIVILEGE_FTP_READ",
                                                "PRIVILEGE_FTP_WRITE",
                                                "PRIVILEGE_IDENTITY_MAPPING_READ",
                                                "PRIVILEGE_IDENTITY_MAPPING_WRITE",
                                                "PRIVILEGE_IDENTITY_READ",
                                                "PRIVILEGE_IDENTITY_WRITE",
                                                "PRIVILEGE_KERBEROS_KEYTAB_READ",
                                                "PRIVILEGE_KERBEROS_KEYTAB_WRITE",
                                                "PRIVILEGE_KERBEROS_SETTINGS_READ",
                                                "PRIVILEGE_KERBEROS_SETTINGS_WRITE",
                                                "PRIVILEGE_KV_READ",
                                                "PRIVILEGE_LDAP_READ",
                                                "PRIVILEGE_LDAP_USE",
                                                "PRIVILEGE_LDAP_WRITE",
                                                "PRIVILEGE_LOCAL_GROUP_READ",
                                                "PRIVILEGE_LOCAL_GROUP_WRITE",
                                                "PRIVILEGE_LOCAL_USER_READ",
                                                "PRIVILEGE_LOCAL_USER_WRITE",
                                                "PRIVILEGE_METRICS_READ",
                                                "PRIVILEGE_NETWORK_IP_ALLOCATION_READ",
                                                "PRIVILEGE_NETWORK_READ",
                                                "PRIVILEGE_NETWORK_WRITE",
                                                "PRIVILEGE_NFS_EXPORT_READ",
                                                "PRIVILEGE_NFS_EXPORT_WRITE",
                                                "PRIVILEGE_POWER_CYCLE",
                                                "PRIVILEGE_QUOTA_READ",
                                                "PRIVILEGE_QUOTA_WRITE",
                                                "PRIVILEGE_RECONCILER_READ",
                                                "PRIVILEGE_REPLICATION_REVERSE_RELATIONSHIP",
                                                "PRIVILEGE_REPLICATION_SOURCE_READ",
                                                "PRIVILEGE_REPLICATION_SOURCE_WRITE",
                                                "PRIVILEGE_REPLICATION_TARGET_READ",
                                                "PRIVILEGE_REPLICATION_TARGET_WRITE",
                                                "PRIVILEGE_ROLE_READ",
                                                "PRIVILEGE_ROLE_WRITE",
                                                "PRIVILEGE_SMB_SHARE_READ",
                                                "PRIVILEGE_SMB_SHARE_WRITE",
                                                "PRIVILEGE_SNAPSHOT_CALCULATE_USED_CAPACITY_READ",
                                                "PRIVILEGE_SNAPSHOT_DIFFERENCE_READ",
                                                "PRIVILEGE_SNAPSHOT_POLICY_READ",
                                                "PRIVILEGE_SNAPSHOT_POLICY_WRITE",
                                                "PRIVILEGE_SNAPSHOT_READ",
                                                "PRIVILEGE_SNAPSHOT_WRITE",
                                                "PRIVILEGE_SUPPORT_READ",
                                                "PRIVILEGE_SUPPORT_WRITE",
                                                "PRIVILEGE_TEST_ONLY",
                                                "PRIVILEGE_TIME_READ",
                                                "PRIVILEGE_TIME_WRITE",
                                                "PRIVILEGE_UNCONFIGURED_NODE_READ",
                                                "PRIVILEGE_UPGRADE_READ",
                                                "PRIVILEGE_UPGRADE_WRITE",
                                                "PRIVILEGE_SMB_FILE_HANDLE_READ",
                                                "PRIVILEGE_SMB_FILE_HANDLE_WRITE",
                                                "PRIVILEGE_SMB_SESSION_READ",
                                                "PRIVILEGE_SMB_SESSION_WRITE",
                                                "PRIVILEGE_REPLICATION_OBJECT_READ",
                                                "PRIVILEGE_REPLICATION_OBJECT_WRITE",
                                                "PRIVILEGE_ENCRYPTION_WRITE",
                                                "PRIVILEGE_ENCRYPTION_READ",
                                                "PRIVILEGE_NFS_SETTINGS_READ",
                                                "PRIVILEGE_NFS_SETTINGS_WRITE",
                                                "PRIVILEGE_SERVICE_PUBLIC_KEYS_WRITE",
                                                "PRIVILEGE_SERVICE_PUBLIC_KEYS_READ",
                                                "PRIVILEGE_METRICS_CONFIG_READ",
                                                "PRIVILEGE_METRICS_CONFIG_WRITE",
                                                "PRIVILEGE_REBOOT_USE",
                                                "PRIVILEGE_REBOOT_READ",
                                                "PRIVILEGE_CHECKSUMMING_READ",
                                                "PRIVILEGE_S3_SETTINGS_READ",
                                                "PRIVILEGE_S3_SETTINGS_WRITE",
                                                "PRIVILEGE_WEB_UI_SETTINGS_WRITE",
                                                "PRIVILEGE_S3_CREDENTIALS_READ",
                                                "PRIVILEGE_S3_CREDENTIALS_WRITE",
                                                "PRIVILEGE_TENANT_READ",
                                                "PRIVILEGE_TENANT_WRITE",
                                                "PRIVILEGE_SAML_SETTINGS_READ",
                                                "PRIVILEGE_SAML_SETTINGS_WRITE",
                                                "PRIVILEGE_S3_BUCKETS_READ",
                                                "PRIVILEGE_S3_BUCKETS_WRITE"
                                            ],
                                            "description": "Privileges the role has been granted:\n * `PRIVILEGE_AD_READ` - Read Qumulo Active Directory settings,\n * `PRIVILEGE_AD_USE` - Use Qumulo's APIs for performing queries against Active Directory,\n * `PRIVILEGE_AD_WRITE` - Modify Qumulo Active Directory settings,\n * `PRIVILEGE_ANALYTICS_READ` - Read cluster analytics,\n * `PRIVILEGE_AUDIT_READ` - Read audit settings,\n * `PRIVILEGE_AUDIT_WRITE` - Modify audit settings,\n * `PRIVILEGE_AUTH_CACHE_READ` - Internal-Only: Read authentication cache settings,\n * `PRIVILEGE_AUTH_CACHE_WRITE` - Internal-Only: Modify authentication cache settings,\n * `PRIVILEGE_CHECKSUMMING_READ` - View the status of checksumming,\n * `PRIVILEGE_CLUSTER_READ` - View nodes, disks, protection status, and SSL certificate,\n * `PRIVILEGE_CLUSTER_WRITE` - Modify cluster settings and disk/identify LEDs,\n * `PRIVILEGE_DEBUG` - Internal-Only: Perform debug operations on the cluster,\n * `PRIVILEGE_DNS_READ` - Read DNS settings,\n * `PRIVILEGE_DNS_USE` - Perform DNS lookups,\n * `PRIVILEGE_DNS_WRITE` - Modify DNS settings,\n * `PRIVILEGE_ENCRYPTION_READ` - View the status of at-rest-encryption,\n * `PRIVILEGE_ENCRYPTION_WRITE` - Rotate encryption keys for clusters with at-rest-encryption,\n * `PRIVILEGE_FILE_FULL_ACCESS` - Provides full access to all files regardless of permissions,\n * `PRIVILEGE_FS_ATTRIBUTES_READ` - Read file system statistics,\n * `PRIVILEGE_FS_DELETE_TREE_READ` - View the status of directory tree delete operations,\n * `PRIVILEGE_FS_DELETE_TREE_WRITE` - Use directory tree delete API. Granting this privilege allows the deletion of any file or directory on the cluster. File and directory permissions are not taken into account. Not required for `rm -r`.,\n * `PRIVILEGE_FS_LOCK_READ` - View NLM and SMB locks and waiters,\n * `PRIVILEGE_FS_LOCK_WRITE` - Release NLM and SMB locks,\n * `PRIVILEGE_FS_SETTINGS_READ` - View file system permissions settings,\n * `PRIVILEGE_FS_SETTINGS_WRITE` - Modify file system permissions mode,\n * `PRIVILEGE_FTP_READ` - View FTP status and settings,\n * `PRIVILEGE_FTP_WRITE` - Modify FTP status and settings,\n * `PRIVILEGE_IDENTITY_MAPPING_READ` - Get AD/LDAP User Defined Mappings,\n * `PRIVILEGE_IDENTITY_MAPPING_WRITE` - Set AD/LDAP User Defined Mappings,\n * `PRIVILEGE_IDENTITY_READ` - Use Qumulo's identity lookup and translation APIs,\n * `PRIVILEGE_IDENTITY_WRITE` - Modify identity attributes and clear authentication cache,\n * `PRIVILEGE_KERBEROS_KEYTAB_READ` - View Kerberos keytab,\n * `PRIVILEGE_KERBEROS_KEYTAB_WRITE` - Modify Kerberos keytab,\n * `PRIVILEGE_KERBEROS_SETTINGS_READ` - Read Kerberos settings,\n * `PRIVILEGE_KERBEROS_SETTINGS_WRITE` - Modify Kerberos settings,\n * `PRIVILEGE_KV_READ` - DEPRECATED: Read and delete KV store entries for all users,\n * `PRIVILEGE_LDAP_READ` - View LDAP settings,\n * `PRIVILEGE_LDAP_USE` - Use Qumulo's APIs for performing LDAP queries,\n * `PRIVILEGE_LDAP_WRITE` - Modify LDAP settings,\n * `PRIVILEGE_LOCAL_GROUP_READ` - View local groups and members,\n * `PRIVILEGE_LOCAL_GROUP_WRITE` - Modify local groups and membership,\n * `PRIVILEGE_LOCAL_USER_READ` - Get information about local users,\n * `PRIVILEGE_LOCAL_USER_WRITE` - Create and modify all local users,\n * `PRIVILEGE_METRICS_CONFIG_READ` - View metrics configuration,\n * `PRIVILEGE_METRICS_CONFIG_WRITE` - Modify metrics configuration,\n * `PRIVILEGE_METRICS_READ` - Get all metrics,\n * `PRIVILEGE_NETWORK_IP_ALLOCATION_READ` - View network IP address allocations,\n * `PRIVILEGE_NETWORK_READ` - Read network status and settings,\n * `PRIVILEGE_NETWORK_WRITE` - Modify network configuration,\n * `PRIVILEGE_NFS_EXPORT_READ` - View configuration of NFS exports,\n * `PRIVILEGE_NFS_EXPORT_WRITE` - Create, modify, and delete NFS exports,\n * `PRIVILEGE_NFS_SETTINGS_READ` - Internal-Only: View NFS server settings,\n * `PRIVILEGE_NFS_SETTINGS_WRITE` - Internal-Only: Modify NFS server settings,\n * `PRIVILEGE_POWER_CYCLE` - Shutdown and reboot nodes,\n * `PRIVILEGE_QUOTA_READ` - View all file system quotas,\n * `PRIVILEGE_QUOTA_WRITE` - Create, modify, and delete file system quotas,\n * `PRIVILEGE_REBOOT_READ` - View Reboot Status,\n * `PRIVILEGE_REBOOT_USE` - Perform Reboots,\n * `PRIVILEGE_RECONCILER_READ` - View reconciler status and metrics,\n * `PRIVILEGE_REPLICATION_OBJECT_READ` - View object store relationship settings and status,\n * `PRIVILEGE_REPLICATION_OBJECT_WRITE` - Create, modify, and delete object store relationships. Granting this privilege allows overwriting existing data, replicating, and potentially accessing any data on the cluster regardless of file and directory permissions.,\n * `PRIVILEGE_REPLICATION_REVERSE_RELATIONSHIP` - Reverse a source and target relationship,\n * `PRIVILEGE_REPLICATION_SOURCE_READ` - View source relationship settings and status,\n * `PRIVILEGE_REPLICATION_SOURCE_WRITE` - Create, modify, and delete source relationships. Granting this privilege allows replicating and potentially accessing any data on the cluster regardless of file and directory permissions.,\n * `PRIVILEGE_REPLICATION_TARGET_READ` - View target relationship settings and status,\n * `PRIVILEGE_REPLICATION_TARGET_WRITE` - Create, modify, and delete target relationships. Granting this privilege allows overwriting any data on the cluster regardless of file and directory permissions.,\n * `PRIVILEGE_ROLE_READ` - View roles and assignments,\n * `PRIVILEGE_ROLE_WRITE` - Create and modify roles and assignments,\n * `PRIVILEGE_S3_BUCKETS_READ` - View all S3 buckets present in the system,\n * `PRIVILEGE_S3_BUCKETS_WRITE` - Create or delete any S3 bucket in the system,\n * `PRIVILEGE_S3_CREDENTIALS_READ` - View any S3 access key present in the system,\n * `PRIVILEGE_S3_CREDENTIALS_WRITE` - Create or delete S3 access keys for any user in the system,\n * `PRIVILEGE_S3_SETTINGS_READ` - View S3 server settings,\n * `PRIVILEGE_S3_SETTINGS_WRITE` - Modify S3 server settings,\n * `PRIVILEGE_SAML_SETTINGS_READ` - View SAML integration settings,\n * `PRIVILEGE_SAML_SETTINGS_WRITE` - Modify SAML integration settings,\n * `PRIVILEGE_SERVICE_PUBLIC_KEYS_READ` - Internal-Only: Read public keys,\n * `PRIVILEGE_SERVICE_PUBLIC_KEYS_WRITE` - Internal-Only: Write public keys,\n * `PRIVILEGE_SMB_FILE_HANDLE_READ` - List open SMB file handles,\n * `PRIVILEGE_SMB_FILE_HANDLE_WRITE` - Force close an open SMB file handle,\n * `PRIVILEGE_SMB_SESSION_READ` - List logged on SMB sessions,\n * `PRIVILEGE_SMB_SESSION_WRITE` - Force close a logged on SMB session,\n * `PRIVILEGE_SMB_SHARE_READ` - View configuration of SMB shares and SMB server settings,\n * `PRIVILEGE_SMB_SHARE_WRITE` - Create, modify, and delete SMB shares and SMB server settings,\n * `PRIVILEGE_SNAPSHOT_CALCULATE_USED_CAPACITY_READ` - Recalculate capacity usage of snapshots,\n * `PRIVILEGE_SNAPSHOT_DIFFERENCE_READ` - View the changes between snapshots,\n * `PRIVILEGE_SNAPSHOT_POLICY_READ` - View snapshot policies and status,\n * `PRIVILEGE_SNAPSHOT_POLICY_WRITE` - Create, modify, and delete snapshot policies,\n * `PRIVILEGE_SNAPSHOT_READ` - List snapshots and view their status and cached capacity. Does not affect the visibility of the virtual `.snapshot` directories,\n * `PRIVILEGE_SNAPSHOT_WRITE` - Create, modify, and delete snapshots,\n * `PRIVILEGE_SUPPORT_READ` - View support configuration and status,\n * `PRIVILEGE_SUPPORT_WRITE` - Modify cloud-based monitoring and remote management,\n * `PRIVILEGE_TENANT_READ` - View any tenant information,\n * `PRIVILEGE_TENANT_WRITE` - Create, edit or delete tenants,\n * `PRIVILEGE_TEST_ONLY` - Test only actions,\n * `PRIVILEGE_TIME_READ` - View time and time settings,\n * `PRIVILEGE_TIME_WRITE` - Modify time settings,\n * `PRIVILEGE_UNCONFIGURED_NODE_READ` - List unconfigured Qumulo nodes,\n * `PRIVILEGE_UPGRADE_READ` - View upgrade configuration and status,\n * `PRIVILEGE_UPGRADE_WRITE` - Perform upgrades,\n * `PRIVILEGE_WEB_UI_SETTINGS_WRITE` - Modify web UI settings"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete a role.",
                "parameters": [
                    {
                        "name": "role_name",
                        "in": "path",
                        "description": "The name of the role (This page URL-encodes the name for you)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success"
                    }
                },
                "tags": [
                    "auth"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/auth/roles/{role_name}/members": {
            "get": {
                "summary": "List all members of a role.",
                "parameters": [
                    {
                        "name": "role_name",
                        "in": "path",
                        "description": "The name of the role (This page URL-encodes the name for you)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "Return entries after the given key (keys are returned in the paging object)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Return no more than this many entries; the system may choose a smaller limit.",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success"
                    }
                },
                "tags": [
                    "auth"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            },
            "post": {
                "summary": "Assign a member to a role",
                "parameters": [
                    {
                        "name": "role_name",
                        "in": "path",
                        "description": "The name of the role (This page URL-encodes the name for you)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "domain": {
                                            "type": "string",
                                            "enum": [
                                                "LOCAL",
                                                "API_NULL_DOMAIN",
                                                "WORLD",
                                                "POSIX_USER",
                                                "POSIX_GROUP",
                                                "ACTIVE_DIRECTORY",
                                                "API_INVALID_DOMAIN",
                                                "API_RESERVED_DOMAIN",
                                                "API_INTERNAL_DOMAIN",
                                                "API_OPERATOR_DOMAIN",
                                                "API_CREATOR_DOMAIN"
                                            ],
                                            "description": "domain:\n * `ACTIVE_DIRECTORY` - ACTIVE_DIRECTORY,\n * `API_CREATOR_DOMAIN` - API_CREATOR_DOMAIN,\n * `API_INTERNAL_DOMAIN` - API_INTERNAL_DOMAIN,\n * `API_INVALID_DOMAIN` - API_INVALID_DOMAIN,\n * `API_NULL_DOMAIN` - API_NULL_DOMAIN,\n * `API_OPERATOR_DOMAIN` - API_OPERATOR_DOMAIN,\n * `API_RESERVED_DOMAIN` - API_RESERVED_DOMAIN,\n * `LOCAL` - LOCAL,\n * `POSIX_GROUP` - POSIX_GROUP,\n * `POSIX_USER` - POSIX_USER,\n * `WORLD` - WORLD"
                                        },
                                        "auth_id": {
                                            "type": "string"
                                        },
                                        "uid": {
                                            "type": "number"
                                        },
                                        "gid": {
                                            "type": "number"
                                        },
                                        "sid": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "auth"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "domain": {
                                        "type": "string",
                                        "enum": [
                                            "LOCAL",
                                            "API_NULL_DOMAIN",
                                            "WORLD",
                                            "POSIX_USER",
                                            "POSIX_GROUP",
                                            "ACTIVE_DIRECTORY",
                                            "API_INVALID_DOMAIN",
                                            "API_RESERVED_DOMAIN",
                                            "API_INTERNAL_DOMAIN",
                                            "API_OPERATOR_DOMAIN",
                                            "API_CREATOR_DOMAIN"
                                        ],
                                        "description": "domain:\n * `ACTIVE_DIRECTORY` - ACTIVE_DIRECTORY,\n * `API_CREATOR_DOMAIN` - API_CREATOR_DOMAIN,\n * `API_INTERNAL_DOMAIN` - API_INTERNAL_DOMAIN,\n * `API_INVALID_DOMAIN` - API_INVALID_DOMAIN,\n * `API_NULL_DOMAIN` - API_NULL_DOMAIN,\n * `API_OPERATOR_DOMAIN` - API_OPERATOR_DOMAIN,\n * `API_RESERVED_DOMAIN` - API_RESERVED_DOMAIN,\n * `LOCAL` - LOCAL,\n * `POSIX_GROUP` - POSIX_GROUP,\n * `POSIX_USER` - POSIX_USER,\n * `WORLD` - WORLD"
                                    },
                                    "auth_id": {
                                        "type": "string"
                                    },
                                    "uid": {
                                        "type": "number"
                                    },
                                    "gid": {
                                        "type": "number"
                                    },
                                    "sid": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/auth/roles/{role_name}/members/{member_id}": {
            "get": {
                "summary": "Get information about the member of the role.",
                "parameters": [
                    {
                        "name": "role_name",
                        "in": "path",
                        "description": "The name of the role (This page URL-encodes the name for you)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "member_id",
                        "in": "path",
                        "description": "The member's unique ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "domain": {
                                            "type": "string",
                                            "enum": [
                                                "LOCAL",
                                                "API_NULL_DOMAIN",
                                                "WORLD",
                                                "POSIX_USER",
                                                "POSIX_GROUP",
                                                "ACTIVE_DIRECTORY",
                                                "API_INVALID_DOMAIN",
                                                "API_RESERVED_DOMAIN",
                                                "API_INTERNAL_DOMAIN",
                                                "API_OPERATOR_DOMAIN",
                                                "API_CREATOR_DOMAIN"
                                            ],
                                            "description": "domain:\n * `ACTIVE_DIRECTORY` - ACTIVE_DIRECTORY,\n * `API_CREATOR_DOMAIN` - API_CREATOR_DOMAIN,\n * `API_INTERNAL_DOMAIN` - API_INTERNAL_DOMAIN,\n * `API_INVALID_DOMAIN` - API_INVALID_DOMAIN,\n * `API_NULL_DOMAIN` - API_NULL_DOMAIN,\n * `API_OPERATOR_DOMAIN` - API_OPERATOR_DOMAIN,\n * `API_RESERVED_DOMAIN` - API_RESERVED_DOMAIN,\n * `LOCAL` - LOCAL,\n * `POSIX_GROUP` - POSIX_GROUP,\n * `POSIX_USER` - POSIX_USER,\n * `WORLD` - WORLD"
                                        },
                                        "auth_id": {
                                            "type": "string"
                                        },
                                        "uid": {
                                            "type": "number"
                                        },
                                        "gid": {
                                            "type": "number"
                                        },
                                        "sid": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "auth"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            },
            "delete": {
                "summary": "Remove a member from a role",
                "parameters": [
                    {
                        "name": "role_name",
                        "in": "path",
                        "description": "The name of the role (This page URL-encodes the name for you)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "member_id",
                        "in": "path",
                        "description": "The member's unique ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success"
                    }
                },
                "tags": [
                    "auth"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/smb/files/": {
            "get": {
                "summary": "Enumerate open file handles",
                "parameters": [
                    {
                        "name": "file_number",
                        "in": "query",
                        "description": "File ID (uint64). Limits result to handles on the specified file.",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "resolve_paths",
                        "in": "query",
                        "description": "Includes the paths to each file in the results. Resolving many paths can be slow.",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "Return entries after the given key (keys are returned in the paging object)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Return no more than this many entries; the system may choose a smaller limit.",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "file_handles": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "file_number": {
                                                        "type": "string"
                                                    },
                                                    "handle_info": {
                                                        "type": "object",
                                                        "properties": {
                                                            "location": {
                                                                "type": "string"
                                                            },
                                                            "version": {
                                                                "type": "number"
                                                            },
                                                            "num_byte_range_locks": {
                                                                "type": "number"
                                                            },
                                                            "access_mask": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "MS_ACCESS_FILE_READ_DATA",
                                                                        "MS_ACCESS_FILE_WRITE_DATA",
                                                                        "MS_ACCESS_FILE_APPEND_DATA",
                                                                        "MS_ACCESS_FILE_EXECUTE",
                                                                        "MS_ACCESS_FILE_LIST_DIRECTORY",
                                                                        "MS_ACCESS_FILE_ADD_FILE",
                                                                        "MS_ACCESS_FILE_ADD_SUBDIRECTORY",
                                                                        "MS_ACCESS_FILE_TRAVERSE",
                                                                        "MS_ACCESS_FILE_READ_EA",
                                                                        "MS_ACCESS_FILE_WRITE_EA",
                                                                        "MS_ACCESS_FILE_DELETE_CHILD",
                                                                        "MS_ACCESS_FILE_READ_ATTRIBUTES",
                                                                        "MS_ACCESS_FILE_WRITE_ATTRIBUTES",
                                                                        "MS_ACCESS_OBJECT_SPECIFIC_9",
                                                                        "MS_ACCESS_OBJECT_SPECIFIC_10",
                                                                        "MS_ACCESS_OBJECT_SPECIFIC_11",
                                                                        "MS_ACCESS_OBJECT_SPECIFIC_12",
                                                                        "MS_ACCESS_OBJECT_SPECIFIC_13",
                                                                        "MS_ACCESS_OBJECT_SPECIFIC_14",
                                                                        "MS_ACCESS_OBJECT_SPECIFIC_15",
                                                                        "MS_ACCESS_DELETE",
                                                                        "MS_ACCESS_READ_CONTROL",
                                                                        "MS_ACCESS_WRITE_DAC",
                                                                        "MS_ACCESS_WRITE_OWNER",
                                                                        "MS_ACCESS_SYNCHRONIZE",
                                                                        "MS_ACCESS_SYSTEM_SECURITY",
                                                                        "MS_ACCESS_MAXIMUM_ALLOWED",
                                                                        "MS_ACCESS_GENERIC_ALL",
                                                                        "MS_ACCESS_GENERIC_EXECUTE",
                                                                        "MS_ACCESS_GENERIC_WRITE",
                                                                        "MS_ACCESS_GENERIC_READ",
                                                                        "MS_ACCESS_FILE_ALL"
                                                                    ],
                                                                    "description": "access_mask:\n * `MS_ACCESS_DELETE` - MS_ACCESS_DELETE,\n * `MS_ACCESS_FILE_ADD_FILE` - MS_ACCESS_FILE_ADD_FILE,\n * `MS_ACCESS_FILE_ADD_SUBDIRECTORY` - MS_ACCESS_FILE_ADD_SUBDIRECTORY,\n * `MS_ACCESS_FILE_ALL` - MS_ACCESS_FILE_ALL,\n * `MS_ACCESS_FILE_APPEND_DATA` - MS_ACCESS_FILE_APPEND_DATA,\n * `MS_ACCESS_FILE_DELETE_CHILD` - MS_ACCESS_FILE_DELETE_CHILD,\n * `MS_ACCESS_FILE_EXECUTE` - MS_ACCESS_FILE_EXECUTE,\n * `MS_ACCESS_FILE_LIST_DIRECTORY` - MS_ACCESS_FILE_LIST_DIRECTORY,\n * `MS_ACCESS_FILE_READ_ATTRIBUTES` - MS_ACCESS_FILE_READ_ATTRIBUTES,\n * `MS_ACCESS_FILE_READ_DATA` - MS_ACCESS_FILE_READ_DATA,\n * `MS_ACCESS_FILE_READ_EA` - MS_ACCESS_FILE_READ_EA,\n * `MS_ACCESS_FILE_TRAVERSE` - MS_ACCESS_FILE_TRAVERSE,\n * `MS_ACCESS_FILE_WRITE_ATTRIBUTES` - MS_ACCESS_FILE_WRITE_ATTRIBUTES,\n * `MS_ACCESS_FILE_WRITE_DATA` - MS_ACCESS_FILE_WRITE_DATA,\n * `MS_ACCESS_FILE_WRITE_EA` - MS_ACCESS_FILE_WRITE_EA,\n * `MS_ACCESS_GENERIC_ALL` - MS_ACCESS_GENERIC_ALL,\n * `MS_ACCESS_GENERIC_EXECUTE` - MS_ACCESS_GENERIC_EXECUTE,\n * `MS_ACCESS_GENERIC_READ` - MS_ACCESS_GENERIC_READ,\n * `MS_ACCESS_GENERIC_WRITE` - MS_ACCESS_GENERIC_WRITE,\n * `MS_ACCESS_MAXIMUM_ALLOWED` - MS_ACCESS_MAXIMUM_ALLOWED,\n * `MS_ACCESS_OBJECT_SPECIFIC_10` - MS_ACCESS_OBJECT_SPECIFIC_10,\n * `MS_ACCESS_OBJECT_SPECIFIC_11` - MS_ACCESS_OBJECT_SPECIFIC_11,\n * `MS_ACCESS_OBJECT_SPECIFIC_12` - MS_ACCESS_OBJECT_SPECIFIC_12,\n * `MS_ACCESS_OBJECT_SPECIFIC_13` - MS_ACCESS_OBJECT_SPECIFIC_13,\n * `MS_ACCESS_OBJECT_SPECIFIC_14` - MS_ACCESS_OBJECT_SPECIFIC_14,\n * `MS_ACCESS_OBJECT_SPECIFIC_15` - MS_ACCESS_OBJECT_SPECIFIC_15,\n * `MS_ACCESS_OBJECT_SPECIFIC_9` - MS_ACCESS_OBJECT_SPECIFIC_9,\n * `MS_ACCESS_READ_CONTROL` - MS_ACCESS_READ_CONTROL,\n * `MS_ACCESS_SYNCHRONIZE` - MS_ACCESS_SYNCHRONIZE,\n * `MS_ACCESS_SYSTEM_SECURITY` - MS_ACCESS_SYSTEM_SECURITY,\n * `MS_ACCESS_WRITE_DAC` - MS_ACCESS_WRITE_DAC,\n * `MS_ACCESS_WRITE_OWNER` - MS_ACCESS_WRITE_OWNER"
                                                                }
                                                            },
                                                            "owner": {
                                                                "type": "string"
                                                            },
                                                            "path": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "smb"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/smb/files/close": {
            "post": {
                "summary": "The request body must contain a list of file handles to close, as returned from GET /v1/smb/files. Fields other than 'location' are ignored.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "error_message": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "smb"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "file_number": {
                                            "type": "string"
                                        },
                                        "handle_info": {
                                            "type": "object",
                                            "properties": {
                                                "location": {
                                                    "type": "string"
                                                },
                                                "version": {
                                                    "type": "number"
                                                },
                                                "num_byte_range_locks": {
                                                    "type": "number"
                                                },
                                                "access_mask": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "enum": [
                                                            "MS_ACCESS_FILE_READ_DATA",
                                                            "MS_ACCESS_FILE_WRITE_DATA",
                                                            "MS_ACCESS_FILE_APPEND_DATA",
                                                            "MS_ACCESS_FILE_EXECUTE",
                                                            "MS_ACCESS_FILE_LIST_DIRECTORY",
                                                            "MS_ACCESS_FILE_ADD_FILE",
                                                            "MS_ACCESS_FILE_ADD_SUBDIRECTORY",
                                                            "MS_ACCESS_FILE_TRAVERSE",
                                                            "MS_ACCESS_FILE_READ_EA",
                                                            "MS_ACCESS_FILE_WRITE_EA",
                                                            "MS_ACCESS_FILE_DELETE_CHILD",
                                                            "MS_ACCESS_FILE_READ_ATTRIBUTES",
                                                            "MS_ACCESS_FILE_WRITE_ATTRIBUTES",
                                                            "MS_ACCESS_OBJECT_SPECIFIC_9",
                                                            "MS_ACCESS_OBJECT_SPECIFIC_10",
                                                            "MS_ACCESS_OBJECT_SPECIFIC_11",
                                                            "MS_ACCESS_OBJECT_SPECIFIC_12",
                                                            "MS_ACCESS_OBJECT_SPECIFIC_13",
                                                            "MS_ACCESS_OBJECT_SPECIFIC_14",
                                                            "MS_ACCESS_OBJECT_SPECIFIC_15",
                                                            "MS_ACCESS_DELETE",
                                                            "MS_ACCESS_READ_CONTROL",
                                                            "MS_ACCESS_WRITE_DAC",
                                                            "MS_ACCESS_WRITE_OWNER",
                                                            "MS_ACCESS_SYNCHRONIZE",
                                                            "MS_ACCESS_SYSTEM_SECURITY",
                                                            "MS_ACCESS_MAXIMUM_ALLOWED",
                                                            "MS_ACCESS_GENERIC_ALL",
                                                            "MS_ACCESS_GENERIC_EXECUTE",
                                                            "MS_ACCESS_GENERIC_WRITE",
                                                            "MS_ACCESS_GENERIC_READ",
                                                            "MS_ACCESS_FILE_ALL"
                                                        ],
                                                        "description": "access_mask:\n * `MS_ACCESS_DELETE` - MS_ACCESS_DELETE,\n * `MS_ACCESS_FILE_ADD_FILE` - MS_ACCESS_FILE_ADD_FILE,\n * `MS_ACCESS_FILE_ADD_SUBDIRECTORY` - MS_ACCESS_FILE_ADD_SUBDIRECTORY,\n * `MS_ACCESS_FILE_ALL` - MS_ACCESS_FILE_ALL,\n * `MS_ACCESS_FILE_APPEND_DATA` - MS_ACCESS_FILE_APPEND_DATA,\n * `MS_ACCESS_FILE_DELETE_CHILD` - MS_ACCESS_FILE_DELETE_CHILD,\n * `MS_ACCESS_FILE_EXECUTE` - MS_ACCESS_FILE_EXECUTE,\n * `MS_ACCESS_FILE_LIST_DIRECTORY` - MS_ACCESS_FILE_LIST_DIRECTORY,\n * `MS_ACCESS_FILE_READ_ATTRIBUTES` - MS_ACCESS_FILE_READ_ATTRIBUTES,\n * `MS_ACCESS_FILE_READ_DATA` - MS_ACCESS_FILE_READ_DATA,\n * `MS_ACCESS_FILE_READ_EA` - MS_ACCESS_FILE_READ_EA,\n * `MS_ACCESS_FILE_TRAVERSE` - MS_ACCESS_FILE_TRAVERSE,\n * `MS_ACCESS_FILE_WRITE_ATTRIBUTES` - MS_ACCESS_FILE_WRITE_ATTRIBUTES,\n * `MS_ACCESS_FILE_WRITE_DATA` - MS_ACCESS_FILE_WRITE_DATA,\n * `MS_ACCESS_FILE_WRITE_EA` - MS_ACCESS_FILE_WRITE_EA,\n * `MS_ACCESS_GENERIC_ALL` - MS_ACCESS_GENERIC_ALL,\n * `MS_ACCESS_GENERIC_EXECUTE` - MS_ACCESS_GENERIC_EXECUTE,\n * `MS_ACCESS_GENERIC_READ` - MS_ACCESS_GENERIC_READ,\n * `MS_ACCESS_GENERIC_WRITE` - MS_ACCESS_GENERIC_WRITE,\n * `MS_ACCESS_MAXIMUM_ALLOWED` - MS_ACCESS_MAXIMUM_ALLOWED,\n * `MS_ACCESS_OBJECT_SPECIFIC_10` - MS_ACCESS_OBJECT_SPECIFIC_10,\n * `MS_ACCESS_OBJECT_SPECIFIC_11` - MS_ACCESS_OBJECT_SPECIFIC_11,\n * `MS_ACCESS_OBJECT_SPECIFIC_12` - MS_ACCESS_OBJECT_SPECIFIC_12,\n * `MS_ACCESS_OBJECT_SPECIFIC_13` - MS_ACCESS_OBJECT_SPECIFIC_13,\n * `MS_ACCESS_OBJECT_SPECIFIC_14` - MS_ACCESS_OBJECT_SPECIFIC_14,\n * `MS_ACCESS_OBJECT_SPECIFIC_15` - MS_ACCESS_OBJECT_SPECIFIC_15,\n * `MS_ACCESS_OBJECT_SPECIFIC_9` - MS_ACCESS_OBJECT_SPECIFIC_9,\n * `MS_ACCESS_READ_CONTROL` - MS_ACCESS_READ_CONTROL,\n * `MS_ACCESS_SYNCHRONIZE` - MS_ACCESS_SYNCHRONIZE,\n * `MS_ACCESS_SYSTEM_SECURITY` - MS_ACCESS_SYSTEM_SECURITY,\n * `MS_ACCESS_WRITE_DAC` - MS_ACCESS_WRITE_DAC,\n * `MS_ACCESS_WRITE_OWNER` - MS_ACCESS_WRITE_OWNER"
                                                    }
                                                },
                                                "owner": {
                                                    "type": "string"
                                                },
                                                "path": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/smb/settings": {
            "get": {
                "summary": "Get settings for the SMB Server.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "session_encryption": {
                                            "type": "string",
                                            "enum": [
                                                "NONE",
                                                "PREFERRED",
                                                "REQUIRED"
                                            ],
                                            "description": "Session-level encryption setting.:\n * `NONE` - Do not instruct clients to encrypt SMB traffic.,\n * `PREFERRED` - Instruct clients to encrypt SMB traffic if they support encryption.,\n * `REQUIRED` - Always instruct clients to encrypt SMB traffic. Reject clients who do not support encryption."
                                        },
                                        "supported_dialects": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "enum": [
                                                    "SMB2_DIALECT_2_002",
                                                    "SMB2_DIALECT_2_1",
                                                    "SMB2_DIALECT_3_0",
                                                    "SMB2_DIALECT_3_11"
                                                ],
                                                "description": "supported_dialects:\n * `SMB2_DIALECT_2_002` - API_SMB2_DIALECT_2_002,\n * `SMB2_DIALECT_2_1` - API_SMB2_DIALECT_2_1,\n * `SMB2_DIALECT_3_0` - API_SMB2_DIALECT_3_0,\n * `SMB2_DIALECT_3_11` - API_SMB2_DIALECT_3_11"
                                            }
                                        },
                                        "hide_shares_from_unauthorized_users": {
                                            "type": "boolean"
                                        },
                                        "hide_shares_from_unauthorized_hosts": {
                                            "type": "boolean"
                                        },
                                        "snapshot_directory_mode": {
                                            "type": "string",
                                            "enum": [
                                                "VISIBLE",
                                                "HIDDEN",
                                                "DISABLED"
                                            ],
                                            "description": "Whether the special .snapshot directory should be visible or accessible.:\n * `DISABLED` - .snapshot directories will not be accessible via SMB.,\n * `HIDDEN` - .snapshot directories will not be visible in directory listings, but may be opened by name.,\n * `VISIBLE` - A .snapshot directory will be visible when listing the root directory of a SMB share."
                                        },
                                        "bypass_traverse_checking": {
                                            "type": "boolean"
                                        },
                                        "signing_required": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "smb"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            },
            "put": {
                "summary": "Set settings for the SMB Server.",
                "parameters": [
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "session_encryption": {
                                            "type": "string",
                                            "enum": [
                                                "NONE",
                                                "PREFERRED",
                                                "REQUIRED"
                                            ],
                                            "description": "Session-level encryption setting.:\n * `NONE` - Do not instruct clients to encrypt SMB traffic.,\n * `PREFERRED` - Instruct clients to encrypt SMB traffic if they support encryption.,\n * `REQUIRED` - Always instruct clients to encrypt SMB traffic. Reject clients who do not support encryption."
                                        },
                                        "supported_dialects": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "enum": [
                                                    "SMB2_DIALECT_2_002",
                                                    "SMB2_DIALECT_2_1",
                                                    "SMB2_DIALECT_3_0",
                                                    "SMB2_DIALECT_3_11"
                                                ],
                                                "description": "supported_dialects:\n * `SMB2_DIALECT_2_002` - API_SMB2_DIALECT_2_002,\n * `SMB2_DIALECT_2_1` - API_SMB2_DIALECT_2_1,\n * `SMB2_DIALECT_3_0` - API_SMB2_DIALECT_3_0,\n * `SMB2_DIALECT_3_11` - API_SMB2_DIALECT_3_11"
                                            }
                                        },
                                        "hide_shares_from_unauthorized_users": {
                                            "type": "boolean"
                                        },
                                        "hide_shares_from_unauthorized_hosts": {
                                            "type": "boolean"
                                        },
                                        "snapshot_directory_mode": {
                                            "type": "string",
                                            "enum": [
                                                "VISIBLE",
                                                "HIDDEN",
                                                "DISABLED"
                                            ],
                                            "description": "Whether the special .snapshot directory should be visible or accessible.:\n * `DISABLED` - .snapshot directories will not be accessible via SMB.,\n * `HIDDEN` - .snapshot directories will not be visible in directory listings, but may be opened by name.,\n * `VISIBLE` - A .snapshot directory will be visible when listing the root directory of a SMB share."
                                        },
                                        "bypass_traverse_checking": {
                                            "type": "boolean"
                                        },
                                        "signing_required": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "smb"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "session_encryption": {
                                        "type": "string",
                                        "enum": [
                                            "NONE",
                                            "PREFERRED",
                                            "REQUIRED"
                                        ],
                                        "description": "Session-level encryption setting.:\n * `NONE` - Do not instruct clients to encrypt SMB traffic.,\n * `PREFERRED` - Instruct clients to encrypt SMB traffic if they support encryption.,\n * `REQUIRED` - Always instruct clients to encrypt SMB traffic. Reject clients who do not support encryption."
                                    },
                                    "supported_dialects": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "enum": [
                                                "SMB2_DIALECT_2_002",
                                                "SMB2_DIALECT_2_1",
                                                "SMB2_DIALECT_3_0",
                                                "SMB2_DIALECT_3_11"
                                            ],
                                            "description": "supported_dialects:\n * `SMB2_DIALECT_2_002` - API_SMB2_DIALECT_2_002,\n * `SMB2_DIALECT_2_1` - API_SMB2_DIALECT_2_1,\n * `SMB2_DIALECT_3_0` - API_SMB2_DIALECT_3_0,\n * `SMB2_DIALECT_3_11` - API_SMB2_DIALECT_3_11"
                                        }
                                    },
                                    "hide_shares_from_unauthorized_users": {
                                        "type": "boolean"
                                    },
                                    "hide_shares_from_unauthorized_hosts": {
                                        "type": "boolean"
                                    },
                                    "snapshot_directory_mode": {
                                        "type": "string",
                                        "enum": [
                                            "VISIBLE",
                                            "HIDDEN",
                                            "DISABLED"
                                        ],
                                        "description": "Whether the special .snapshot directory should be visible or accessible.:\n * `DISABLED` - .snapshot directories will not be accessible via SMB.,\n * `HIDDEN` - .snapshot directories will not be visible in directory listings, but may be opened by name.,\n * `VISIBLE` - A .snapshot directory will be visible when listing the root directory of a SMB share."
                                    },
                                    "bypass_traverse_checking": {
                                        "type": "boolean"
                                    },
                                    "signing_required": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Partially set settings for the SMB Server.",
                "parameters": [
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "session_encryption": {
                                            "type": "string",
                                            "enum": [
                                                "NONE",
                                                "PREFERRED",
                                                "REQUIRED"
                                            ],
                                            "description": "Session-level encryption setting.:\n * `NONE` - Do not instruct clients to encrypt SMB traffic.,\n * `PREFERRED` - Instruct clients to encrypt SMB traffic if they support encryption.,\n * `REQUIRED` - Always instruct clients to encrypt SMB traffic. Reject clients who do not support encryption."
                                        },
                                        "supported_dialects": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "enum": [
                                                    "SMB2_DIALECT_2_002",
                                                    "SMB2_DIALECT_2_1",
                                                    "SMB2_DIALECT_3_0",
                                                    "SMB2_DIALECT_3_11"
                                                ],
                                                "description": "supported_dialects:\n * `SMB2_DIALECT_2_002` - API_SMB2_DIALECT_2_002,\n * `SMB2_DIALECT_2_1` - API_SMB2_DIALECT_2_1,\n * `SMB2_DIALECT_3_0` - API_SMB2_DIALECT_3_0,\n * `SMB2_DIALECT_3_11` - API_SMB2_DIALECT_3_11"
                                            }
                                        },
                                        "hide_shares_from_unauthorized_users": {
                                            "type": "boolean"
                                        },
                                        "hide_shares_from_unauthorized_hosts": {
                                            "type": "boolean"
                                        },
                                        "snapshot_directory_mode": {
                                            "type": "string",
                                            "enum": [
                                                "VISIBLE",
                                                "HIDDEN",
                                                "DISABLED"
                                            ],
                                            "description": "Whether the special .snapshot directory should be visible or accessible.:\n * `DISABLED` - .snapshot directories will not be accessible via SMB.,\n * `HIDDEN` - .snapshot directories will not be visible in directory listings, but may be opened by name.,\n * `VISIBLE` - A .snapshot directory will be visible when listing the root directory of a SMB share."
                                        },
                                        "bypass_traverse_checking": {
                                            "type": "boolean"
                                        },
                                        "signing_required": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "smb"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "session_encryption": {
                                        "type": "string",
                                        "enum": [
                                            "NONE",
                                            "PREFERRED",
                                            "REQUIRED"
                                        ],
                                        "description": "Session-level encryption setting.:\n * `NONE` - Do not instruct clients to encrypt SMB traffic.,\n * `PREFERRED` - Instruct clients to encrypt SMB traffic if they support encryption.,\n * `REQUIRED` - Always instruct clients to encrypt SMB traffic. Reject clients who do not support encryption."
                                    },
                                    "supported_dialects": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "enum": [
                                                "SMB2_DIALECT_2_002",
                                                "SMB2_DIALECT_2_1",
                                                "SMB2_DIALECT_3_0",
                                                "SMB2_DIALECT_3_11"
                                            ],
                                            "description": "supported_dialects:\n * `SMB2_DIALECT_2_002` - API_SMB2_DIALECT_2_002,\n * `SMB2_DIALECT_2_1` - API_SMB2_DIALECT_2_1,\n * `SMB2_DIALECT_3_0` - API_SMB2_DIALECT_3_0,\n * `SMB2_DIALECT_3_11` - API_SMB2_DIALECT_3_11"
                                        }
                                    },
                                    "hide_shares_from_unauthorized_users": {
                                        "type": "boolean"
                                    },
                                    "hide_shares_from_unauthorized_hosts": {
                                        "type": "boolean"
                                    },
                                    "snapshot_directory_mode": {
                                        "type": "string",
                                        "enum": [
                                            "VISIBLE",
                                            "HIDDEN",
                                            "DISABLED"
                                        ],
                                        "description": "Whether the special .snapshot directory should be visible or accessible.:\n * `DISABLED` - .snapshot directories will not be accessible via SMB.,\n * `HIDDEN` - .snapshot directories will not be visible in directory listings, but may be opened by name.,\n * `VISIBLE` - A .snapshot directory will be visible when listing the root directory of a SMB share."
                                    },
                                    "bypass_traverse_checking": {
                                        "type": "boolean"
                                    },
                                    "signing_required": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/smb/sessions/": {
            "get": {
                "summary": "Enumerate open sessions",
                "parameters": [
                    {
                        "name": "identity",
                        "in": "query",
                        "description": "List only sessions matching a user identity in the form of: [1] A name or a SID optionally qualified with a domain prefix (e.g local:name, S-1-1-0, name, world:Everyone, ldap_user:name, or ad:name), or [2] An ID type (e.g. uid:1001, auth_id:513, SID:S-1-1-0).)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "Return entries after the given key (keys are returned in the paging object)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Return no more than this many entries; the system may choose a smaller limit.",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "session_infos": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "location": {
                                                        "type": "string"
                                                    },
                                                    "originator": {
                                                        "type": "string"
                                                    },
                                                    "user": {
                                                        "type": "object",
                                                        "properties": {
                                                            "domain": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "LOCAL",
                                                                    "API_NULL_DOMAIN",
                                                                    "WORLD",
                                                                    "POSIX_USER",
                                                                    "POSIX_GROUP",
                                                                    "ACTIVE_DIRECTORY",
                                                                    "API_INVALID_DOMAIN",
                                                                    "API_RESERVED_DOMAIN",
                                                                    "API_INTERNAL_DOMAIN",
                                                                    "API_OPERATOR_DOMAIN",
                                                                    "API_CREATOR_DOMAIN"
                                                                ],
                                                                "description": "domain:\n * `ACTIVE_DIRECTORY` - ACTIVE_DIRECTORY,\n * `API_CREATOR_DOMAIN` - API_CREATOR_DOMAIN,\n * `API_INTERNAL_DOMAIN` - API_INTERNAL_DOMAIN,\n * `API_INVALID_DOMAIN` - API_INVALID_DOMAIN,\n * `API_NULL_DOMAIN` - API_NULL_DOMAIN,\n * `API_OPERATOR_DOMAIN` - API_OPERATOR_DOMAIN,\n * `API_RESERVED_DOMAIN` - API_RESERVED_DOMAIN,\n * `LOCAL` - LOCAL,\n * `POSIX_GROUP` - POSIX_GROUP,\n * `POSIX_USER` - POSIX_USER,\n * `WORLD` - WORLD"
                                                            },
                                                            "auth_id": {
                                                                "type": "string"
                                                            },
                                                            "uid": {
                                                                "type": "number"
                                                            },
                                                            "gid": {
                                                                "type": "number"
                                                            },
                                                            "sid": {
                                                                "type": "string"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "num_opens": {
                                                        "type": "number"
                                                    },
                                                    "time_open": {
                                                        "type": "object",
                                                        "properties": {
                                                            "nanoseconds": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "time_idle": {
                                                        "type": "object",
                                                        "properties": {
                                                            "nanoseconds": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "is_guest": {
                                                        "type": "boolean"
                                                    },
                                                    "is_encrypted": {
                                                        "type": "boolean"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "smb"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/smb/sessions/close": {
            "post": {
                "summary": "The request body must contain a list of sessions to close, as returned from GET /v1/smb/sessions.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "error_message": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "smb"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "location": {
                                            "type": "string"
                                        },
                                        "originator": {
                                            "type": "string"
                                        },
                                        "user": {
                                            "type": "object",
                                            "properties": {
                                                "domain": {
                                                    "type": "string",
                                                    "enum": [
                                                        "LOCAL",
                                                        "API_NULL_DOMAIN",
                                                        "WORLD",
                                                        "POSIX_USER",
                                                        "POSIX_GROUP",
                                                        "ACTIVE_DIRECTORY",
                                                        "API_INVALID_DOMAIN",
                                                        "API_RESERVED_DOMAIN",
                                                        "API_INTERNAL_DOMAIN",
                                                        "API_OPERATOR_DOMAIN",
                                                        "API_CREATOR_DOMAIN"
                                                    ],
                                                    "description": "domain:\n * `ACTIVE_DIRECTORY` - ACTIVE_DIRECTORY,\n * `API_CREATOR_DOMAIN` - API_CREATOR_DOMAIN,\n * `API_INTERNAL_DOMAIN` - API_INTERNAL_DOMAIN,\n * `API_INVALID_DOMAIN` - API_INVALID_DOMAIN,\n * `API_NULL_DOMAIN` - API_NULL_DOMAIN,\n * `API_OPERATOR_DOMAIN` - API_OPERATOR_DOMAIN,\n * `API_RESERVED_DOMAIN` - API_RESERVED_DOMAIN,\n * `LOCAL` - LOCAL,\n * `POSIX_GROUP` - POSIX_GROUP,\n * `POSIX_USER` - POSIX_USER,\n * `WORLD` - WORLD"
                                                },
                                                "auth_id": {
                                                    "type": "string"
                                                },
                                                "uid": {
                                                    "type": "number"
                                                },
                                                "gid": {
                                                    "type": "number"
                                                },
                                                "sid": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "num_opens": {
                                            "type": "number"
                                        },
                                        "time_open": {
                                            "type": "object",
                                            "properties": {
                                                "nanoseconds": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "time_idle": {
                                            "type": "object",
                                            "properties": {
                                                "nanoseconds": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "is_guest": {
                                            "type": "boolean"
                                        },
                                        "is_encrypted": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/smb/shares/": {
            "get": {
                "summary": "List all SMB shares. Refer to the 'Modify SMB share' method for a description of the returned fields.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "share_name": {
                                                "type": "string"
                                            },
                                            "fs_path": {
                                                "type": "string"
                                            },
                                            "description": {
                                                "type": "string"
                                            },
                                            "read_only": {
                                                "type": "boolean"
                                            },
                                            "allow_guest_access": {
                                                "type": "boolean"
                                            },
                                            "access_based_enumeration_enabled": {
                                                "type": "boolean"
                                            },
                                            "default_file_create_mode": {
                                                "type": "string"
                                            },
                                            "default_directory_create_mode": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "smb"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            },
            "post": {
                "summary": "Add an SMB share with given options.",
                "parameters": [
                    {
                        "name": "allow-fs-path-create",
                        "in": "query",
                        "description": "Specifies whether the file system path can be created if it does not already exist.",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "share_name": {
                                            "type": "string"
                                        },
                                        "fs_path": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "read_only": {
                                            "type": "boolean"
                                        },
                                        "allow_guest_access": {
                                            "type": "boolean"
                                        },
                                        "access_based_enumeration_enabled": {
                                            "type": "boolean"
                                        },
                                        "default_file_create_mode": {
                                            "type": "string"
                                        },
                                        "default_directory_create_mode": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "smb"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "share_name": {
                                        "type": "string"
                                    },
                                    "fs_path": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "read_only": {
                                        "type": "boolean"
                                    },
                                    "allow_guest_access": {
                                        "type": "boolean"
                                    },
                                    "access_based_enumeration_enabled": {
                                        "type": "boolean"
                                    },
                                    "default_file_create_mode": {
                                        "type": "string"
                                    },
                                    "default_directory_create_mode": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/smb/shares/{id}": {
            "get": {
                "summary": "Retrieve the specified SMB share. Refer to the 'Modify SMB share' method for a description of the returned fields.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The unique ID of the SMB share",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "share_name": {
                                            "type": "string"
                                        },
                                        "fs_path": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "read_only": {
                                            "type": "boolean"
                                        },
                                        "allow_guest_access": {
                                            "type": "boolean"
                                        },
                                        "access_based_enumeration_enabled": {
                                            "type": "boolean"
                                        },
                                        "default_file_create_mode": {
                                            "type": "string"
                                        },
                                        "default_directory_create_mode": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "smb"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            },
            "put": {
                "summary": "Modify an SMB share's options.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The unique ID of the SMB share",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "allow-fs-path-create",
                        "in": "query",
                        "description": "Specifies whether the file system path can be created if it does not already exist.",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "share_name": {
                                            "type": "string"
                                        },
                                        "fs_path": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "read_only": {
                                            "type": "boolean"
                                        },
                                        "allow_guest_access": {
                                            "type": "boolean"
                                        },
                                        "access_based_enumeration_enabled": {
                                            "type": "boolean"
                                        },
                                        "default_file_create_mode": {
                                            "type": "string"
                                        },
                                        "default_directory_create_mode": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "smb"
                ],
                "deprecated": true,
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string"
                                    },
                                    "share_name": {
                                        "type": "string"
                                    },
                                    "fs_path": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "read_only": {
                                        "type": "boolean"
                                    },
                                    "allow_guest_access": {
                                        "type": "boolean"
                                    },
                                    "access_based_enumeration_enabled": {
                                        "type": "boolean"
                                    },
                                    "default_file_create_mode": {
                                        "type": "string"
                                    },
                                    "default_directory_create_mode": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete an SMB share. Not undoable.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The unique ID of the SMB share",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success"
                    }
                },
                "tags": [
                    "smb"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v2/smb/shares/": {
            "get": {
                "summary": "List all SMB shares. Refer to the 'Modify SMB Share' method for a description of the returned fields.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "share_name": {
                                                "type": "string"
                                            },
                                            "fs_path": {
                                                "type": "string"
                                            },
                                            "description": {
                                                "type": "string"
                                            },
                                            "permissions": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "type": {
                                                            "type": "string",
                                                            "enum": [
                                                                "ALLOWED",
                                                                "DENIED"
                                                            ],
                                                            "description": "Type of permissions entry (ALLOWED or DENIED):\n * `ALLOWED` - The permissions entry rights are allowed to the trustee,\n * `DENIED` - The permissions entry rights are denied to the trustee"
                                                        },
                                                        "trustee": {
                                                            "type": "object",
                                                            "properties": {
                                                                "domain": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "LOCAL",
                                                                        "API_NULL_DOMAIN",
                                                                        "WORLD",
                                                                        "POSIX_USER",
                                                                        "POSIX_GROUP",
                                                                        "ACTIVE_DIRECTORY",
                                                                        "API_INVALID_DOMAIN",
                                                                        "API_RESERVED_DOMAIN",
                                                                        "API_INTERNAL_DOMAIN",
                                                                        "API_OPERATOR_DOMAIN",
                                                                        "API_CREATOR_DOMAIN"
                                                                    ],
                                                                    "description": "domain:\n * `ACTIVE_DIRECTORY` - ACTIVE_DIRECTORY,\n * `API_CREATOR_DOMAIN` - API_CREATOR_DOMAIN,\n * `API_INTERNAL_DOMAIN` - API_INTERNAL_DOMAIN,\n * `API_INVALID_DOMAIN` - API_INVALID_DOMAIN,\n * `API_NULL_DOMAIN` - API_NULL_DOMAIN,\n * `API_OPERATOR_DOMAIN` - API_OPERATOR_DOMAIN,\n * `API_RESERVED_DOMAIN` - API_RESERVED_DOMAIN,\n * `LOCAL` - LOCAL,\n * `POSIX_GROUP` - POSIX_GROUP,\n * `POSIX_USER` - POSIX_USER,\n * `WORLD` - WORLD"
                                                                },
                                                                "auth_id": {
                                                                    "type": "string"
                                                                },
                                                                "uid": {
                                                                    "type": "number"
                                                                },
                                                                "gid": {
                                                                    "type": "number"
                                                                },
                                                                "sid": {
                                                                    "type": "string"
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                }
                                                            }
                                                        },
                                                        "rights": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "READ",
                                                                    "WRITE",
                                                                    "CHANGE_PERMISSIONS",
                                                                    "ALL",
                                                                    "READ_DATA",
                                                                    "READ_EA",
                                                                    "READ_ATTR",
                                                                    "READ_ACL",
                                                                    "WRITE_EA",
                                                                    "WRITE_ATTR",
                                                                    "WRITE_ACL",
                                                                    "CHANGE_OWNER",
                                                                    "WRITE_GROUP",
                                                                    "DELETE",
                                                                    "EXECUTE",
                                                                    "MODIFY",
                                                                    "EXTEND",
                                                                    "ADD_FILE",
                                                                    "ADD_SUBDIR",
                                                                    "DELETE_CHILD",
                                                                    "SYNCHRONIZE"
                                                                ],
                                                                "description": "Rights pertaining to the permissions entry:\n * `ADD_FILE` - File creation access,\n * `ADD_SUBDIR` - Directory creation access,\n * `ALL` - All access rights,\n * `CHANGE_OWNER` - Owner write access,\n * `CHANGE_PERMISSIONS` - Rights to change permissions on file objects,\n * `DELETE` - Delete access,\n * `DELETE_CHILD` - Delete from directory access,\n * `EXECUTE` - Execute access,\n * `EXTEND` - File extension access,\n * `MODIFY` - File modification access,\n * `READ` - Read access rights,\n * `READ_ACL` - ACL read access,\n * `READ_ATTR` - Attribute read access,\n * `READ_DATA` - File read access,\n * `READ_EA` - Extended attribute read access,\n * `SYNCHRONIZE` - File synchronize access,\n * `WRITE` - Write access rights,\n * `WRITE_ACL` - ACL write access,\n * `WRITE_ATTR` - Attribute write access,\n * `WRITE_EA` - Extended attribute write access,\n * `WRITE_GROUP` - Group write access"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "network_permissions": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "type": {
                                                            "type": "string",
                                                            "enum": [
                                                                "ALLOWED",
                                                                "DENIED"
                                                            ],
                                                            "description": "Type of permissions entry (ALLOWED or DENIED):\n * `ALLOWED` - The permissions entry rights are allowed to the trustee,\n * `DENIED` - The permissions entry rights are denied to the trustee"
                                                        },
                                                        "address_ranges": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "rights": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "READ",
                                                                    "WRITE",
                                                                    "CHANGE_PERMISSIONS",
                                                                    "ALL",
                                                                    "READ_DATA",
                                                                    "READ_EA",
                                                                    "READ_ATTR",
                                                                    "READ_ACL",
                                                                    "WRITE_EA",
                                                                    "WRITE_ATTR",
                                                                    "WRITE_ACL",
                                                                    "CHANGE_OWNER",
                                                                    "WRITE_GROUP",
                                                                    "DELETE",
                                                                    "EXECUTE",
                                                                    "MODIFY",
                                                                    "EXTEND",
                                                                    "ADD_FILE",
                                                                    "ADD_SUBDIR",
                                                                    "DELETE_CHILD",
                                                                    "SYNCHRONIZE"
                                                                ],
                                                                "description": "Rights pertaining to the permissions entry:\n * `ADD_FILE` - File creation access,\n * `ADD_SUBDIR` - Directory creation access,\n * `ALL` - All access rights,\n * `CHANGE_OWNER` - Owner write access,\n * `CHANGE_PERMISSIONS` - Rights to change permissions on file objects,\n * `DELETE` - Delete access,\n * `DELETE_CHILD` - Delete from directory access,\n * `EXECUTE` - Execute access,\n * `EXTEND` - File extension access,\n * `MODIFY` - File modification access,\n * `READ` - Read access rights,\n * `READ_ACL` - ACL read access,\n * `READ_ATTR` - Attribute read access,\n * `READ_DATA` - File read access,\n * `READ_EA` - Extended attribute read access,\n * `SYNCHRONIZE` - File synchronize access,\n * `WRITE` - Write access rights,\n * `WRITE_ACL` - ACL write access,\n * `WRITE_ATTR` - Attribute write access,\n * `WRITE_EA` - Extended attribute write access,\n * `WRITE_GROUP` - Group write access"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "access_based_enumeration_enabled": {
                                                "type": "boolean"
                                            },
                                            "default_file_create_mode": {
                                                "type": "string"
                                            },
                                            "default_directory_create_mode": {
                                                "type": "string"
                                            },
                                            "bytes_per_sector": {
                                                "type": "string"
                                            },
                                            "require_encryption": {
                                                "type": "boolean"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "smb"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            },
            "post": {
                "summary": "Add an SMB share with given options.",
                "parameters": [
                    {
                        "name": "allow-fs-path-create",
                        "in": "query",
                        "description": "Specifies whether the file system path can be created if it does not already exist.",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "share_name": {
                                            "type": "string"
                                        },
                                        "fs_path": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "permissions": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "enum": [
                                                            "ALLOWED",
                                                            "DENIED"
                                                        ],
                                                        "description": "Type of permissions entry (ALLOWED or DENIED):\n * `ALLOWED` - The permissions entry rights are allowed to the trustee,\n * `DENIED` - The permissions entry rights are denied to the trustee"
                                                    },
                                                    "trustee": {
                                                        "type": "object",
                                                        "properties": {
                                                            "domain": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "LOCAL",
                                                                    "API_NULL_DOMAIN",
                                                                    "WORLD",
                                                                    "POSIX_USER",
                                                                    "POSIX_GROUP",
                                                                    "ACTIVE_DIRECTORY",
                                                                    "API_INVALID_DOMAIN",
                                                                    "API_RESERVED_DOMAIN",
                                                                    "API_INTERNAL_DOMAIN",
                                                                    "API_OPERATOR_DOMAIN",
                                                                    "API_CREATOR_DOMAIN"
                                                                ],
                                                                "description": "domain:\n * `ACTIVE_DIRECTORY` - ACTIVE_DIRECTORY,\n * `API_CREATOR_DOMAIN` - API_CREATOR_DOMAIN,\n * `API_INTERNAL_DOMAIN` - API_INTERNAL_DOMAIN,\n * `API_INVALID_DOMAIN` - API_INVALID_DOMAIN,\n * `API_NULL_DOMAIN` - API_NULL_DOMAIN,\n * `API_OPERATOR_DOMAIN` - API_OPERATOR_DOMAIN,\n * `API_RESERVED_DOMAIN` - API_RESERVED_DOMAIN,\n * `LOCAL` - LOCAL,\n * `POSIX_GROUP` - POSIX_GROUP,\n * `POSIX_USER` - POSIX_USER,\n * `WORLD` - WORLD"
                                                            },
                                                            "auth_id": {
                                                                "type": "string"
                                                            },
                                                            "uid": {
                                                                "type": "number"
                                                            },
                                                            "gid": {
                                                                "type": "number"
                                                            },
                                                            "sid": {
                                                                "type": "string"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "rights": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "enum": [
                                                                "READ",
                                                                "WRITE",
                                                                "CHANGE_PERMISSIONS",
                                                                "ALL",
                                                                "READ_DATA",
                                                                "READ_EA",
                                                                "READ_ATTR",
                                                                "READ_ACL",
                                                                "WRITE_EA",
                                                                "WRITE_ATTR",
                                                                "WRITE_ACL",
                                                                "CHANGE_OWNER",
                                                                "WRITE_GROUP",
                                                                "DELETE",
                                                                "EXECUTE",
                                                                "MODIFY",
                                                                "EXTEND",
                                                                "ADD_FILE",
                                                                "ADD_SUBDIR",
                                                                "DELETE_CHILD",
                                                                "SYNCHRONIZE"
                                                            ],
                                                            "description": "Rights pertaining to the permissions entry:\n * `ADD_FILE` - File creation access,\n * `ADD_SUBDIR` - Directory creation access,\n * `ALL` - All access rights,\n * `CHANGE_OWNER` - Owner write access,\n * `CHANGE_PERMISSIONS` - Rights to change permissions on file objects,\n * `DELETE` - Delete access,\n * `DELETE_CHILD` - Delete from directory access,\n * `EXECUTE` - Execute access,\n * `EXTEND` - File extension access,\n * `MODIFY` - File modification access,\n * `READ` - Read access rights,\n * `READ_ACL` - ACL read access,\n * `READ_ATTR` - Attribute read access,\n * `READ_DATA` - File read access,\n * `READ_EA` - Extended attribute read access,\n * `SYNCHRONIZE` - File synchronize access,\n * `WRITE` - Write access rights,\n * `WRITE_ACL` - ACL write access,\n * `WRITE_ATTR` - Attribute write access,\n * `WRITE_EA` - Extended attribute write access,\n * `WRITE_GROUP` - Group write access"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "network_permissions": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "enum": [
                                                            "ALLOWED",
                                                            "DENIED"
                                                        ],
                                                        "description": "Type of permissions entry (ALLOWED or DENIED):\n * `ALLOWED` - The permissions entry rights are allowed to the trustee,\n * `DENIED` - The permissions entry rights are denied to the trustee"
                                                    },
                                                    "address_ranges": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "rights": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "enum": [
                                                                "READ",
                                                                "WRITE",
                                                                "CHANGE_PERMISSIONS",
                                                                "ALL",
                                                                "READ_DATA",
                                                                "READ_EA",
                                                                "READ_ATTR",
                                                                "READ_ACL",
                                                                "WRITE_EA",
                                                                "WRITE_ATTR",
                                                                "WRITE_ACL",
                                                                "CHANGE_OWNER",
                                                                "WRITE_GROUP",
                                                                "DELETE",
                                                                "EXECUTE",
                                                                "MODIFY",
                                                                "EXTEND",
                                                                "ADD_FILE",
                                                                "ADD_SUBDIR",
                                                                "DELETE_CHILD",
                                                                "SYNCHRONIZE"
                                                            ],
                                                            "description": "Rights pertaining to the permissions entry:\n * `ADD_FILE` - File creation access,\n * `ADD_SUBDIR` - Directory creation access,\n * `ALL` - All access rights,\n * `CHANGE_OWNER` - Owner write access,\n * `CHANGE_PERMISSIONS` - Rights to change permissions on file objects,\n * `DELETE` - Delete access,\n * `DELETE_CHILD` - Delete from directory access,\n * `EXECUTE` - Execute access,\n * `EXTEND` - File extension access,\n * `MODIFY` - File modification access,\n * `READ` - Read access rights,\n * `READ_ACL` - ACL read access,\n * `READ_ATTR` - Attribute read access,\n * `READ_DATA` - File read access,\n * `READ_EA` - Extended attribute read access,\n * `SYNCHRONIZE` - File synchronize access,\n * `WRITE` - Write access rights,\n * `WRITE_ACL` - ACL write access,\n * `WRITE_ATTR` - Attribute write access,\n * `WRITE_EA` - Extended attribute write access,\n * `WRITE_GROUP` - Group write access"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "access_based_enumeration_enabled": {
                                            "type": "boolean"
                                        },
                                        "default_file_create_mode": {
                                            "type": "string"
                                        },
                                        "default_directory_create_mode": {
                                            "type": "string"
                                        },
                                        "bytes_per_sector": {
                                            "type": "string"
                                        },
                                        "require_encryption": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "smb"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "share_name": {
                                        "type": "string"
                                    },
                                    "fs_path": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "permissions": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "ALLOWED",
                                                        "DENIED"
                                                    ],
                                                    "description": "Type of permissions entry (ALLOWED or DENIED):\n * `ALLOWED` - The permissions entry rights are allowed to the trustee,\n * `DENIED` - The permissions entry rights are denied to the trustee"
                                                },
                                                "trustee": {
                                                    "type": "object",
                                                    "properties": {
                                                        "domain": {
                                                            "type": "string",
                                                            "enum": [
                                                                "LOCAL",
                                                                "API_NULL_DOMAIN",
                                                                "WORLD",
                                                                "POSIX_USER",
                                                                "POSIX_GROUP",
                                                                "ACTIVE_DIRECTORY",
                                                                "API_INVALID_DOMAIN",
                                                                "API_RESERVED_DOMAIN",
                                                                "API_INTERNAL_DOMAIN",
                                                                "API_OPERATOR_DOMAIN",
                                                                "API_CREATOR_DOMAIN"
                                                            ],
                                                            "description": "domain:\n * `ACTIVE_DIRECTORY` - ACTIVE_DIRECTORY,\n * `API_CREATOR_DOMAIN` - API_CREATOR_DOMAIN,\n * `API_INTERNAL_DOMAIN` - API_INTERNAL_DOMAIN,\n * `API_INVALID_DOMAIN` - API_INVALID_DOMAIN,\n * `API_NULL_DOMAIN` - API_NULL_DOMAIN,\n * `API_OPERATOR_DOMAIN` - API_OPERATOR_DOMAIN,\n * `API_RESERVED_DOMAIN` - API_RESERVED_DOMAIN,\n * `LOCAL` - LOCAL,\n * `POSIX_GROUP` - POSIX_GROUP,\n * `POSIX_USER` - POSIX_USER,\n * `WORLD` - WORLD"
                                                        },
                                                        "auth_id": {
                                                            "type": "string"
                                                        },
                                                        "uid": {
                                                            "type": "number"
                                                        },
                                                        "gid": {
                                                            "type": "number"
                                                        },
                                                        "sid": {
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        }
                                                    }
                                                },
                                                "rights": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "enum": [
                                                            "READ",
                                                            "WRITE",
                                                            "CHANGE_PERMISSIONS",
                                                            "ALL",
                                                            "READ_DATA",
                                                            "READ_EA",
                                                            "READ_ATTR",
                                                            "READ_ACL",
                                                            "WRITE_EA",
                                                            "WRITE_ATTR",
                                                            "WRITE_ACL",
                                                            "CHANGE_OWNER",
                                                            "WRITE_GROUP",
                                                            "DELETE",
                                                            "EXECUTE",
                                                            "MODIFY",
                                                            "EXTEND",
                                                            "ADD_FILE",
                                                            "ADD_SUBDIR",
                                                            "DELETE_CHILD",
                                                            "SYNCHRONIZE"
                                                        ],
                                                        "description": "Rights pertaining to the permissions entry:\n * `ADD_FILE` - File creation access,\n * `ADD_SUBDIR` - Directory creation access,\n * `ALL` - All access rights,\n * `CHANGE_OWNER` - Owner write access,\n * `CHANGE_PERMISSIONS` - Rights to change permissions on file objects,\n * `DELETE` - Delete access,\n * `DELETE_CHILD` - Delete from directory access,\n * `EXECUTE` - Execute access,\n * `EXTEND` - File extension access,\n * `MODIFY` - File modification access,\n * `READ` - Read access rights,\n * `READ_ACL` - ACL read access,\n * `READ_ATTR` - Attribute read access,\n * `READ_DATA` - File read access,\n * `READ_EA` - Extended attribute read access,\n * `SYNCHRONIZE` - File synchronize access,\n * `WRITE` - Write access rights,\n * `WRITE_ACL` - ACL write access,\n * `WRITE_ATTR` - Attribute write access,\n * `WRITE_EA` - Extended attribute write access,\n * `WRITE_GROUP` - Group write access"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "network_permissions": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "ALLOWED",
                                                        "DENIED"
                                                    ],
                                                    "description": "Type of permissions entry (ALLOWED or DENIED):\n * `ALLOWED` - The permissions entry rights are allowed to the trustee,\n * `DENIED` - The permissions entry rights are denied to the trustee"
                                                },
                                                "address_ranges": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "rights": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "enum": [
                                                            "READ",
                                                            "WRITE",
                                                            "CHANGE_PERMISSIONS",
                                                            "ALL",
                                                            "READ_DATA",
                                                            "READ_EA",
                                                            "READ_ATTR",
                                                            "READ_ACL",
                                                            "WRITE_EA",
                                                            "WRITE_ATTR",
                                                            "WRITE_ACL",
                                                            "CHANGE_OWNER",
                                                            "WRITE_GROUP",
                                                            "DELETE",
                                                            "EXECUTE",
                                                            "MODIFY",
                                                            "EXTEND",
                                                            "ADD_FILE",
                                                            "ADD_SUBDIR",
                                                            "DELETE_CHILD",
                                                            "SYNCHRONIZE"
                                                        ],
                                                        "description": "Rights pertaining to the permissions entry:\n * `ADD_FILE` - File creation access,\n * `ADD_SUBDIR` - Directory creation access,\n * `ALL` - All access rights,\n * `CHANGE_OWNER` - Owner write access,\n * `CHANGE_PERMISSIONS` - Rights to change permissions on file objects,\n * `DELETE` - Delete access,\n * `DELETE_CHILD` - Delete from directory access,\n * `EXECUTE` - Execute access,\n * `EXTEND` - File extension access,\n * `MODIFY` - File modification access,\n * `READ` - Read access rights,\n * `READ_ACL` - ACL read access,\n * `READ_ATTR` - Attribute read access,\n * `READ_DATA` - File read access,\n * `READ_EA` - Extended attribute read access,\n * `SYNCHRONIZE` - File synchronize access,\n * `WRITE` - Write access rights,\n * `WRITE_ACL` - ACL write access,\n * `WRITE_ATTR` - Attribute write access,\n * `WRITE_EA` - Extended attribute write access,\n * `WRITE_GROUP` - Group write access"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "access_based_enumeration_enabled": {
                                        "type": "boolean"
                                    },
                                    "default_file_create_mode": {
                                        "type": "string"
                                    },
                                    "default_directory_create_mode": {
                                        "type": "string"
                                    },
                                    "bytes_per_sector": {
                                        "type": "string"
                                    },
                                    "require_encryption": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/smb/shares/{ref}": {
            "get": {
                "summary": "Retrieve the specified SMB share. Refer to the 'Modify SMB Share' method for a description of the returned fields.",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "A unique identifier of the SMB share, either share ID or name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "share_name": {
                                            "type": "string"
                                        },
                                        "fs_path": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "permissions": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "enum": [
                                                            "ALLOWED",
                                                            "DENIED"
                                                        ],
                                                        "description": "Type of permissions entry (ALLOWED or DENIED):\n * `ALLOWED` - The permissions entry rights are allowed to the trustee,\n * `DENIED` - The permissions entry rights are denied to the trustee"
                                                    },
                                                    "trustee": {
                                                        "type": "object",
                                                        "properties": {
                                                            "domain": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "LOCAL",
                                                                    "API_NULL_DOMAIN",
                                                                    "WORLD",
                                                                    "POSIX_USER",
                                                                    "POSIX_GROUP",
                                                                    "ACTIVE_DIRECTORY",
                                                                    "API_INVALID_DOMAIN",
                                                                    "API_RESERVED_DOMAIN",
                                                                    "API_INTERNAL_DOMAIN",
                                                                    "API_OPERATOR_DOMAIN",
                                                                    "API_CREATOR_DOMAIN"
                                                                ],
                                                                "description": "domain:\n * `ACTIVE_DIRECTORY` - ACTIVE_DIRECTORY,\n * `API_CREATOR_DOMAIN` - API_CREATOR_DOMAIN,\n * `API_INTERNAL_DOMAIN` - API_INTERNAL_DOMAIN,\n * `API_INVALID_DOMAIN` - API_INVALID_DOMAIN,\n * `API_NULL_DOMAIN` - API_NULL_DOMAIN,\n * `API_OPERATOR_DOMAIN` - API_OPERATOR_DOMAIN,\n * `API_RESERVED_DOMAIN` - API_RESERVED_DOMAIN,\n * `LOCAL` - LOCAL,\n * `POSIX_GROUP` - POSIX_GROUP,\n * `POSIX_USER` - POSIX_USER,\n * `WORLD` - WORLD"
                                                            },
                                                            "auth_id": {
                                                                "type": "string"
                                                            },
                                                            "uid": {
                                                                "type": "number"
                                                            },
                                                            "gid": {
                                                                "type": "number"
                                                            },
                                                            "sid": {
                                                                "type": "string"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "rights": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "enum": [
                                                                "READ",
                                                                "WRITE",
                                                                "CHANGE_PERMISSIONS",
                                                                "ALL",
                                                                "READ_DATA",
                                                                "READ_EA",
                                                                "READ_ATTR",
                                                                "READ_ACL",
                                                                "WRITE_EA",
                                                                "WRITE_ATTR",
                                                                "WRITE_ACL",
                                                                "CHANGE_OWNER",
                                                                "WRITE_GROUP",
                                                                "DELETE",
                                                                "EXECUTE",
                                                                "MODIFY",
                                                                "EXTEND",
                                                                "ADD_FILE",
                                                                "ADD_SUBDIR",
                                                                "DELETE_CHILD",
                                                                "SYNCHRONIZE"
                                                            ],
                                                            "description": "Rights pertaining to the permissions entry:\n * `ADD_FILE` - File creation access,\n * `ADD_SUBDIR` - Directory creation access,\n * `ALL` - All access rights,\n * `CHANGE_OWNER` - Owner write access,\n * `CHANGE_PERMISSIONS` - Rights to change permissions on file objects,\n * `DELETE` - Delete access,\n * `DELETE_CHILD` - Delete from directory access,\n * `EXECUTE` - Execute access,\n * `EXTEND` - File extension access,\n * `MODIFY` - File modification access,\n * `READ` - Read access rights,\n * `READ_ACL` - ACL read access,\n * `READ_ATTR` - Attribute read access,\n * `READ_DATA` - File read access,\n * `READ_EA` - Extended attribute read access,\n * `SYNCHRONIZE` - File synchronize access,\n * `WRITE` - Write access rights,\n * `WRITE_ACL` - ACL write access,\n * `WRITE_ATTR` - Attribute write access,\n * `WRITE_EA` - Extended attribute write access,\n * `WRITE_GROUP` - Group write access"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "network_permissions": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "enum": [
                                                            "ALLOWED",
                                                            "DENIED"
                                                        ],
                                                        "description": "Type of permissions entry (ALLOWED or DENIED):\n * `ALLOWED` - The permissions entry rights are allowed to the trustee,\n * `DENIED` - The permissions entry rights are denied to the trustee"
                                                    },
                                                    "address_ranges": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "rights": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "enum": [
                                                                "READ",
                                                                "WRITE",
                                                                "CHANGE_PERMISSIONS",
                                                                "ALL",
                                                                "READ_DATA",
                                                                "READ_EA",
                                                                "READ_ATTR",
                                                                "READ_ACL",
                                                                "WRITE_EA",
                                                                "WRITE_ATTR",
                                                                "WRITE_ACL",
                                                                "CHANGE_OWNER",
                                                                "WRITE_GROUP",
                                                                "DELETE",
                                                                "EXECUTE",
                                                                "MODIFY",
                                                                "EXTEND",
                                                                "ADD_FILE",
                                                                "ADD_SUBDIR",
                                                                "DELETE_CHILD",
                                                                "SYNCHRONIZE"
                                                            ],
                                                            "description": "Rights pertaining to the permissions entry:\n * `ADD_FILE` - File creation access,\n * `ADD_SUBDIR` - Directory creation access,\n * `ALL` - All access rights,\n * `CHANGE_OWNER` - Owner write access,\n * `CHANGE_PERMISSIONS` - Rights to change permissions on file objects,\n * `DELETE` - Delete access,\n * `DELETE_CHILD` - Delete from directory access,\n * `EXECUTE` - Execute access,\n * `EXTEND` - File extension access,\n * `MODIFY` - File modification access,\n * `READ` - Read access rights,\n * `READ_ACL` - ACL read access,\n * `READ_ATTR` - Attribute read access,\n * `READ_DATA` - File read access,\n * `READ_EA` - Extended attribute read access,\n * `SYNCHRONIZE` - File synchronize access,\n * `WRITE` - Write access rights,\n * `WRITE_ACL` - ACL write access,\n * `WRITE_ATTR` - Attribute write access,\n * `WRITE_EA` - Extended attribute write access,\n * `WRITE_GROUP` - Group write access"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "access_based_enumeration_enabled": {
                                            "type": "boolean"
                                        },
                                        "default_file_create_mode": {
                                            "type": "string"
                                        },
                                        "default_directory_create_mode": {
                                            "type": "string"
                                        },
                                        "bytes_per_sector": {
                                            "type": "string"
                                        },
                                        "require_encryption": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "smb"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            },
            "put": {
                "summary": "Modify an SMB share's options.",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "A unique identifier of the SMB share, either share ID or name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "allow-fs-path-create",
                        "in": "query",
                        "description": "Specifies whether the file system path can be created if it does not already exist.",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "share_name": {
                                            "type": "string"
                                        },
                                        "fs_path": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "permissions": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "enum": [
                                                            "ALLOWED",
                                                            "DENIED"
                                                        ],
                                                        "description": "Type of permissions entry (ALLOWED or DENIED):\n * `ALLOWED` - The permissions entry rights are allowed to the trustee,\n * `DENIED` - The permissions entry rights are denied to the trustee"
                                                    },
                                                    "trustee": {
                                                        "type": "object",
                                                        "properties": {
                                                            "domain": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "LOCAL",
                                                                    "API_NULL_DOMAIN",
                                                                    "WORLD",
                                                                    "POSIX_USER",
                                                                    "POSIX_GROUP",
                                                                    "ACTIVE_DIRECTORY",
                                                                    "API_INVALID_DOMAIN",
                                                                    "API_RESERVED_DOMAIN",
                                                                    "API_INTERNAL_DOMAIN",
                                                                    "API_OPERATOR_DOMAIN",
                                                                    "API_CREATOR_DOMAIN"
                                                                ],
                                                                "description": "domain:\n * `ACTIVE_DIRECTORY` - ACTIVE_DIRECTORY,\n * `API_CREATOR_DOMAIN` - API_CREATOR_DOMAIN,\n * `API_INTERNAL_DOMAIN` - API_INTERNAL_DOMAIN,\n * `API_INVALID_DOMAIN` - API_INVALID_DOMAIN,\n * `API_NULL_DOMAIN` - API_NULL_DOMAIN,\n * `API_OPERATOR_DOMAIN` - API_OPERATOR_DOMAIN,\n * `API_RESERVED_DOMAIN` - API_RESERVED_DOMAIN,\n * `LOCAL` - LOCAL,\n * `POSIX_GROUP` - POSIX_GROUP,\n * `POSIX_USER` - POSIX_USER,\n * `WORLD` - WORLD"
                                                            },
                                                            "auth_id": {
                                                                "type": "string"
                                                            },
                                                            "uid": {
                                                                "type": "number"
                                                            },
                                                            "gid": {
                                                                "type": "number"
                                                            },
                                                            "sid": {
                                                                "type": "string"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "rights": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "enum": [
                                                                "READ",
                                                                "WRITE",
                                                                "CHANGE_PERMISSIONS",
                                                                "ALL",
                                                                "READ_DATA",
                                                                "READ_EA",
                                                                "READ_ATTR",
                                                                "READ_ACL",
                                                                "WRITE_EA",
                                                                "WRITE_ATTR",
                                                                "WRITE_ACL",
                                                                "CHANGE_OWNER",
                                                                "WRITE_GROUP",
                                                                "DELETE",
                                                                "EXECUTE",
                                                                "MODIFY",
                                                                "EXTEND",
                                                                "ADD_FILE",
                                                                "ADD_SUBDIR",
                                                                "DELETE_CHILD",
                                                                "SYNCHRONIZE"
                                                            ],
                                                            "description": "Rights pertaining to the permissions entry:\n * `ADD_FILE` - File creation access,\n * `ADD_SUBDIR` - Directory creation access,\n * `ALL` - All access rights,\n * `CHANGE_OWNER` - Owner write access,\n * `CHANGE_PERMISSIONS` - Rights to change permissions on file objects,\n * `DELETE` - Delete access,\n * `DELETE_CHILD` - Delete from directory access,\n * `EXECUTE` - Execute access,\n * `EXTEND` - File extension access,\n * `MODIFY` - File modification access,\n * `READ` - Read access rights,\n * `READ_ACL` - ACL read access,\n * `READ_ATTR` - Attribute read access,\n * `READ_DATA` - File read access,\n * `READ_EA` - Extended attribute read access,\n * `SYNCHRONIZE` - File synchronize access,\n * `WRITE` - Write access rights,\n * `WRITE_ACL` - ACL write access,\n * `WRITE_ATTR` - Attribute write access,\n * `WRITE_EA` - Extended attribute write access,\n * `WRITE_GROUP` - Group write access"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "network_permissions": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "enum": [
                                                            "ALLOWED",
                                                            "DENIED"
                                                        ],
                                                        "description": "Type of permissions entry (ALLOWED or DENIED):\n * `ALLOWED` - The permissions entry rights are allowed to the trustee,\n * `DENIED` - The permissions entry rights are denied to the trustee"
                                                    },
                                                    "address_ranges": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "rights": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "enum": [
                                                                "READ",
                                                                "WRITE",
                                                                "CHANGE_PERMISSIONS",
                                                                "ALL",
                                                                "READ_DATA",
                                                                "READ_EA",
                                                                "READ_ATTR",
                                                                "READ_ACL",
                                                                "WRITE_EA",
                                                                "WRITE_ATTR",
                                                                "WRITE_ACL",
                                                                "CHANGE_OWNER",
                                                                "WRITE_GROUP",
                                                                "DELETE",
                                                                "EXECUTE",
                                                                "MODIFY",
                                                                "EXTEND",
                                                                "ADD_FILE",
                                                                "ADD_SUBDIR",
                                                                "DELETE_CHILD",
                                                                "SYNCHRONIZE"
                                                            ],
                                                            "description": "Rights pertaining to the permissions entry:\n * `ADD_FILE` - File creation access,\n * `ADD_SUBDIR` - Directory creation access,\n * `ALL` - All access rights,\n * `CHANGE_OWNER` - Owner write access,\n * `CHANGE_PERMISSIONS` - Rights to change permissions on file objects,\n * `DELETE` - Delete access,\n * `DELETE_CHILD` - Delete from directory access,\n * `EXECUTE` - Execute access,\n * `EXTEND` - File extension access,\n * `MODIFY` - File modification access,\n * `READ` - Read access rights,\n * `READ_ACL` - ACL read access,\n * `READ_ATTR` - Attribute read access,\n * `READ_DATA` - File read access,\n * `READ_EA` - Extended attribute read access,\n * `SYNCHRONIZE` - File synchronize access,\n * `WRITE` - Write access rights,\n * `WRITE_ACL` - ACL write access,\n * `WRITE_ATTR` - Attribute write access,\n * `WRITE_EA` - Extended attribute write access,\n * `WRITE_GROUP` - Group write access"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "access_based_enumeration_enabled": {
                                            "type": "boolean"
                                        },
                                        "default_file_create_mode": {
                                            "type": "string"
                                        },
                                        "default_directory_create_mode": {
                                            "type": "string"
                                        },
                                        "bytes_per_sector": {
                                            "type": "string"
                                        },
                                        "require_encryption": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "smb"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string"
                                    },
                                    "share_name": {
                                        "type": "string"
                                    },
                                    "fs_path": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "permissions": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "ALLOWED",
                                                        "DENIED"
                                                    ],
                                                    "description": "Type of permissions entry (ALLOWED or DENIED):\n * `ALLOWED` - The permissions entry rights are allowed to the trustee,\n * `DENIED` - The permissions entry rights are denied to the trustee"
                                                },
                                                "trustee": {
                                                    "type": "object",
                                                    "properties": {
                                                        "domain": {
                                                            "type": "string",
                                                            "enum": [
                                                                "LOCAL",
                                                                "API_NULL_DOMAIN",
                                                                "WORLD",
                                                                "POSIX_USER",
                                                                "POSIX_GROUP",
                                                                "ACTIVE_DIRECTORY",
                                                                "API_INVALID_DOMAIN",
                                                                "API_RESERVED_DOMAIN",
                                                                "API_INTERNAL_DOMAIN",
                                                                "API_OPERATOR_DOMAIN",
                                                                "API_CREATOR_DOMAIN"
                                                            ],
                                                            "description": "domain:\n * `ACTIVE_DIRECTORY` - ACTIVE_DIRECTORY,\n * `API_CREATOR_DOMAIN` - API_CREATOR_DOMAIN,\n * `API_INTERNAL_DOMAIN` - API_INTERNAL_DOMAIN,\n * `API_INVALID_DOMAIN` - API_INVALID_DOMAIN,\n * `API_NULL_DOMAIN` - API_NULL_DOMAIN,\n * `API_OPERATOR_DOMAIN` - API_OPERATOR_DOMAIN,\n * `API_RESERVED_DOMAIN` - API_RESERVED_DOMAIN,\n * `LOCAL` - LOCAL,\n * `POSIX_GROUP` - POSIX_GROUP,\n * `POSIX_USER` - POSIX_USER,\n * `WORLD` - WORLD"
                                                        },
                                                        "auth_id": {
                                                            "type": "string"
                                                        },
                                                        "uid": {
                                                            "type": "number"
                                                        },
                                                        "gid": {
                                                            "type": "number"
                                                        },
                                                        "sid": {
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        }
                                                    }
                                                },
                                                "rights": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "enum": [
                                                            "READ",
                                                            "WRITE",
                                                            "CHANGE_PERMISSIONS",
                                                            "ALL",
                                                            "READ_DATA",
                                                            "READ_EA",
                                                            "READ_ATTR",
                                                            "READ_ACL",
                                                            "WRITE_EA",
                                                            "WRITE_ATTR",
                                                            "WRITE_ACL",
                                                            "CHANGE_OWNER",
                                                            "WRITE_GROUP",
                                                            "DELETE",
                                                            "EXECUTE",
                                                            "MODIFY",
                                                            "EXTEND",
                                                            "ADD_FILE",
                                                            "ADD_SUBDIR",
                                                            "DELETE_CHILD",
                                                            "SYNCHRONIZE"
                                                        ],
                                                        "description": "Rights pertaining to the permissions entry:\n * `ADD_FILE` - File creation access,\n * `ADD_SUBDIR` - Directory creation access,\n * `ALL` - All access rights,\n * `CHANGE_OWNER` - Owner write access,\n * `CHANGE_PERMISSIONS` - Rights to change permissions on file objects,\n * `DELETE` - Delete access,\n * `DELETE_CHILD` - Delete from directory access,\n * `EXECUTE` - Execute access,\n * `EXTEND` - File extension access,\n * `MODIFY` - File modification access,\n * `READ` - Read access rights,\n * `READ_ACL` - ACL read access,\n * `READ_ATTR` - Attribute read access,\n * `READ_DATA` - File read access,\n * `READ_EA` - Extended attribute read access,\n * `SYNCHRONIZE` - File synchronize access,\n * `WRITE` - Write access rights,\n * `WRITE_ACL` - ACL write access,\n * `WRITE_ATTR` - Attribute write access,\n * `WRITE_EA` - Extended attribute write access,\n * `WRITE_GROUP` - Group write access"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "network_permissions": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "ALLOWED",
                                                        "DENIED"
                                                    ],
                                                    "description": "Type of permissions entry (ALLOWED or DENIED):\n * `ALLOWED` - The permissions entry rights are allowed to the trustee,\n * `DENIED` - The permissions entry rights are denied to the trustee"
                                                },
                                                "address_ranges": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "rights": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "enum": [
                                                            "READ",
                                                            "WRITE",
                                                            "CHANGE_PERMISSIONS",
                                                            "ALL",
                                                            "READ_DATA",
                                                            "READ_EA",
                                                            "READ_ATTR",
                                                            "READ_ACL",
                                                            "WRITE_EA",
                                                            "WRITE_ATTR",
                                                            "WRITE_ACL",
                                                            "CHANGE_OWNER",
                                                            "WRITE_GROUP",
                                                            "DELETE",
                                                            "EXECUTE",
                                                            "MODIFY",
                                                            "EXTEND",
                                                            "ADD_FILE",
                                                            "ADD_SUBDIR",
                                                            "DELETE_CHILD",
                                                            "SYNCHRONIZE"
                                                        ],
                                                        "description": "Rights pertaining to the permissions entry:\n * `ADD_FILE` - File creation access,\n * `ADD_SUBDIR` - Directory creation access,\n * `ALL` - All access rights,\n * `CHANGE_OWNER` - Owner write access,\n * `CHANGE_PERMISSIONS` - Rights to change permissions on file objects,\n * `DELETE` - Delete access,\n * `DELETE_CHILD` - Delete from directory access,\n * `EXECUTE` - Execute access,\n * `EXTEND` - File extension access,\n * `MODIFY` - File modification access,\n * `READ` - Read access rights,\n * `READ_ACL` - ACL read access,\n * `READ_ATTR` - Attribute read access,\n * `READ_DATA` - File read access,\n * `READ_EA` - Extended attribute read access,\n * `SYNCHRONIZE` - File synchronize access,\n * `WRITE` - Write access rights,\n * `WRITE_ACL` - ACL write access,\n * `WRITE_ATTR` - Attribute write access,\n * `WRITE_EA` - Extended attribute write access,\n * `WRITE_GROUP` - Group write access"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "access_based_enumeration_enabled": {
                                        "type": "boolean"
                                    },
                                    "default_file_create_mode": {
                                        "type": "string"
                                    },
                                    "default_directory_create_mode": {
                                        "type": "string"
                                    },
                                    "bytes_per_sector": {
                                        "type": "string"
                                    },
                                    "require_encryption": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Modify select fields in an SMB share.",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "A unique identifier of the SMB share, either share ID or name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "allow-fs-path-create",
                        "in": "query",
                        "description": "Specifies whether the file system path can be created if it does not already exist.",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "share_name": {
                                            "type": "string"
                                        },
                                        "fs_path": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "permissions": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "enum": [
                                                            "ALLOWED",
                                                            "DENIED"
                                                        ],
                                                        "description": "Type of permissions entry (ALLOWED or DENIED):\n * `ALLOWED` - The permissions entry rights are allowed to the trustee,\n * `DENIED` - The permissions entry rights are denied to the trustee"
                                                    },
                                                    "trustee": {
                                                        "type": "object",
                                                        "properties": {
                                                            "domain": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "LOCAL",
                                                                    "API_NULL_DOMAIN",
                                                                    "WORLD",
                                                                    "POSIX_USER",
                                                                    "POSIX_GROUP",
                                                                    "ACTIVE_DIRECTORY",
                                                                    "API_INVALID_DOMAIN",
                                                                    "API_RESERVED_DOMAIN",
                                                                    "API_INTERNAL_DOMAIN",
                                                                    "API_OPERATOR_DOMAIN",
                                                                    "API_CREATOR_DOMAIN"
                                                                ],
                                                                "description": "domain:\n * `ACTIVE_DIRECTORY` - ACTIVE_DIRECTORY,\n * `API_CREATOR_DOMAIN` - API_CREATOR_DOMAIN,\n * `API_INTERNAL_DOMAIN` - API_INTERNAL_DOMAIN,\n * `API_INVALID_DOMAIN` - API_INVALID_DOMAIN,\n * `API_NULL_DOMAIN` - API_NULL_DOMAIN,\n * `API_OPERATOR_DOMAIN` - API_OPERATOR_DOMAIN,\n * `API_RESERVED_DOMAIN` - API_RESERVED_DOMAIN,\n * `LOCAL` - LOCAL,\n * `POSIX_GROUP` - POSIX_GROUP,\n * `POSIX_USER` - POSIX_USER,\n * `WORLD` - WORLD"
                                                            },
                                                            "auth_id": {
                                                                "type": "string"
                                                            },
                                                            "uid": {
                                                                "type": "number"
                                                            },
                                                            "gid": {
                                                                "type": "number"
                                                            },
                                                            "sid": {
                                                                "type": "string"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "rights": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "enum": [
                                                                "READ",
                                                                "WRITE",
                                                                "CHANGE_PERMISSIONS",
                                                                "ALL",
                                                                "READ_DATA",
                                                                "READ_EA",
                                                                "READ_ATTR",
                                                                "READ_ACL",
                                                                "WRITE_EA",
                                                                "WRITE_ATTR",
                                                                "WRITE_ACL",
                                                                "CHANGE_OWNER",
                                                                "WRITE_GROUP",
                                                                "DELETE",
                                                                "EXECUTE",
                                                                "MODIFY",
                                                                "EXTEND",
                                                                "ADD_FILE",
                                                                "ADD_SUBDIR",
                                                                "DELETE_CHILD",
                                                                "SYNCHRONIZE"
                                                            ],
                                                            "description": "Rights pertaining to the permissions entry:\n * `ADD_FILE` - File creation access,\n * `ADD_SUBDIR` - Directory creation access,\n * `ALL` - All access rights,\n * `CHANGE_OWNER` - Owner write access,\n * `CHANGE_PERMISSIONS` - Rights to change permissions on file objects,\n * `DELETE` - Delete access,\n * `DELETE_CHILD` - Delete from directory access,\n * `EXECUTE` - Execute access,\n * `EXTEND` - File extension access,\n * `MODIFY` - File modification access,\n * `READ` - Read access rights,\n * `READ_ACL` - ACL read access,\n * `READ_ATTR` - Attribute read access,\n * `READ_DATA` - File read access,\n * `READ_EA` - Extended attribute read access,\n * `SYNCHRONIZE` - File synchronize access,\n * `WRITE` - Write access rights,\n * `WRITE_ACL` - ACL write access,\n * `WRITE_ATTR` - Attribute write access,\n * `WRITE_EA` - Extended attribute write access,\n * `WRITE_GROUP` - Group write access"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "network_permissions": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "enum": [
                                                            "ALLOWED",
                                                            "DENIED"
                                                        ],
                                                        "description": "Type of permissions entry (ALLOWED or DENIED):\n * `ALLOWED` - The permissions entry rights are allowed to the trustee,\n * `DENIED` - The permissions entry rights are denied to the trustee"
                                                    },
                                                    "address_ranges": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "rights": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "enum": [
                                                                "READ",
                                                                "WRITE",
                                                                "CHANGE_PERMISSIONS",
                                                                "ALL",
                                                                "READ_DATA",
                                                                "READ_EA",
                                                                "READ_ATTR",
                                                                "READ_ACL",
                                                                "WRITE_EA",
                                                                "WRITE_ATTR",
                                                                "WRITE_ACL",
                                                                "CHANGE_OWNER",
                                                                "WRITE_GROUP",
                                                                "DELETE",
                                                                "EXECUTE",
                                                                "MODIFY",
                                                                "EXTEND",
                                                                "ADD_FILE",
                                                                "ADD_SUBDIR",
                                                                "DELETE_CHILD",
                                                                "SYNCHRONIZE"
                                                            ],
                                                            "description": "Rights pertaining to the permissions entry:\n * `ADD_FILE` - File creation access,\n * `ADD_SUBDIR` - Directory creation access,\n * `ALL` - All access rights,\n * `CHANGE_OWNER` - Owner write access,\n * `CHANGE_PERMISSIONS` - Rights to change permissions on file objects,\n * `DELETE` - Delete access,\n * `DELETE_CHILD` - Delete from directory access,\n * `EXECUTE` - Execute access,\n * `EXTEND` - File extension access,\n * `MODIFY` - File modification access,\n * `READ` - Read access rights,\n * `READ_ACL` - ACL read access,\n * `READ_ATTR` - Attribute read access,\n * `READ_DATA` - File read access,\n * `READ_EA` - Extended attribute read access,\n * `SYNCHRONIZE` - File synchronize access,\n * `WRITE` - Write access rights,\n * `WRITE_ACL` - ACL write access,\n * `WRITE_ATTR` - Attribute write access,\n * `WRITE_EA` - Extended attribute write access,\n * `WRITE_GROUP` - Group write access"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "access_based_enumeration_enabled": {
                                            "type": "boolean"
                                        },
                                        "default_file_create_mode": {
                                            "type": "string"
                                        },
                                        "default_directory_create_mode": {
                                            "type": "string"
                                        },
                                        "bytes_per_sector": {
                                            "type": "string"
                                        },
                                        "require_encryption": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "smb"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string"
                                    },
                                    "share_name": {
                                        "type": "string"
                                    },
                                    "fs_path": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "permissions": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "ALLOWED",
                                                        "DENIED"
                                                    ],
                                                    "description": "Type of permissions entry (ALLOWED or DENIED):\n * `ALLOWED` - The permissions entry rights are allowed to the trustee,\n * `DENIED` - The permissions entry rights are denied to the trustee"
                                                },
                                                "trustee": {
                                                    "type": "object",
                                                    "properties": {
                                                        "domain": {
                                                            "type": "string",
                                                            "enum": [
                                                                "LOCAL",
                                                                "API_NULL_DOMAIN",
                                                                "WORLD",
                                                                "POSIX_USER",
                                                                "POSIX_GROUP",
                                                                "ACTIVE_DIRECTORY",
                                                                "API_INVALID_DOMAIN",
                                                                "API_RESERVED_DOMAIN",
                                                                "API_INTERNAL_DOMAIN",
                                                                "API_OPERATOR_DOMAIN",
                                                                "API_CREATOR_DOMAIN"
                                                            ],
                                                            "description": "domain:\n * `ACTIVE_DIRECTORY` - ACTIVE_DIRECTORY,\n * `API_CREATOR_DOMAIN` - API_CREATOR_DOMAIN,\n * `API_INTERNAL_DOMAIN` - API_INTERNAL_DOMAIN,\n * `API_INVALID_DOMAIN` - API_INVALID_DOMAIN,\n * `API_NULL_DOMAIN` - API_NULL_DOMAIN,\n * `API_OPERATOR_DOMAIN` - API_OPERATOR_DOMAIN,\n * `API_RESERVED_DOMAIN` - API_RESERVED_DOMAIN,\n * `LOCAL` - LOCAL,\n * `POSIX_GROUP` - POSIX_GROUP,\n * `POSIX_USER` - POSIX_USER,\n * `WORLD` - WORLD"
                                                        },
                                                        "auth_id": {
                                                            "type": "string"
                                                        },
                                                        "uid": {
                                                            "type": "number"
                                                        },
                                                        "gid": {
                                                            "type": "number"
                                                        },
                                                        "sid": {
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        }
                                                    }
                                                },
                                                "rights": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "enum": [
                                                            "READ",
                                                            "WRITE",
                                                            "CHANGE_PERMISSIONS",
                                                            "ALL",
                                                            "READ_DATA",
                                                            "READ_EA",
                                                            "READ_ATTR",
                                                            "READ_ACL",
                                                            "WRITE_EA",
                                                            "WRITE_ATTR",
                                                            "WRITE_ACL",
                                                            "CHANGE_OWNER",
                                                            "WRITE_GROUP",
                                                            "DELETE",
                                                            "EXECUTE",
                                                            "MODIFY",
                                                            "EXTEND",
                                                            "ADD_FILE",
                                                            "ADD_SUBDIR",
                                                            "DELETE_CHILD",
                                                            "SYNCHRONIZE"
                                                        ],
                                                        "description": "Rights pertaining to the permissions entry:\n * `ADD_FILE` - File creation access,\n * `ADD_SUBDIR` - Directory creation access,\n * `ALL` - All access rights,\n * `CHANGE_OWNER` - Owner write access,\n * `CHANGE_PERMISSIONS` - Rights to change permissions on file objects,\n * `DELETE` - Delete access,\n * `DELETE_CHILD` - Delete from directory access,\n * `EXECUTE` - Execute access,\n * `EXTEND` - File extension access,\n * `MODIFY` - File modification access,\n * `READ` - Read access rights,\n * `READ_ACL` - ACL read access,\n * `READ_ATTR` - Attribute read access,\n * `READ_DATA` - File read access,\n * `READ_EA` - Extended attribute read access,\n * `SYNCHRONIZE` - File synchronize access,\n * `WRITE` - Write access rights,\n * `WRITE_ACL` - ACL write access,\n * `WRITE_ATTR` - Attribute write access,\n * `WRITE_EA` - Extended attribute write access,\n * `WRITE_GROUP` - Group write access"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "network_permissions": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "ALLOWED",
                                                        "DENIED"
                                                    ],
                                                    "description": "Type of permissions entry (ALLOWED or DENIED):\n * `ALLOWED` - The permissions entry rights are allowed to the trustee,\n * `DENIED` - The permissions entry rights are denied to the trustee"
                                                },
                                                "address_ranges": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "rights": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "enum": [
                                                            "READ",
                                                            "WRITE",
                                                            "CHANGE_PERMISSIONS",
                                                            "ALL",
                                                            "READ_DATA",
                                                            "READ_EA",
                                                            "READ_ATTR",
                                                            "READ_ACL",
                                                            "WRITE_EA",
                                                            "WRITE_ATTR",
                                                            "WRITE_ACL",
                                                            "CHANGE_OWNER",
                                                            "WRITE_GROUP",
                                                            "DELETE",
                                                            "EXECUTE",
                                                            "MODIFY",
                                                            "EXTEND",
                                                            "ADD_FILE",
                                                            "ADD_SUBDIR",
                                                            "DELETE_CHILD",
                                                            "SYNCHRONIZE"
                                                        ],
                                                        "description": "Rights pertaining to the permissions entry:\n * `ADD_FILE` - File creation access,\n * `ADD_SUBDIR` - Directory creation access,\n * `ALL` - All access rights,\n * `CHANGE_OWNER` - Owner write access,\n * `CHANGE_PERMISSIONS` - Rights to change permissions on file objects,\n * `DELETE` - Delete access,\n * `DELETE_CHILD` - Delete from directory access,\n * `EXECUTE` - Execute access,\n * `EXTEND` - File extension access,\n * `MODIFY` - File modification access,\n * `READ` - Read access rights,\n * `READ_ACL` - ACL read access,\n * `READ_ATTR` - Attribute read access,\n * `READ_DATA` - File read access,\n * `READ_EA` - Extended attribute read access,\n * `SYNCHRONIZE` - File synchronize access,\n * `WRITE` - Write access rights,\n * `WRITE_ACL` - ACL write access,\n * `WRITE_ATTR` - Attribute write access,\n * `WRITE_EA` - Extended attribute write access,\n * `WRITE_GROUP` - Group write access"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "access_based_enumeration_enabled": {
                                        "type": "boolean"
                                    },
                                    "default_file_create_mode": {
                                        "type": "string"
                                    },
                                    "default_directory_create_mode": {
                                        "type": "string"
                                    },
                                    "bytes_per_sector": {
                                        "type": "string"
                                    },
                                    "require_encryption": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete an SMB share. Not undoable.",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "A unique identifier of the SMB share, either share ID or name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success"
                    }
                },
                "tags": [
                    "smb"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/shutdown/reboot/start": {
            "post": {
                "summary": "Start a reboot cycle with the Reboot Manager system.",
                "parameters": [],
                "responses": {
                    "202": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "monitor_uri": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "shutdown"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "is_rolling": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/shutdown/reboot/pause": {
            "post": {
                "summary": "Pause an in progress reboot cycle.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success"
                    }
                },
                "tags": [
                    "shutdown"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/shutdown/reboot/resume": {
            "post": {
                "summary": "Resume a paused reboot cycle.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success"
                    }
                },
                "tags": [
                    "shutdown"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/shutdown/reboot/status": {
            "get": {
                "summary": "Retrieve the current status of the reboot manager.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "state": {
                                            "type": "string",
                                            "enum": [
                                                "REBOOT_IDLE",
                                                "REBOOT_IN_PROGRESS",
                                                "REBOOT_PAUSED",
                                                "REBOOT_PAUSED_DUE_TO_ERROR"
                                            ],
                                            "description": "state:\n * `REBOOT_IDLE` - REBOOT_IDLE,\n * `REBOOT_IN_PROGRESS` - REBOOT_IN_PROGRESS,\n * `REBOOT_PAUSED` - REBOOT_PAUSED,\n * `REBOOT_PAUSED_DUE_TO_ERROR` - REBOOT_PAUSED_DUE_TO_ERROR"
                                        },
                                        "rolling": {
                                            "type": "boolean"
                                        },
                                        "upgrade_initiated": {
                                            "type": "boolean"
                                        },
                                        "total_node_count": {
                                            "type": "number"
                                        },
                                        "rebooted_node_count": {
                                            "type": "number"
                                        },
                                        "error_message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "shutdown"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/shutdown/halt": {
            "post": {
                "summary": "Shut down every node in the cluster and power off.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success"
                    }
                },
                "tags": [
                    "shutdown"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/snapshots/": {
            "post": {
                "summary": "Creates a new snapshot and returns its details.",
                "parameters": [
                    {
                        "name": "expiration-time-to-live",
                        "in": "query",
                        "description": "Duration after which to expire the snapshot, in format <quantity><units>, where <quantity> is a positive integer less than 1000 and <units> is one of [months, weeks, days, hours, minutes], e.g. 5days or 1hours. Empty string or never indicates the snapshot should never expire. Defaults to never if not specified.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "number"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "directory_name": {
                                            "type": "string"
                                        },
                                        "source_path": {
                                            "type": "string"
                                        },
                                        "created_by_policy": {
                                            "type": "boolean"
                                        },
                                        "expiration": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "snapshots"
                ],
                "deprecated": true,
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "expiration": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Returns information about all snapshots.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "entries": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "number"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "timestamp": {
                                                        "type": "string"
                                                    },
                                                    "directory_name": {
                                                        "type": "string"
                                                    },
                                                    "source_path": {
                                                        "type": "string"
                                                    },
                                                    "created_by_policy": {
                                                        "type": "boolean"
                                                    },
                                                    "expiration": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "snapshots"
                ],
                "deprecated": true,
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/snapshots/policies/": {
            "post": {
                "summary": "Creates a new snapshot policy and returns its details.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "number"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "source_file_ids": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "schedules": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "number"
                                                    },
                                                    "creation_schedule": {
                                                        "type": "object",
                                                        "properties": {
                                                            "timezone": {
                                                                "type": "string"
                                                            },
                                                            "frequency": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "SCHEDULE_MONTHLY",
                                                                    "SCHEDULE_DAILY_OR_WEEKLY",
                                                                    "SCHEDULE_HOURLY_OR_LESS"
                                                                ],
                                                                "description": "Coarse frequency (MONTHLY, DAILY_OR_WEEKLY, or HOURLY_OR_LESS) at which to take snapshot:\n * `SCHEDULE_DAILY_OR_WEEKLY` - SCHEDULE_DAILY_OR_WEEKLY,\n * `SCHEDULE_HOURLY_OR_LESS` - SCHEDULE_HOURLY_OR_LESS,\n * `SCHEDULE_MONTHLY` - SCHEDULE_MONTHLY"
                                                            },
                                                            "hour": {
                                                                "type": "number"
                                                            },
                                                            "minute": {
                                                                "type": "number"
                                                            },
                                                            "on_days": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "SUN",
                                                                        "MON",
                                                                        "TUE",
                                                                        "WED",
                                                                        "THU",
                                                                        "FRI",
                                                                        "SAT",
                                                                        "EVERY_DAY"
                                                                    ],
                                                                    "description": "For DAILY_OR_WEEKLY or HOURLY_OR_LESS frequency: list of days of the week on which to take snapshots. Choose from SUN, MON, TUE, WED, THU, FRI, and/or SAT. EVERY_DAY can be used to specify all days. For MONTHLY frequency: LAST_DAY_OF_MONTH indicates that the snapshot should be taken only on the last day of the month.:\n * `EVERY_DAY` - EVERY_DAY,\n * `FRI` - FRI,\n * `MON` - MON,\n * `SAT` - SAT,\n * `SUN` - SUN,\n * `THU` - THU,\n * `TUE` - TUE,\n * `WED` - WED"
                                                                }
                                                            },
                                                            "day_of_month": {
                                                                "type": "number"
                                                            },
                                                            "window_start_hour": {
                                                                "type": "number"
                                                            },
                                                            "window_start_minute": {
                                                                "type": "number"
                                                            },
                                                            "window_end_hour": {
                                                                "type": "number"
                                                            },
                                                            "window_end_minute": {
                                                                "type": "number"
                                                            },
                                                            "fire_every_interval": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "FIRE_IN_MINUTES",
                                                                    "FIRE_IN_HOURS"
                                                                ],
                                                                "description": "For HOURLY_OR_LESS frequency: units for interval (MINUTES or HOURS) at which to take snapshot during specified window:\n * `FIRE_IN_HOURS` - FIRE_IN_HOURS,\n * `FIRE_IN_MINUTES` - FIRE_IN_MINUTES"
                                                            },
                                                            "fire_every": {
                                                                "type": "number"
                                                            }
                                                        }
                                                    },
                                                    "expiration_time_to_live": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "enabled": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "snapshots"
                ],
                "deprecated": true,
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "number"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "source_file_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "schedules": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "number"
                                                },
                                                "creation_schedule": {
                                                    "type": "object",
                                                    "properties": {
                                                        "timezone": {
                                                            "type": "string"
                                                        },
                                                        "frequency": {
                                                            "type": "string",
                                                            "enum": [
                                                                "SCHEDULE_MONTHLY",
                                                                "SCHEDULE_DAILY_OR_WEEKLY",
                                                                "SCHEDULE_HOURLY_OR_LESS"
                                                            ],
                                                            "description": "Coarse frequency (MONTHLY, DAILY_OR_WEEKLY, or HOURLY_OR_LESS) at which to take snapshot:\n * `SCHEDULE_DAILY_OR_WEEKLY` - SCHEDULE_DAILY_OR_WEEKLY,\n * `SCHEDULE_HOURLY_OR_LESS` - SCHEDULE_HOURLY_OR_LESS,\n * `SCHEDULE_MONTHLY` - SCHEDULE_MONTHLY"
                                                        },
                                                        "hour": {
                                                            "type": "number"
                                                        },
                                                        "minute": {
                                                            "type": "number"
                                                        },
                                                        "on_days": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "SUN",
                                                                    "MON",
                                                                    "TUE",
                                                                    "WED",
                                                                    "THU",
                                                                    "FRI",
                                                                    "SAT",
                                                                    "EVERY_DAY"
                                                                ],
                                                                "description": "For DAILY_OR_WEEKLY or HOURLY_OR_LESS frequency: list of days of the week on which to take snapshots. Choose from SUN, MON, TUE, WED, THU, FRI, and/or SAT. EVERY_DAY can be used to specify all days. For MONTHLY frequency: LAST_DAY_OF_MONTH indicates that the snapshot should be taken only on the last day of the month.:\n * `EVERY_DAY` - EVERY_DAY,\n * `FRI` - FRI,\n * `MON` - MON,\n * `SAT` - SAT,\n * `SUN` - SUN,\n * `THU` - THU,\n * `TUE` - TUE,\n * `WED` - WED"
                                                            }
                                                        },
                                                        "day_of_month": {
                                                            "type": "number"
                                                        },
                                                        "window_start_hour": {
                                                            "type": "number"
                                                        },
                                                        "window_start_minute": {
                                                            "type": "number"
                                                        },
                                                        "window_end_hour": {
                                                            "type": "number"
                                                        },
                                                        "window_end_minute": {
                                                            "type": "number"
                                                        },
                                                        "fire_every_interval": {
                                                            "type": "string",
                                                            "enum": [
                                                                "FIRE_IN_MINUTES",
                                                                "FIRE_IN_HOURS"
                                                            ],
                                                            "description": "For HOURLY_OR_LESS frequency: units for interval (MINUTES or HOURS) at which to take snapshot during specified window:\n * `FIRE_IN_HOURS` - FIRE_IN_HOURS,\n * `FIRE_IN_MINUTES` - FIRE_IN_MINUTES"
                                                        },
                                                        "fire_every": {
                                                            "type": "number"
                                                        }
                                                    }
                                                },
                                                "expiration_time_to_live": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "enabled": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Returns information about all snapshot policies.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "entries": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "number"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "source_file_ids": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "schedules": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "id": {
                                                                    "type": "number"
                                                                },
                                                                "creation_schedule": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "timezone": {
                                                                            "type": "string"
                                                                        },
                                                                        "frequency": {
                                                                            "type": "string",
                                                                            "enum": [
                                                                                "SCHEDULE_MONTHLY",
                                                                                "SCHEDULE_DAILY_OR_WEEKLY",
                                                                                "SCHEDULE_HOURLY_OR_LESS"
                                                                            ],
                                                                            "description": "Coarse frequency (MONTHLY, DAILY_OR_WEEKLY, or HOURLY_OR_LESS) at which to take snapshot:\n * `SCHEDULE_DAILY_OR_WEEKLY` - SCHEDULE_DAILY_OR_WEEKLY,\n * `SCHEDULE_HOURLY_OR_LESS` - SCHEDULE_HOURLY_OR_LESS,\n * `SCHEDULE_MONTHLY` - SCHEDULE_MONTHLY"
                                                                        },
                                                                        "hour": {
                                                                            "type": "number"
                                                                        },
                                                                        "minute": {
                                                                            "type": "number"
                                                                        },
                                                                        "on_days": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "type": "string",
                                                                                "enum": [
                                                                                    "SUN",
                                                                                    "MON",
                                                                                    "TUE",
                                                                                    "WED",
                                                                                    "THU",
                                                                                    "FRI",
                                                                                    "SAT",
                                                                                    "EVERY_DAY"
                                                                                ],
                                                                                "description": "For DAILY_OR_WEEKLY or HOURLY_OR_LESS frequency: list of days of the week on which to take snapshots. Choose from SUN, MON, TUE, WED, THU, FRI, and/or SAT. EVERY_DAY can be used to specify all days. For MONTHLY frequency: LAST_DAY_OF_MONTH indicates that the snapshot should be taken only on the last day of the month.:\n * `EVERY_DAY` - EVERY_DAY,\n * `FRI` - FRI,\n * `MON` - MON,\n * `SAT` - SAT,\n * `SUN` - SUN,\n * `THU` - THU,\n * `TUE` - TUE,\n * `WED` - WED"
                                                                            }
                                                                        },
                                                                        "day_of_month": {
                                                                            "type": "number"
                                                                        },
                                                                        "window_start_hour": {
                                                                            "type": "number"
                                                                        },
                                                                        "window_start_minute": {
                                                                            "type": "number"
                                                                        },
                                                                        "window_end_hour": {
                                                                            "type": "number"
                                                                        },
                                                                        "window_end_minute": {
                                                                            "type": "number"
                                                                        },
                                                                        "fire_every_interval": {
                                                                            "type": "string",
                                                                            "enum": [
                                                                                "FIRE_IN_MINUTES",
                                                                                "FIRE_IN_HOURS"
                                                                            ],
                                                                            "description": "For HOURLY_OR_LESS frequency: units for interval (MINUTES or HOURS) at which to take snapshot during specified window:\n * `FIRE_IN_HOURS` - FIRE_IN_HOURS,\n * `FIRE_IN_MINUTES` - FIRE_IN_MINUTES"
                                                                        },
                                                                        "fire_every": {
                                                                            "type": "number"
                                                                        }
                                                                    }
                                                                },
                                                                "expiration_time_to_live": {
                                                                    "type": "string"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "enabled": {
                                                        "type": "boolean"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "snapshots"
                ],
                "deprecated": true,
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/snapshots/policies/status/": {
            "get": {
                "summary": "Returns status information about all snapshot policies.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "entries": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "number"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "schedules": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "id": {
                                                                    "type": "number"
                                                                },
                                                                "creation_schedule": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "timezone": {
                                                                            "type": "string"
                                                                        },
                                                                        "frequency": {
                                                                            "type": "string",
                                                                            "enum": [
                                                                                "SCHEDULE_MONTHLY",
                                                                                "SCHEDULE_DAILY_OR_WEEKLY",
                                                                                "SCHEDULE_HOURLY_OR_LESS"
                                                                            ],
                                                                            "description": "Coarse frequency (MONTHLY, DAILY_OR_WEEKLY, or HOURLY_OR_LESS) at which to take snapshot:\n * `SCHEDULE_DAILY_OR_WEEKLY` - SCHEDULE_DAILY_OR_WEEKLY,\n * `SCHEDULE_HOURLY_OR_LESS` - SCHEDULE_HOURLY_OR_LESS,\n * `SCHEDULE_MONTHLY` - SCHEDULE_MONTHLY"
                                                                        },
                                                                        "hour": {
                                                                            "type": "number"
                                                                        },
                                                                        "minute": {
                                                                            "type": "number"
                                                                        },
                                                                        "on_days": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "type": "string",
                                                                                "enum": [
                                                                                    "SUN",
                                                                                    "MON",
                                                                                    "TUE",
                                                                                    "WED",
                                                                                    "THU",
                                                                                    "FRI",
                                                                                    "SAT",
                                                                                    "EVERY_DAY"
                                                                                ],
                                                                                "description": "For DAILY_OR_WEEKLY or HOURLY_OR_LESS frequency: list of days of the week on which to take snapshots. Choose from SUN, MON, TUE, WED, THU, FRI, and/or SAT. EVERY_DAY can be used to specify all days. For MONTHLY frequency: LAST_DAY_OF_MONTH indicates that the snapshot should be taken only on the last day of the month.:\n * `EVERY_DAY` - EVERY_DAY,\n * `FRI` - FRI,\n * `MON` - MON,\n * `SAT` - SAT,\n * `SUN` - SUN,\n * `THU` - THU,\n * `TUE` - TUE,\n * `WED` - WED"
                                                                            }
                                                                        },
                                                                        "day_of_month": {
                                                                            "type": "number"
                                                                        },
                                                                        "window_start_hour": {
                                                                            "type": "number"
                                                                        },
                                                                        "window_start_minute": {
                                                                            "type": "number"
                                                                        },
                                                                        "window_end_hour": {
                                                                            "type": "number"
                                                                        },
                                                                        "window_end_minute": {
                                                                            "type": "number"
                                                                        },
                                                                        "fire_every_interval": {
                                                                            "type": "string",
                                                                            "enum": [
                                                                                "FIRE_IN_MINUTES",
                                                                                "FIRE_IN_HOURS"
                                                                            ],
                                                                            "description": "For HOURLY_OR_LESS frequency: units for interval (MINUTES or HOURS) at which to take snapshot during specified window:\n * `FIRE_IN_HOURS` - FIRE_IN_HOURS,\n * `FIRE_IN_MINUTES` - FIRE_IN_MINUTES"
                                                                        },
                                                                        "fire_every": {
                                                                            "type": "number"
                                                                        }
                                                                    }
                                                                },
                                                                "expiration_time_to_live": {
                                                                    "type": "string"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "enabled": {
                                                        "type": "boolean"
                                                    },
                                                    "source_files": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "source_file_id": {
                                                                    "type": "string"
                                                                },
                                                                "source_file_path": {
                                                                    "type": "string"
                                                                },
                                                                "deleted": {
                                                                    "type": "boolean"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "owners": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "id": {
                                                                    "type": "string"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "snapshots"
                ],
                "deprecated": true,
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/snapshots/total-used-capacity": {
            "get": {
                "summary": "Returns approximate amount of space that would be reclaimed if all snapshots were deleted.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "bytes": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "snapshots"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/snapshots/calculate-used-capacity": {
            "post": {
                "summary": "Returns approximate amount of space that would be reclaimed if all specified snapshots were deleted.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "bytes": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "snapshots"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/snapshots/capacity-used-per-snapshot/": {
            "get": {
                "summary": "Returns the approximate amount of space for each snapshot that would be reclaimed if that snapshot were deleted.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "entries": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "number"
                                                    },
                                                    "capacity_used_bytes": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "snapshots"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/snapshots/capacity-used-per-snapshot/{id}": {
            "get": {
                "summary": "Returns the approximate amount of space that would be reclaimed if the given snapshot were deleted.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Snapshot identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "number"
                                        },
                                        "capacity_used_bytes": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "snapshots"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/snapshots/policies/status/{id}": {
            "get": {
                "summary": "Returns status information about a specific snapshot policy.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Policy identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "number"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "schedules": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "number"
                                                    },
                                                    "creation_schedule": {
                                                        "type": "object",
                                                        "properties": {
                                                            "timezone": {
                                                                "type": "string"
                                                            },
                                                            "frequency": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "SCHEDULE_MONTHLY",
                                                                    "SCHEDULE_DAILY_OR_WEEKLY",
                                                                    "SCHEDULE_HOURLY_OR_LESS"
                                                                ],
                                                                "description": "Coarse frequency (MONTHLY, DAILY_OR_WEEKLY, or HOURLY_OR_LESS) at which to take snapshot:\n * `SCHEDULE_DAILY_OR_WEEKLY` - SCHEDULE_DAILY_OR_WEEKLY,\n * `SCHEDULE_HOURLY_OR_LESS` - SCHEDULE_HOURLY_OR_LESS,\n * `SCHEDULE_MONTHLY` - SCHEDULE_MONTHLY"
                                                            },
                                                            "hour": {
                                                                "type": "number"
                                                            },
                                                            "minute": {
                                                                "type": "number"
                                                            },
                                                            "on_days": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "SUN",
                                                                        "MON",
                                                                        "TUE",
                                                                        "WED",
                                                                        "THU",
                                                                        "FRI",
                                                                        "SAT",
                                                                        "EVERY_DAY"
                                                                    ],
                                                                    "description": "For DAILY_OR_WEEKLY or HOURLY_OR_LESS frequency: list of days of the week on which to take snapshots. Choose from SUN, MON, TUE, WED, THU, FRI, and/or SAT. EVERY_DAY can be used to specify all days. For MONTHLY frequency: LAST_DAY_OF_MONTH indicates that the snapshot should be taken only on the last day of the month.:\n * `EVERY_DAY` - EVERY_DAY,\n * `FRI` - FRI,\n * `MON` - MON,\n * `SAT` - SAT,\n * `SUN` - SUN,\n * `THU` - THU,\n * `TUE` - TUE,\n * `WED` - WED"
                                                                }
                                                            },
                                                            "day_of_month": {
                                                                "type": "number"
                                                            },
                                                            "window_start_hour": {
                                                                "type": "number"
                                                            },
                                                            "window_start_minute": {
                                                                "type": "number"
                                                            },
                                                            "window_end_hour": {
                                                                "type": "number"
                                                            },
                                                            "window_end_minute": {
                                                                "type": "number"
                                                            },
                                                            "fire_every_interval": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "FIRE_IN_MINUTES",
                                                                    "FIRE_IN_HOURS"
                                                                ],
                                                                "description": "For HOURLY_OR_LESS frequency: units for interval (MINUTES or HOURS) at which to take snapshot during specified window:\n * `FIRE_IN_HOURS` - FIRE_IN_HOURS,\n * `FIRE_IN_MINUTES` - FIRE_IN_MINUTES"
                                                            },
                                                            "fire_every": {
                                                                "type": "number"
                                                            }
                                                        }
                                                    },
                                                    "expiration_time_to_live": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "enabled": {
                                            "type": "boolean"
                                        },
                                        "source_files": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "source_file_id": {
                                                        "type": "string"
                                                    },
                                                    "source_file_path": {
                                                        "type": "string"
                                                    },
                                                    "deleted": {
                                                        "type": "boolean"
                                                    }
                                                }
                                            }
                                        },
                                        "owners": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "snapshots"
                ],
                "deprecated": true,
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/snapshots/policies/{id}": {
            "get": {
                "summary": "Returns information about a specific snapshot policy.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Policy identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "number"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "source_file_ids": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "schedules": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "number"
                                                    },
                                                    "creation_schedule": {
                                                        "type": "object",
                                                        "properties": {
                                                            "timezone": {
                                                                "type": "string"
                                                            },
                                                            "frequency": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "SCHEDULE_MONTHLY",
                                                                    "SCHEDULE_DAILY_OR_WEEKLY",
                                                                    "SCHEDULE_HOURLY_OR_LESS"
                                                                ],
                                                                "description": "Coarse frequency (MONTHLY, DAILY_OR_WEEKLY, or HOURLY_OR_LESS) at which to take snapshot:\n * `SCHEDULE_DAILY_OR_WEEKLY` - SCHEDULE_DAILY_OR_WEEKLY,\n * `SCHEDULE_HOURLY_OR_LESS` - SCHEDULE_HOURLY_OR_LESS,\n * `SCHEDULE_MONTHLY` - SCHEDULE_MONTHLY"
                                                            },
                                                            "hour": {
                                                                "type": "number"
                                                            },
                                                            "minute": {
                                                                "type": "number"
                                                            },
                                                            "on_days": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "SUN",
                                                                        "MON",
                                                                        "TUE",
                                                                        "WED",
                                                                        "THU",
                                                                        "FRI",
                                                                        "SAT",
                                                                        "EVERY_DAY"
                                                                    ],
                                                                    "description": "For DAILY_OR_WEEKLY or HOURLY_OR_LESS frequency: list of days of the week on which to take snapshots. Choose from SUN, MON, TUE, WED, THU, FRI, and/or SAT. EVERY_DAY can be used to specify all days. For MONTHLY frequency: LAST_DAY_OF_MONTH indicates that the snapshot should be taken only on the last day of the month.:\n * `EVERY_DAY` - EVERY_DAY,\n * `FRI` - FRI,\n * `MON` - MON,\n * `SAT` - SAT,\n * `SUN` - SUN,\n * `THU` - THU,\n * `TUE` - TUE,\n * `WED` - WED"
                                                                }
                                                            },
                                                            "day_of_month": {
                                                                "type": "number"
                                                            },
                                                            "window_start_hour": {
                                                                "type": "number"
                                                            },
                                                            "window_start_minute": {
                                                                "type": "number"
                                                            },
                                                            "window_end_hour": {
                                                                "type": "number"
                                                            },
                                                            "window_end_minute": {
                                                                "type": "number"
                                                            },
                                                            "fire_every_interval": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "FIRE_IN_MINUTES",
                                                                    "FIRE_IN_HOURS"
                                                                ],
                                                                "description": "For HOURLY_OR_LESS frequency: units for interval (MINUTES or HOURS) at which to take snapshot during specified window:\n * `FIRE_IN_HOURS` - FIRE_IN_HOURS,\n * `FIRE_IN_MINUTES` - FIRE_IN_MINUTES"
                                                            },
                                                            "fire_every": {
                                                                "type": "number"
                                                            }
                                                        }
                                                    },
                                                    "expiration_time_to_live": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "enabled": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "snapshots"
                ],
                "deprecated": true,
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            },
            "put": {
                "summary": "Modifies a snapshot policy.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Policy identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "number"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "source_file_ids": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "schedules": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "number"
                                                    },
                                                    "creation_schedule": {
                                                        "type": "object",
                                                        "properties": {
                                                            "timezone": {
                                                                "type": "string"
                                                            },
                                                            "frequency": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "SCHEDULE_MONTHLY",
                                                                    "SCHEDULE_DAILY_OR_WEEKLY",
                                                                    "SCHEDULE_HOURLY_OR_LESS"
                                                                ],
                                                                "description": "Coarse frequency (MONTHLY, DAILY_OR_WEEKLY, or HOURLY_OR_LESS) at which to take snapshot:\n * `SCHEDULE_DAILY_OR_WEEKLY` - SCHEDULE_DAILY_OR_WEEKLY,\n * `SCHEDULE_HOURLY_OR_LESS` - SCHEDULE_HOURLY_OR_LESS,\n * `SCHEDULE_MONTHLY` - SCHEDULE_MONTHLY"
                                                            },
                                                            "hour": {
                                                                "type": "number"
                                                            },
                                                            "minute": {
                                                                "type": "number"
                                                            },
                                                            "on_days": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "SUN",
                                                                        "MON",
                                                                        "TUE",
                                                                        "WED",
                                                                        "THU",
                                                                        "FRI",
                                                                        "SAT",
                                                                        "EVERY_DAY"
                                                                    ],
                                                                    "description": "For DAILY_OR_WEEKLY or HOURLY_OR_LESS frequency: list of days of the week on which to take snapshots. Choose from SUN, MON, TUE, WED, THU, FRI, and/or SAT. EVERY_DAY can be used to specify all days. For MONTHLY frequency: LAST_DAY_OF_MONTH indicates that the snapshot should be taken only on the last day of the month.:\n * `EVERY_DAY` - EVERY_DAY,\n * `FRI` - FRI,\n * `MON` - MON,\n * `SAT` - SAT,\n * `SUN` - SUN,\n * `THU` - THU,\n * `TUE` - TUE,\n * `WED` - WED"
                                                                }
                                                            },
                                                            "day_of_month": {
                                                                "type": "number"
                                                            },
                                                            "window_start_hour": {
                                                                "type": "number"
                                                            },
                                                            "window_start_minute": {
                                                                "type": "number"
                                                            },
                                                            "window_end_hour": {
                                                                "type": "number"
                                                            },
                                                            "window_end_minute": {
                                                                "type": "number"
                                                            },
                                                            "fire_every_interval": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "FIRE_IN_MINUTES",
                                                                    "FIRE_IN_HOURS"
                                                                ],
                                                                "description": "For HOURLY_OR_LESS frequency: units for interval (MINUTES or HOURS) at which to take snapshot during specified window:\n * `FIRE_IN_HOURS` - FIRE_IN_HOURS,\n * `FIRE_IN_MINUTES` - FIRE_IN_MINUTES"
                                                            },
                                                            "fire_every": {
                                                                "type": "number"
                                                            }
                                                        }
                                                    },
                                                    "expiration_time_to_live": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "enabled": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "snapshots"
                ],
                "deprecated": true,
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "number"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "source_file_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "schedules": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "number"
                                                },
                                                "creation_schedule": {
                                                    "type": "object",
                                                    "properties": {
                                                        "timezone": {
                                                            "type": "string"
                                                        },
                                                        "frequency": {
                                                            "type": "string",
                                                            "enum": [
                                                                "SCHEDULE_MONTHLY",
                                                                "SCHEDULE_DAILY_OR_WEEKLY",
                                                                "SCHEDULE_HOURLY_OR_LESS"
                                                            ],
                                                            "description": "Coarse frequency (MONTHLY, DAILY_OR_WEEKLY, or HOURLY_OR_LESS) at which to take snapshot:\n * `SCHEDULE_DAILY_OR_WEEKLY` - SCHEDULE_DAILY_OR_WEEKLY,\n * `SCHEDULE_HOURLY_OR_LESS` - SCHEDULE_HOURLY_OR_LESS,\n * `SCHEDULE_MONTHLY` - SCHEDULE_MONTHLY"
                                                        },
                                                        "hour": {
                                                            "type": "number"
                                                        },
                                                        "minute": {
                                                            "type": "number"
                                                        },
                                                        "on_days": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "SUN",
                                                                    "MON",
                                                                    "TUE",
                                                                    "WED",
                                                                    "THU",
                                                                    "FRI",
                                                                    "SAT",
                                                                    "EVERY_DAY"
                                                                ],
                                                                "description": "For DAILY_OR_WEEKLY or HOURLY_OR_LESS frequency: list of days of the week on which to take snapshots. Choose from SUN, MON, TUE, WED, THU, FRI, and/or SAT. EVERY_DAY can be used to specify all days. For MONTHLY frequency: LAST_DAY_OF_MONTH indicates that the snapshot should be taken only on the last day of the month.:\n * `EVERY_DAY` - EVERY_DAY,\n * `FRI` - FRI,\n * `MON` - MON,\n * `SAT` - SAT,\n * `SUN` - SUN,\n * `THU` - THU,\n * `TUE` - TUE,\n * `WED` - WED"
                                                            }
                                                        },
                                                        "day_of_month": {
                                                            "type": "number"
                                                        },
                                                        "window_start_hour": {
                                                            "type": "number"
                                                        },
                                                        "window_start_minute": {
                                                            "type": "number"
                                                        },
                                                        "window_end_hour": {
                                                            "type": "number"
                                                        },
                                                        "window_end_minute": {
                                                            "type": "number"
                                                        },
                                                        "fire_every_interval": {
                                                            "type": "string",
                                                            "enum": [
                                                                "FIRE_IN_MINUTES",
                                                                "FIRE_IN_HOURS"
                                                            ],
                                                            "description": "For HOURLY_OR_LESS frequency: units for interval (MINUTES or HOURS) at which to take snapshot during specified window:\n * `FIRE_IN_HOURS` - FIRE_IN_HOURS,\n * `FIRE_IN_MINUTES` - FIRE_IN_MINUTES"
                                                        },
                                                        "fire_every": {
                                                            "type": "number"
                                                        }
                                                    }
                                                },
                                                "expiration_time_to_live": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "enabled": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Modifies a snapshot policy.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Policy identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "number"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "source_file_ids": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "schedules": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "number"
                                                    },
                                                    "creation_schedule": {
                                                        "type": "object",
                                                        "properties": {
                                                            "timezone": {
                                                                "type": "string"
                                                            },
                                                            "frequency": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "SCHEDULE_MONTHLY",
                                                                    "SCHEDULE_DAILY_OR_WEEKLY",
                                                                    "SCHEDULE_HOURLY_OR_LESS"
                                                                ],
                                                                "description": "Coarse frequency (MONTHLY, DAILY_OR_WEEKLY, or HOURLY_OR_LESS) at which to take snapshot:\n * `SCHEDULE_DAILY_OR_WEEKLY` - SCHEDULE_DAILY_OR_WEEKLY,\n * `SCHEDULE_HOURLY_OR_LESS` - SCHEDULE_HOURLY_OR_LESS,\n * `SCHEDULE_MONTHLY` - SCHEDULE_MONTHLY"
                                                            },
                                                            "hour": {
                                                                "type": "number"
                                                            },
                                                            "minute": {
                                                                "type": "number"
                                                            },
                                                            "on_days": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "SUN",
                                                                        "MON",
                                                                        "TUE",
                                                                        "WED",
                                                                        "THU",
                                                                        "FRI",
                                                                        "SAT",
                                                                        "EVERY_DAY"
                                                                    ],
                                                                    "description": "For DAILY_OR_WEEKLY or HOURLY_OR_LESS frequency: list of days of the week on which to take snapshots. Choose from SUN, MON, TUE, WED, THU, FRI, and/or SAT. EVERY_DAY can be used to specify all days. For MONTHLY frequency: LAST_DAY_OF_MONTH indicates that the snapshot should be taken only on the last day of the month.:\n * `EVERY_DAY` - EVERY_DAY,\n * `FRI` - FRI,\n * `MON` - MON,\n * `SAT` - SAT,\n * `SUN` - SUN,\n * `THU` - THU,\n * `TUE` - TUE,\n * `WED` - WED"
                                                                }
                                                            },
                                                            "day_of_month": {
                                                                "type": "number"
                                                            },
                                                            "window_start_hour": {
                                                                "type": "number"
                                                            },
                                                            "window_start_minute": {
                                                                "type": "number"
                                                            },
                                                            "window_end_hour": {
                                                                "type": "number"
                                                            },
                                                            "window_end_minute": {
                                                                "type": "number"
                                                            },
                                                            "fire_every_interval": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "FIRE_IN_MINUTES",
                                                                    "FIRE_IN_HOURS"
                                                                ],
                                                                "description": "For HOURLY_OR_LESS frequency: units for interval (MINUTES or HOURS) at which to take snapshot during specified window:\n * `FIRE_IN_HOURS` - FIRE_IN_HOURS,\n * `FIRE_IN_MINUTES` - FIRE_IN_MINUTES"
                                                            },
                                                            "fire_every": {
                                                                "type": "number"
                                                            }
                                                        }
                                                    },
                                                    "expiration_time_to_live": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "enabled": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "snapshots"
                ],
                "deprecated": true,
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "number"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "source_file_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "schedules": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "number"
                                                },
                                                "creation_schedule": {
                                                    "type": "object",
                                                    "properties": {
                                                        "timezone": {
                                                            "type": "string"
                                                        },
                                                        "frequency": {
                                                            "type": "string",
                                                            "enum": [
                                                                "SCHEDULE_MONTHLY",
                                                                "SCHEDULE_DAILY_OR_WEEKLY",
                                                                "SCHEDULE_HOURLY_OR_LESS"
                                                            ],
                                                            "description": "Coarse frequency (MONTHLY, DAILY_OR_WEEKLY, or HOURLY_OR_LESS) at which to take snapshot:\n * `SCHEDULE_DAILY_OR_WEEKLY` - SCHEDULE_DAILY_OR_WEEKLY,\n * `SCHEDULE_HOURLY_OR_LESS` - SCHEDULE_HOURLY_OR_LESS,\n * `SCHEDULE_MONTHLY` - SCHEDULE_MONTHLY"
                                                        },
                                                        "hour": {
                                                            "type": "number"
                                                        },
                                                        "minute": {
                                                            "type": "number"
                                                        },
                                                        "on_days": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "SUN",
                                                                    "MON",
                                                                    "TUE",
                                                                    "WED",
                                                                    "THU",
                                                                    "FRI",
                                                                    "SAT",
                                                                    "EVERY_DAY"
                                                                ],
                                                                "description": "For DAILY_OR_WEEKLY or HOURLY_OR_LESS frequency: list of days of the week on which to take snapshots. Choose from SUN, MON, TUE, WED, THU, FRI, and/or SAT. EVERY_DAY can be used to specify all days. For MONTHLY frequency: LAST_DAY_OF_MONTH indicates that the snapshot should be taken only on the last day of the month.:\n * `EVERY_DAY` - EVERY_DAY,\n * `FRI` - FRI,\n * `MON` - MON,\n * `SAT` - SAT,\n * `SUN` - SUN,\n * `THU` - THU,\n * `TUE` - TUE,\n * `WED` - WED"
                                                            }
                                                        },
                                                        "day_of_month": {
                                                            "type": "number"
                                                        },
                                                        "window_start_hour": {
                                                            "type": "number"
                                                        },
                                                        "window_start_minute": {
                                                            "type": "number"
                                                        },
                                                        "window_end_hour": {
                                                            "type": "number"
                                                        },
                                                        "window_end_minute": {
                                                            "type": "number"
                                                        },
                                                        "fire_every_interval": {
                                                            "type": "string",
                                                            "enum": [
                                                                "FIRE_IN_MINUTES",
                                                                "FIRE_IN_HOURS"
                                                            ],
                                                            "description": "For HOURLY_OR_LESS frequency: units for interval (MINUTES or HOURS) at which to take snapshot during specified window:\n * `FIRE_IN_HOURS` - FIRE_IN_HOURS,\n * `FIRE_IN_MINUTES` - FIRE_IN_MINUTES"
                                                        },
                                                        "fire_every": {
                                                            "type": "number"
                                                        }
                                                    }
                                                },
                                                "expiration_time_to_live": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "enabled": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Deletes a snapshot policy.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Policy identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success"
                    }
                },
                "tags": [
                    "snapshots"
                ],
                "deprecated": true,
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/snapshots/{id}": {
            "get": {
                "summary": "Returns information about a specific snapshot.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Snapshot identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "number"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "directory_name": {
                                            "type": "string"
                                        },
                                        "source_path": {
                                            "type": "string"
                                        },
                                        "created_by_policy": {
                                            "type": "boolean"
                                        },
                                        "expiration": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "snapshots"
                ],
                "deprecated": true,
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            },
            "put": {
                "summary": "Modifies a snapshot.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Snapshot identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "number"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "directory_name": {
                                            "type": "string"
                                        },
                                        "source_path": {
                                            "type": "string"
                                        },
                                        "created_by_policy": {
                                            "type": "boolean"
                                        },
                                        "expiration": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "snapshots"
                ],
                "deprecated": true,
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "number"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "timestamp": {
                                        "type": "string"
                                    },
                                    "directory_name": {
                                        "type": "string"
                                    },
                                    "source_path": {
                                        "type": "string"
                                    },
                                    "created_by_policy": {
                                        "type": "boolean"
                                    },
                                    "expiration": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Modifies a snapshot.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Snapshot identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "expiration-time-to-live",
                        "in": "query",
                        "description": "Duration after which to expire the snapshot, in format <quantity><units>, where <quantity> is a positive integer less than 1000 and <units> is one of [months, weeks, days, hours, minutes], e.g. 5days or 1hours. Empty string or never indicates the snapshot should never expire. Defaults to never if not specified.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "number"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "directory_name": {
                                            "type": "string"
                                        },
                                        "source_path": {
                                            "type": "string"
                                        },
                                        "created_by_policy": {
                                            "type": "boolean"
                                        },
                                        "expiration": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "snapshots"
                ],
                "deprecated": true,
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "number"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "timestamp": {
                                        "type": "string"
                                    },
                                    "directory_name": {
                                        "type": "string"
                                    },
                                    "source_path": {
                                        "type": "string"
                                    },
                                    "created_by_policy": {
                                        "type": "boolean"
                                    },
                                    "expiration": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Deletes a snapshot.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Snapshot identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success"
                    }
                },
                "tags": [
                    "snapshots"
                ],
                "deprecated": true,
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v2/snapshots/": {
            "post": {
                "summary": "Creates a new snapshot and returns its details.",
                "parameters": [
                    {
                        "name": "expiration-time-to-live",
                        "in": "query",
                        "description": "Duration after which to expire the snapshot, in format <quantity><units>, where <quantity> is a positive integer less than 1000 and <units> is one of [months, weeks, days, hours, minutes], e.g. 5days or 1hours. Empty string or never indicates the snapshot should never expire. Defaults to never if not specified.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "number"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "directory_name": {
                                            "type": "string"
                                        },
                                        "source_file_id": {
                                            "type": "string"
                                        },
                                        "created_by_policy": {
                                            "type": "boolean"
                                        },
                                        "expiration": {
                                            "type": "string"
                                        },
                                        "in_delete": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "snapshots"
                ],
                "deprecated": true,
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "expiration": {
                                        "type": "string"
                                    },
                                    "source_file_id": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Returns information about all snapshots.",
                "parameters": [
                    {
                        "name": "include-in-delete",
                        "in": "query",
                        "description": "Specifies whether or not to include snapshots that are currently being deleted. Defaults to false if not specified.",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "entries": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "number"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "timestamp": {
                                                        "type": "string"
                                                    },
                                                    "directory_name": {
                                                        "type": "string"
                                                    },
                                                    "source_file_id": {
                                                        "type": "string"
                                                    },
                                                    "created_by_policy": {
                                                        "type": "boolean"
                                                    },
                                                    "expiration": {
                                                        "type": "string"
                                                    },
                                                    "in_delete": {
                                                        "type": "boolean"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "snapshots"
                ],
                "deprecated": true,
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v2/snapshots/status/": {
            "get": {
                "summary": "Returns the status on all snapshots.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "entries": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "number"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "timestamp": {
                                                        "type": "string"
                                                    },
                                                    "directory_name": {
                                                        "type": "string"
                                                    },
                                                    "source_file_id": {
                                                        "type": "string"
                                                    },
                                                    "source_file_path": {
                                                        "type": "string"
                                                    },
                                                    "created_by_policy": {
                                                        "type": "boolean"
                                                    },
                                                    "expiration": {
                                                        "type": "string"
                                                    },
                                                    "owners": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "id": {
                                                                    "type": "string"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "snapshots"
                ],
                "deprecated": true,
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v2/snapshots/policies/": {
            "get": {
                "summary": "Returns information about all snapshot policies.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "entries": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "number"
                                                    },
                                                    "policy_name": {
                                                        "type": "string"
                                                    },
                                                    "snapshot_name_template": {
                                                        "type": "string"
                                                    },
                                                    "source_file_id": {
                                                        "type": "string"
                                                    },
                                                    "schedule": {
                                                        "type": "object",
                                                        "properties": {
                                                            "id": {
                                                                "type": "number"
                                                            },
                                                            "creation_schedule": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "timezone": {
                                                                        "type": "string"
                                                                    },
                                                                    "frequency": {
                                                                        "type": "string",
                                                                        "enum": [
                                                                            "SCHEDULE_MONTHLY",
                                                                            "SCHEDULE_DAILY_OR_WEEKLY",
                                                                            "SCHEDULE_HOURLY_OR_LESS"
                                                                        ],
                                                                        "description": "Coarse frequency (MONTHLY, DAILY_OR_WEEKLY, or HOURLY_OR_LESS) at which to take snapshot:\n * `SCHEDULE_DAILY_OR_WEEKLY` - SCHEDULE_DAILY_OR_WEEKLY,\n * `SCHEDULE_HOURLY_OR_LESS` - SCHEDULE_HOURLY_OR_LESS,\n * `SCHEDULE_MONTHLY` - SCHEDULE_MONTHLY"
                                                                    },
                                                                    "hour": {
                                                                        "type": "number"
                                                                    },
                                                                    "minute": {
                                                                        "type": "number"
                                                                    },
                                                                    "on_days": {
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "string",
                                                                            "enum": [
                                                                                "SUN",
                                                                                "MON",
                                                                                "TUE",
                                                                                "WED",
                                                                                "THU",
                                                                                "FRI",
                                                                                "SAT",
                                                                                "EVERY_DAY"
                                                                            ],
                                                                            "description": "For DAILY_OR_WEEKLY or HOURLY_OR_LESS frequency: list of days of the week on which to take snapshots. Choose from SUN, MON, TUE, WED, THU, FRI, and/or SAT. EVERY_DAY can be used to specify all days. For MONTHLY frequency: LAST_DAY_OF_MONTH indicates that the snapshot should be taken only on the last day of the month.:\n * `EVERY_DAY` - EVERY_DAY,\n * `FRI` - FRI,\n * `MON` - MON,\n * `SAT` - SAT,\n * `SUN` - SUN,\n * `THU` - THU,\n * `TUE` - TUE,\n * `WED` - WED"
                                                                        }
                                                                    },
                                                                    "day_of_month": {
                                                                        "type": "number"
                                                                    },
                                                                    "window_start_hour": {
                                                                        "type": "number"
                                                                    },
                                                                    "window_start_minute": {
                                                                        "type": "number"
                                                                    },
                                                                    "window_end_hour": {
                                                                        "type": "number"
                                                                    },
                                                                    "window_end_minute": {
                                                                        "type": "number"
                                                                    },
                                                                    "fire_every_interval": {
                                                                        "type": "string",
                                                                        "enum": [
                                                                            "FIRE_IN_MINUTES",
                                                                            "FIRE_IN_HOURS"
                                                                        ],
                                                                        "description": "For HOURLY_OR_LESS frequency: units for interval (MINUTES or HOURS) at which to take snapshot during specified window:\n * `FIRE_IN_HOURS` - FIRE_IN_HOURS,\n * `FIRE_IN_MINUTES` - FIRE_IN_MINUTES"
                                                                    },
                                                                    "fire_every": {
                                                                        "type": "number"
                                                                    }
                                                                }
                                                            },
                                                            "expiration_time_to_live": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "enabled": {
                                                        "type": "boolean"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "snapshots"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            },
            "post": {
                "summary": "Creates a new snapshot policy and returns its information.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "number"
                                        },
                                        "policy_name": {
                                            "type": "string"
                                        },
                                        "snapshot_name_template": {
                                            "type": "string"
                                        },
                                        "source_file_id": {
                                            "type": "string"
                                        },
                                        "schedule": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "number"
                                                },
                                                "creation_schedule": {
                                                    "type": "object",
                                                    "properties": {
                                                        "timezone": {
                                                            "type": "string"
                                                        },
                                                        "frequency": {
                                                            "type": "string",
                                                            "enum": [
                                                                "SCHEDULE_MONTHLY",
                                                                "SCHEDULE_DAILY_OR_WEEKLY",
                                                                "SCHEDULE_HOURLY_OR_LESS"
                                                            ],
                                                            "description": "Coarse frequency (MONTHLY, DAILY_OR_WEEKLY, or HOURLY_OR_LESS) at which to take snapshot:\n * `SCHEDULE_DAILY_OR_WEEKLY` - SCHEDULE_DAILY_OR_WEEKLY,\n * `SCHEDULE_HOURLY_OR_LESS` - SCHEDULE_HOURLY_OR_LESS,\n * `SCHEDULE_MONTHLY` - SCHEDULE_MONTHLY"
                                                        },
                                                        "hour": {
                                                            "type": "number"
                                                        },
                                                        "minute": {
                                                            "type": "number"
                                                        },
                                                        "on_days": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "SUN",
                                                                    "MON",
                                                                    "TUE",
                                                                    "WED",
                                                                    "THU",
                                                                    "FRI",
                                                                    "SAT",
                                                                    "EVERY_DAY"
                                                                ],
                                                                "description": "For DAILY_OR_WEEKLY or HOURLY_OR_LESS frequency: list of days of the week on which to take snapshots. Choose from SUN, MON, TUE, WED, THU, FRI, and/or SAT. EVERY_DAY can be used to specify all days. For MONTHLY frequency: LAST_DAY_OF_MONTH indicates that the snapshot should be taken only on the last day of the month.:\n * `EVERY_DAY` - EVERY_DAY,\n * `FRI` - FRI,\n * `MON` - MON,\n * `SAT` - SAT,\n * `SUN` - SUN,\n * `THU` - THU,\n * `TUE` - TUE,\n * `WED` - WED"
                                                            }
                                                        },
                                                        "day_of_month": {
                                                            "type": "number"
                                                        },
                                                        "window_start_hour": {
                                                            "type": "number"
                                                        },
                                                        "window_start_minute": {
                                                            "type": "number"
                                                        },
                                                        "window_end_hour": {
                                                            "type": "number"
                                                        },
                                                        "window_end_minute": {
                                                            "type": "number"
                                                        },
                                                        "fire_every_interval": {
                                                            "type": "string",
                                                            "enum": [
                                                                "FIRE_IN_MINUTES",
                                                                "FIRE_IN_HOURS"
                                                            ],
                                                            "description": "For HOURLY_OR_LESS frequency: units for interval (MINUTES or HOURS) at which to take snapshot during specified window:\n * `FIRE_IN_HOURS` - FIRE_IN_HOURS,\n * `FIRE_IN_MINUTES` - FIRE_IN_MINUTES"
                                                        },
                                                        "fire_every": {
                                                            "type": "number"
                                                        }
                                                    }
                                                },
                                                "expiration_time_to_live": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "enabled": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "snapshots"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "policy_name": {
                                        "type": "string"
                                    },
                                    "snapshot_name_template": {
                                        "type": "string"
                                    },
                                    "source_file_id": {
                                        "type": "string"
                                    },
                                    "schedule": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "number"
                                            },
                                            "creation_schedule": {
                                                "type": "object",
                                                "properties": {
                                                    "timezone": {
                                                        "type": "string"
                                                    },
                                                    "frequency": {
                                                        "type": "string",
                                                        "enum": [
                                                            "SCHEDULE_MONTHLY",
                                                            "SCHEDULE_DAILY_OR_WEEKLY",
                                                            "SCHEDULE_HOURLY_OR_LESS"
                                                        ],
                                                        "description": "Coarse frequency (MONTHLY, DAILY_OR_WEEKLY, or HOURLY_OR_LESS) at which to take snapshot:\n * `SCHEDULE_DAILY_OR_WEEKLY` - SCHEDULE_DAILY_OR_WEEKLY,\n * `SCHEDULE_HOURLY_OR_LESS` - SCHEDULE_HOURLY_OR_LESS,\n * `SCHEDULE_MONTHLY` - SCHEDULE_MONTHLY"
                                                    },
                                                    "hour": {
                                                        "type": "number"
                                                    },
                                                    "minute": {
                                                        "type": "number"
                                                    },
                                                    "on_days": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "enum": [
                                                                "SUN",
                                                                "MON",
                                                                "TUE",
                                                                "WED",
                                                                "THU",
                                                                "FRI",
                                                                "SAT",
                                                                "EVERY_DAY"
                                                            ],
                                                            "description": "For DAILY_OR_WEEKLY or HOURLY_OR_LESS frequency: list of days of the week on which to take snapshots. Choose from SUN, MON, TUE, WED, THU, FRI, and/or SAT. EVERY_DAY can be used to specify all days. For MONTHLY frequency: LAST_DAY_OF_MONTH indicates that the snapshot should be taken only on the last day of the month.:\n * `EVERY_DAY` - EVERY_DAY,\n * `FRI` - FRI,\n * `MON` - MON,\n * `SAT` - SAT,\n * `SUN` - SUN,\n * `THU` - THU,\n * `TUE` - TUE,\n * `WED` - WED"
                                                        }
                                                    },
                                                    "day_of_month": {
                                                        "type": "number"
                                                    },
                                                    "window_start_hour": {
                                                        "type": "number"
                                                    },
                                                    "window_start_minute": {
                                                        "type": "number"
                                                    },
                                                    "window_end_hour": {
                                                        "type": "number"
                                                    },
                                                    "window_end_minute": {
                                                        "type": "number"
                                                    },
                                                    "fire_every_interval": {
                                                        "type": "string",
                                                        "enum": [
                                                            "FIRE_IN_MINUTES",
                                                            "FIRE_IN_HOURS"
                                                        ],
                                                        "description": "For HOURLY_OR_LESS frequency: units for interval (MINUTES or HOURS) at which to take snapshot during specified window:\n * `FIRE_IN_HOURS` - FIRE_IN_HOURS,\n * `FIRE_IN_MINUTES` - FIRE_IN_MINUTES"
                                                    },
                                                    "fire_every": {
                                                        "type": "number"
                                                    }
                                                }
                                            },
                                            "expiration_time_to_live": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "enabled": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/snapshots/policies/status/": {
            "get": {
                "summary": "Returns status information about all snapshot policies. A policy status includes non-configurable policy information.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "entries": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "number"
                                                    },
                                                    "policy_name": {
                                                        "type": "string"
                                                    },
                                                    "snapshot_name_template": {
                                                        "type": "string"
                                                    },
                                                    "source_file_id": {
                                                        "type": "string"
                                                    },
                                                    "source_file_path": {
                                                        "type": "string"
                                                    },
                                                    "schedule": {
                                                        "type": "object",
                                                        "properties": {
                                                            "id": {
                                                                "type": "number"
                                                            },
                                                            "creation_schedule": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "timezone": {
                                                                        "type": "string"
                                                                    },
                                                                    "frequency": {
                                                                        "type": "string",
                                                                        "enum": [
                                                                            "SCHEDULE_MONTHLY",
                                                                            "SCHEDULE_DAILY_OR_WEEKLY",
                                                                            "SCHEDULE_HOURLY_OR_LESS"
                                                                        ],
                                                                        "description": "Coarse frequency (MONTHLY, DAILY_OR_WEEKLY, or HOURLY_OR_LESS) at which to take snapshot:\n * `SCHEDULE_DAILY_OR_WEEKLY` - SCHEDULE_DAILY_OR_WEEKLY,\n * `SCHEDULE_HOURLY_OR_LESS` - SCHEDULE_HOURLY_OR_LESS,\n * `SCHEDULE_MONTHLY` - SCHEDULE_MONTHLY"
                                                                    },
                                                                    "hour": {
                                                                        "type": "number"
                                                                    },
                                                                    "minute": {
                                                                        "type": "number"
                                                                    },
                                                                    "on_days": {
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "string",
                                                                            "enum": [
                                                                                "SUN",
                                                                                "MON",
                                                                                "TUE",
                                                                                "WED",
                                                                                "THU",
                                                                                "FRI",
                                                                                "SAT",
                                                                                "EVERY_DAY"
                                                                            ],
                                                                            "description": "For DAILY_OR_WEEKLY or HOURLY_OR_LESS frequency: list of days of the week on which to take snapshots. Choose from SUN, MON, TUE, WED, THU, FRI, and/or SAT. EVERY_DAY can be used to specify all days. For MONTHLY frequency: LAST_DAY_OF_MONTH indicates that the snapshot should be taken only on the last day of the month.:\n * `EVERY_DAY` - EVERY_DAY,\n * `FRI` - FRI,\n * `MON` - MON,\n * `SAT` - SAT,\n * `SUN` - SUN,\n * `THU` - THU,\n * `TUE` - TUE,\n * `WED` - WED"
                                                                        }
                                                                    },
                                                                    "day_of_month": {
                                                                        "type": "number"
                                                                    },
                                                                    "window_start_hour": {
                                                                        "type": "number"
                                                                    },
                                                                    "window_start_minute": {
                                                                        "type": "number"
                                                                    },
                                                                    "window_end_hour": {
                                                                        "type": "number"
                                                                    },
                                                                    "window_end_minute": {
                                                                        "type": "number"
                                                                    },
                                                                    "fire_every_interval": {
                                                                        "type": "string",
                                                                        "enum": [
                                                                            "FIRE_IN_MINUTES",
                                                                            "FIRE_IN_HOURS"
                                                                        ],
                                                                        "description": "For HOURLY_OR_LESS frequency: units for interval (MINUTES or HOURS) at which to take snapshot during specified window:\n * `FIRE_IN_HOURS` - FIRE_IN_HOURS,\n * `FIRE_IN_MINUTES` - FIRE_IN_MINUTES"
                                                                    },
                                                                    "fire_every": {
                                                                        "type": "number"
                                                                    }
                                                                }
                                                            },
                                                            "expiration_time_to_live": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "enabled": {
                                                        "type": "boolean"
                                                    },
                                                    "owners": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "id": {
                                                                    "type": "string"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "snapshots"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v2/snapshots/policies/status/{id}": {
            "get": {
                "summary": "Returns status information about a specific snapshot policy.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Policy identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "number"
                                        },
                                        "policy_name": {
                                            "type": "string"
                                        },
                                        "snapshot_name_template": {
                                            "type": "string"
                                        },
                                        "source_file_id": {
                                            "type": "string"
                                        },
                                        "source_file_path": {
                                            "type": "string"
                                        },
                                        "schedule": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "number"
                                                },
                                                "creation_schedule": {
                                                    "type": "object",
                                                    "properties": {
                                                        "timezone": {
                                                            "type": "string"
                                                        },
                                                        "frequency": {
                                                            "type": "string",
                                                            "enum": [
                                                                "SCHEDULE_MONTHLY",
                                                                "SCHEDULE_DAILY_OR_WEEKLY",
                                                                "SCHEDULE_HOURLY_OR_LESS"
                                                            ],
                                                            "description": "Coarse frequency (MONTHLY, DAILY_OR_WEEKLY, or HOURLY_OR_LESS) at which to take snapshot:\n * `SCHEDULE_DAILY_OR_WEEKLY` - SCHEDULE_DAILY_OR_WEEKLY,\n * `SCHEDULE_HOURLY_OR_LESS` - SCHEDULE_HOURLY_OR_LESS,\n * `SCHEDULE_MONTHLY` - SCHEDULE_MONTHLY"
                                                        },
                                                        "hour": {
                                                            "type": "number"
                                                        },
                                                        "minute": {
                                                            "type": "number"
                                                        },
                                                        "on_days": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "SUN",
                                                                    "MON",
                                                                    "TUE",
                                                                    "WED",
                                                                    "THU",
                                                                    "FRI",
                                                                    "SAT",
                                                                    "EVERY_DAY"
                                                                ],
                                                                "description": "For DAILY_OR_WEEKLY or HOURLY_OR_LESS frequency: list of days of the week on which to take snapshots. Choose from SUN, MON, TUE, WED, THU, FRI, and/or SAT. EVERY_DAY can be used to specify all days. For MONTHLY frequency: LAST_DAY_OF_MONTH indicates that the snapshot should be taken only on the last day of the month.:\n * `EVERY_DAY` - EVERY_DAY,\n * `FRI` - FRI,\n * `MON` - MON,\n * `SAT` - SAT,\n * `SUN` - SUN,\n * `THU` - THU,\n * `TUE` - TUE,\n * `WED` - WED"
                                                            }
                                                        },
                                                        "day_of_month": {
                                                            "type": "number"
                                                        },
                                                        "window_start_hour": {
                                                            "type": "number"
                                                        },
                                                        "window_start_minute": {
                                                            "type": "number"
                                                        },
                                                        "window_end_hour": {
                                                            "type": "number"
                                                        },
                                                        "window_end_minute": {
                                                            "type": "number"
                                                        },
                                                        "fire_every_interval": {
                                                            "type": "string",
                                                            "enum": [
                                                                "FIRE_IN_MINUTES",
                                                                "FIRE_IN_HOURS"
                                                            ],
                                                            "description": "For HOURLY_OR_LESS frequency: units for interval (MINUTES or HOURS) at which to take snapshot during specified window:\n * `FIRE_IN_HOURS` - FIRE_IN_HOURS,\n * `FIRE_IN_MINUTES` - FIRE_IN_MINUTES"
                                                        },
                                                        "fire_every": {
                                                            "type": "number"
                                                        }
                                                    }
                                                },
                                                "expiration_time_to_live": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "enabled": {
                                            "type": "boolean"
                                        },
                                        "owners": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "snapshots"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v2/snapshots/policies/{id}": {
            "get": {
                "summary": "Returns information about a specific snapshot policy.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Snapshot Policy Identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "number"
                                        },
                                        "policy_name": {
                                            "type": "string"
                                        },
                                        "snapshot_name_template": {
                                            "type": "string"
                                        },
                                        "source_file_id": {
                                            "type": "string"
                                        },
                                        "schedule": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "number"
                                                },
                                                "creation_schedule": {
                                                    "type": "object",
                                                    "properties": {
                                                        "timezone": {
                                                            "type": "string"
                                                        },
                                                        "frequency": {
                                                            "type": "string",
                                                            "enum": [
                                                                "SCHEDULE_MONTHLY",
                                                                "SCHEDULE_DAILY_OR_WEEKLY",
                                                                "SCHEDULE_HOURLY_OR_LESS"
                                                            ],
                                                            "description": "Coarse frequency (MONTHLY, DAILY_OR_WEEKLY, or HOURLY_OR_LESS) at which to take snapshot:\n * `SCHEDULE_DAILY_OR_WEEKLY` - SCHEDULE_DAILY_OR_WEEKLY,\n * `SCHEDULE_HOURLY_OR_LESS` - SCHEDULE_HOURLY_OR_LESS,\n * `SCHEDULE_MONTHLY` - SCHEDULE_MONTHLY"
                                                        },
                                                        "hour": {
                                                            "type": "number"
                                                        },
                                                        "minute": {
                                                            "type": "number"
                                                        },
                                                        "on_days": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "SUN",
                                                                    "MON",
                                                                    "TUE",
                                                                    "WED",
                                                                    "THU",
                                                                    "FRI",
                                                                    "SAT",
                                                                    "EVERY_DAY"
                                                                ],
                                                                "description": "For DAILY_OR_WEEKLY or HOURLY_OR_LESS frequency: list of days of the week on which to take snapshots. Choose from SUN, MON, TUE, WED, THU, FRI, and/or SAT. EVERY_DAY can be used to specify all days. For MONTHLY frequency: LAST_DAY_OF_MONTH indicates that the snapshot should be taken only on the last day of the month.:\n * `EVERY_DAY` - EVERY_DAY,\n * `FRI` - FRI,\n * `MON` - MON,\n * `SAT` - SAT,\n * `SUN` - SUN,\n * `THU` - THU,\n * `TUE` - TUE,\n * `WED` - WED"
                                                            }
                                                        },
                                                        "day_of_month": {
                                                            "type": "number"
                                                        },
                                                        "window_start_hour": {
                                                            "type": "number"
                                                        },
                                                        "window_start_minute": {
                                                            "type": "number"
                                                        },
                                                        "window_end_hour": {
                                                            "type": "number"
                                                        },
                                                        "window_end_minute": {
                                                            "type": "number"
                                                        },
                                                        "fire_every_interval": {
                                                            "type": "string",
                                                            "enum": [
                                                                "FIRE_IN_MINUTES",
                                                                "FIRE_IN_HOURS"
                                                            ],
                                                            "description": "For HOURLY_OR_LESS frequency: units for interval (MINUTES or HOURS) at which to take snapshot during specified window:\n * `FIRE_IN_HOURS` - FIRE_IN_HOURS,\n * `FIRE_IN_MINUTES` - FIRE_IN_MINUTES"
                                                        },
                                                        "fire_every": {
                                                            "type": "number"
                                                        }
                                                    }
                                                },
                                                "expiration_time_to_live": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "enabled": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "snapshots"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            },
            "put": {
                "summary": "Modifies a snapshot policy.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Snapshot Policy Identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "number"
                                        },
                                        "policy_name": {
                                            "type": "string"
                                        },
                                        "snapshot_name_template": {
                                            "type": "string"
                                        },
                                        "source_file_id": {
                                            "type": "string"
                                        },
                                        "schedule": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "number"
                                                },
                                                "creation_schedule": {
                                                    "type": "object",
                                                    "properties": {
                                                        "timezone": {
                                                            "type": "string"
                                                        },
                                                        "frequency": {
                                                            "type": "string",
                                                            "enum": [
                                                                "SCHEDULE_MONTHLY",
                                                                "SCHEDULE_DAILY_OR_WEEKLY",
                                                                "SCHEDULE_HOURLY_OR_LESS"
                                                            ],
                                                            "description": "Coarse frequency (MONTHLY, DAILY_OR_WEEKLY, or HOURLY_OR_LESS) at which to take snapshot:\n * `SCHEDULE_DAILY_OR_WEEKLY` - SCHEDULE_DAILY_OR_WEEKLY,\n * `SCHEDULE_HOURLY_OR_LESS` - SCHEDULE_HOURLY_OR_LESS,\n * `SCHEDULE_MONTHLY` - SCHEDULE_MONTHLY"
                                                        },
                                                        "hour": {
                                                            "type": "number"
                                                        },
                                                        "minute": {
                                                            "type": "number"
                                                        },
                                                        "on_days": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "SUN",
                                                                    "MON",
                                                                    "TUE",
                                                                    "WED",
                                                                    "THU",
                                                                    "FRI",
                                                                    "SAT",
                                                                    "EVERY_DAY"
                                                                ],
                                                                "description": "For DAILY_OR_WEEKLY or HOURLY_OR_LESS frequency: list of days of the week on which to take snapshots. Choose from SUN, MON, TUE, WED, THU, FRI, and/or SAT. EVERY_DAY can be used to specify all days. For MONTHLY frequency: LAST_DAY_OF_MONTH indicates that the snapshot should be taken only on the last day of the month.:\n * `EVERY_DAY` - EVERY_DAY,\n * `FRI` - FRI,\n * `MON` - MON,\n * `SAT` - SAT,\n * `SUN` - SUN,\n * `THU` - THU,\n * `TUE` - TUE,\n * `WED` - WED"
                                                            }
                                                        },
                                                        "day_of_month": {
                                                            "type": "number"
                                                        },
                                                        "window_start_hour": {
                                                            "type": "number"
                                                        },
                                                        "window_start_minute": {
                                                            "type": "number"
                                                        },
                                                        "window_end_hour": {
                                                            "type": "number"
                                                        },
                                                        "window_end_minute": {
                                                            "type": "number"
                                                        },
                                                        "fire_every_interval": {
                                                            "type": "string",
                                                            "enum": [
                                                                "FIRE_IN_MINUTES",
                                                                "FIRE_IN_HOURS"
                                                            ],
                                                            "description": "For HOURLY_OR_LESS frequency: units for interval (MINUTES or HOURS) at which to take snapshot during specified window:\n * `FIRE_IN_HOURS` - FIRE_IN_HOURS,\n * `FIRE_IN_MINUTES` - FIRE_IN_MINUTES"
                                                        },
                                                        "fire_every": {
                                                            "type": "number"
                                                        }
                                                    }
                                                },
                                                "expiration_time_to_live": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "enabled": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "snapshots"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "number"
                                    },
                                    "policy_name": {
                                        "type": "string"
                                    },
                                    "snapshot_name_template": {
                                        "type": "string"
                                    },
                                    "source_file_id": {
                                        "type": "string"
                                    },
                                    "schedule": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "number"
                                            },
                                            "creation_schedule": {
                                                "type": "object",
                                                "properties": {
                                                    "timezone": {
                                                        "type": "string"
                                                    },
                                                    "frequency": {
                                                        "type": "string",
                                                        "enum": [
                                                            "SCHEDULE_MONTHLY",
                                                            "SCHEDULE_DAILY_OR_WEEKLY",
                                                            "SCHEDULE_HOURLY_OR_LESS"
                                                        ],
                                                        "description": "Coarse frequency (MONTHLY, DAILY_OR_WEEKLY, or HOURLY_OR_LESS) at which to take snapshot:\n * `SCHEDULE_DAILY_OR_WEEKLY` - SCHEDULE_DAILY_OR_WEEKLY,\n * `SCHEDULE_HOURLY_OR_LESS` - SCHEDULE_HOURLY_OR_LESS,\n * `SCHEDULE_MONTHLY` - SCHEDULE_MONTHLY"
                                                    },
                                                    "hour": {
                                                        "type": "number"
                                                    },
                                                    "minute": {
                                                        "type": "number"
                                                    },
                                                    "on_days": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "enum": [
                                                                "SUN",
                                                                "MON",
                                                                "TUE",
                                                                "WED",
                                                                "THU",
                                                                "FRI",
                                                                "SAT",
                                                                "EVERY_DAY"
                                                            ],
                                                            "description": "For DAILY_OR_WEEKLY or HOURLY_OR_LESS frequency: list of days of the week on which to take snapshots. Choose from SUN, MON, TUE, WED, THU, FRI, and/or SAT. EVERY_DAY can be used to specify all days. For MONTHLY frequency: LAST_DAY_OF_MONTH indicates that the snapshot should be taken only on the last day of the month.:\n * `EVERY_DAY` - EVERY_DAY,\n * `FRI` - FRI,\n * `MON` - MON,\n * `SAT` - SAT,\n * `SUN` - SUN,\n * `THU` - THU,\n * `TUE` - TUE,\n * `WED` - WED"
                                                        }
                                                    },
                                                    "day_of_month": {
                                                        "type": "number"
                                                    },
                                                    "window_start_hour": {
                                                        "type": "number"
                                                    },
                                                    "window_start_minute": {
                                                        "type": "number"
                                                    },
                                                    "window_end_hour": {
                                                        "type": "number"
                                                    },
                                                    "window_end_minute": {
                                                        "type": "number"
                                                    },
                                                    "fire_every_interval": {
                                                        "type": "string",
                                                        "enum": [
                                                            "FIRE_IN_MINUTES",
                                                            "FIRE_IN_HOURS"
                                                        ],
                                                        "description": "For HOURLY_OR_LESS frequency: units for interval (MINUTES or HOURS) at which to take snapshot during specified window:\n * `FIRE_IN_HOURS` - FIRE_IN_HOURS,\n * `FIRE_IN_MINUTES` - FIRE_IN_MINUTES"
                                                    },
                                                    "fire_every": {
                                                        "type": "number"
                                                    }
                                                }
                                            },
                                            "expiration_time_to_live": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "enabled": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Modifies a snapshot policy.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Snapshot Policy Identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "number"
                                        },
                                        "policy_name": {
                                            "type": "string"
                                        },
                                        "snapshot_name_template": {
                                            "type": "string"
                                        },
                                        "source_file_id": {
                                            "type": "string"
                                        },
                                        "schedule": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "number"
                                                },
                                                "creation_schedule": {
                                                    "type": "object",
                                                    "properties": {
                                                        "timezone": {
                                                            "type": "string"
                                                        },
                                                        "frequency": {
                                                            "type": "string",
                                                            "enum": [
                                                                "SCHEDULE_MONTHLY",
                                                                "SCHEDULE_DAILY_OR_WEEKLY",
                                                                "SCHEDULE_HOURLY_OR_LESS"
                                                            ],
                                                            "description": "Coarse frequency (MONTHLY, DAILY_OR_WEEKLY, or HOURLY_OR_LESS) at which to take snapshot:\n * `SCHEDULE_DAILY_OR_WEEKLY` - SCHEDULE_DAILY_OR_WEEKLY,\n * `SCHEDULE_HOURLY_OR_LESS` - SCHEDULE_HOURLY_OR_LESS,\n * `SCHEDULE_MONTHLY` - SCHEDULE_MONTHLY"
                                                        },
                                                        "hour": {
                                                            "type": "number"
                                                        },
                                                        "minute": {
                                                            "type": "number"
                                                        },
                                                        "on_days": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "SUN",
                                                                    "MON",
                                                                    "TUE",
                                                                    "WED",
                                                                    "THU",
                                                                    "FRI",
                                                                    "SAT",
                                                                    "EVERY_DAY"
                                                                ],
                                                                "description": "For DAILY_OR_WEEKLY or HOURLY_OR_LESS frequency: list of days of the week on which to take snapshots. Choose from SUN, MON, TUE, WED, THU, FRI, and/or SAT. EVERY_DAY can be used to specify all days. For MONTHLY frequency: LAST_DAY_OF_MONTH indicates that the snapshot should be taken only on the last day of the month.:\n * `EVERY_DAY` - EVERY_DAY,\n * `FRI` - FRI,\n * `MON` - MON,\n * `SAT` - SAT,\n * `SUN` - SUN,\n * `THU` - THU,\n * `TUE` - TUE,\n * `WED` - WED"
                                                            }
                                                        },
                                                        "day_of_month": {
                                                            "type": "number"
                                                        },
                                                        "window_start_hour": {
                                                            "type": "number"
                                                        },
                                                        "window_start_minute": {
                                                            "type": "number"
                                                        },
                                                        "window_end_hour": {
                                                            "type": "number"
                                                        },
                                                        "window_end_minute": {
                                                            "type": "number"
                                                        },
                                                        "fire_every_interval": {
                                                            "type": "string",
                                                            "enum": [
                                                                "FIRE_IN_MINUTES",
                                                                "FIRE_IN_HOURS"
                                                            ],
                                                            "description": "For HOURLY_OR_LESS frequency: units for interval (MINUTES or HOURS) at which to take snapshot during specified window:\n * `FIRE_IN_HOURS` - FIRE_IN_HOURS,\n * `FIRE_IN_MINUTES` - FIRE_IN_MINUTES"
                                                        },
                                                        "fire_every": {
                                                            "type": "number"
                                                        }
                                                    }
                                                },
                                                "expiration_time_to_live": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "enabled": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "snapshots"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "number"
                                    },
                                    "policy_name": {
                                        "type": "string"
                                    },
                                    "snapshot_name_template": {
                                        "type": "string"
                                    },
                                    "source_file_id": {
                                        "type": "string"
                                    },
                                    "schedule": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "number"
                                            },
                                            "creation_schedule": {
                                                "type": "object",
                                                "properties": {
                                                    "timezone": {
                                                        "type": "string"
                                                    },
                                                    "frequency": {
                                                        "type": "string",
                                                        "enum": [
                                                            "SCHEDULE_MONTHLY",
                                                            "SCHEDULE_DAILY_OR_WEEKLY",
                                                            "SCHEDULE_HOURLY_OR_LESS"
                                                        ],
                                                        "description": "Coarse frequency (MONTHLY, DAILY_OR_WEEKLY, or HOURLY_OR_LESS) at which to take snapshot:\n * `SCHEDULE_DAILY_OR_WEEKLY` - SCHEDULE_DAILY_OR_WEEKLY,\n * `SCHEDULE_HOURLY_OR_LESS` - SCHEDULE_HOURLY_OR_LESS,\n * `SCHEDULE_MONTHLY` - SCHEDULE_MONTHLY"
                                                    },
                                                    "hour": {
                                                        "type": "number"
                                                    },
                                                    "minute": {
                                                        "type": "number"
                                                    },
                                                    "on_days": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "enum": [
                                                                "SUN",
                                                                "MON",
                                                                "TUE",
                                                                "WED",
                                                                "THU",
                                                                "FRI",
                                                                "SAT",
                                                                "EVERY_DAY"
                                                            ],
                                                            "description": "For DAILY_OR_WEEKLY or HOURLY_OR_LESS frequency: list of days of the week on which to take snapshots. Choose from SUN, MON, TUE, WED, THU, FRI, and/or SAT. EVERY_DAY can be used to specify all days. For MONTHLY frequency: LAST_DAY_OF_MONTH indicates that the snapshot should be taken only on the last day of the month.:\n * `EVERY_DAY` - EVERY_DAY,\n * `FRI` - FRI,\n * `MON` - MON,\n * `SAT` - SAT,\n * `SUN` - SUN,\n * `THU` - THU,\n * `TUE` - TUE,\n * `WED` - WED"
                                                        }
                                                    },
                                                    "day_of_month": {
                                                        "type": "number"
                                                    },
                                                    "window_start_hour": {
                                                        "type": "number"
                                                    },
                                                    "window_start_minute": {
                                                        "type": "number"
                                                    },
                                                    "window_end_hour": {
                                                        "type": "number"
                                                    },
                                                    "window_end_minute": {
                                                        "type": "number"
                                                    },
                                                    "fire_every_interval": {
                                                        "type": "string",
                                                        "enum": [
                                                            "FIRE_IN_MINUTES",
                                                            "FIRE_IN_HOURS"
                                                        ],
                                                        "description": "For HOURLY_OR_LESS frequency: units for interval (MINUTES or HOURS) at which to take snapshot during specified window:\n * `FIRE_IN_HOURS` - FIRE_IN_HOURS,\n * `FIRE_IN_MINUTES` - FIRE_IN_MINUTES"
                                                    },
                                                    "fire_every": {
                                                        "type": "number"
                                                    }
                                                }
                                            },
                                            "expiration_time_to_live": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "enabled": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Deletes a snapshot policy.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Snapshot Policy Identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success"
                    }
                },
                "tags": [
                    "snapshots"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v2/snapshots/status/{id}": {
            "get": {
                "summary": "Returns the status on a snapshot.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Snapshot identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "number"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "directory_name": {
                                            "type": "string"
                                        },
                                        "source_file_id": {
                                            "type": "string"
                                        },
                                        "source_file_path": {
                                            "type": "string"
                                        },
                                        "created_by_policy": {
                                            "type": "boolean"
                                        },
                                        "expiration": {
                                            "type": "string"
                                        },
                                        "owners": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "snapshots"
                ],
                "deprecated": true,
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v2/snapshots/{id}": {
            "get": {
                "summary": "Returns information about a specific snapshot.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Snapshot identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "number"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "directory_name": {
                                            "type": "string"
                                        },
                                        "source_file_id": {
                                            "type": "string"
                                        },
                                        "created_by_policy": {
                                            "type": "boolean"
                                        },
                                        "expiration": {
                                            "type": "string"
                                        },
                                        "in_delete": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "snapshots"
                ],
                "deprecated": true,
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            },
            "put": {
                "summary": "Modifies a snapshot.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Snapshot identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "number"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "directory_name": {
                                            "type": "string"
                                        },
                                        "source_file_id": {
                                            "type": "string"
                                        },
                                        "created_by_policy": {
                                            "type": "boolean"
                                        },
                                        "expiration": {
                                            "type": "string"
                                        },
                                        "in_delete": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "snapshots"
                ],
                "deprecated": true,
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "number"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "timestamp": {
                                        "type": "string"
                                    },
                                    "directory_name": {
                                        "type": "string"
                                    },
                                    "source_file_id": {
                                        "type": "string"
                                    },
                                    "created_by_policy": {
                                        "type": "boolean"
                                    },
                                    "expiration": {
                                        "type": "string"
                                    },
                                    "in_delete": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Modifies a snapshot.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Snapshot identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "expiration-time-to-live",
                        "in": "query",
                        "description": "Duration after which to expire the snapshot, in format <quantity><units>, where <quantity> is a positive integer less than 1000 and <units> is one of [months, weeks, days, hours, minutes], e.g. 5days or 1hours. Empty string or never indicates the snapshot should never expire. Defaults to never if not specified.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "number"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "directory_name": {
                                            "type": "string"
                                        },
                                        "source_file_id": {
                                            "type": "string"
                                        },
                                        "created_by_policy": {
                                            "type": "boolean"
                                        },
                                        "expiration": {
                                            "type": "string"
                                        },
                                        "in_delete": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "snapshots"
                ],
                "deprecated": true,
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "number"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "timestamp": {
                                        "type": "string"
                                    },
                                    "directory_name": {
                                        "type": "string"
                                    },
                                    "source_file_id": {
                                        "type": "string"
                                    },
                                    "created_by_policy": {
                                        "type": "boolean"
                                    },
                                    "expiration": {
                                        "type": "string"
                                    },
                                    "in_delete": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Deletes a snapshot.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Snapshot identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success"
                    }
                },
                "tags": [
                    "snapshots"
                ],
                "deprecated": true,
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v2/snapshots/{newer_id}/changes-since/{older_id}": {
            "get": {
                "summary": "Returns a list of changed files and directories between two snapshots.",
                "parameters": [
                    {
                        "name": "newer_id",
                        "in": "path",
                        "description": "Newer snapshot",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "older_id",
                        "in": "path",
                        "description": "Older snapshot",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "Return entries after the given key (keys are returned in the paging object)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Return no more than this many entries; the system may choose a smaller limit.",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "entries": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "op": {
                                                        "type": "string",
                                                        "enum": [
                                                            "CREATE",
                                                            "MODIFY",
                                                            "DELETE"
                                                        ],
                                                        "description": "op:\n * `CREATE` - CREATE,\n * `DELETE` - DELETE,\n * `MODIFY` - MODIFY"
                                                    },
                                                    "path": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "snapshots"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v2/snapshots/{newer_id}/changes-since/{older_id}/files/{ref}": {
            "get": {
                "summary": "Returns a list of changed byte ranges between two snapshots of a regular file. The list includes new, modified, and deallocated regions of the file's contents.",
                "parameters": [
                    {
                        "name": "newer_id",
                        "in": "path",
                        "description": "Newer snapshot",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "older_id",
                        "in": "path",
                        "description": "Older snapshot",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "The file ID (UInt64) or the absolute path to the file. This page handles the URL-encoding of the path.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "Return entries after the given key (keys are returned in the paging object)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Return no more than this many entries; the system may choose a smaller limit.",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "entries": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "enum": [
                                                            "FILE_REGION_DATA",
                                                            "FILE_REGION_HOLE"
                                                        ],
                                                        "description": "The type of content in the changed region of the file in the newer snapshot. The region may contain either data a hole.:\n * `FILE_REGION_DATA` - FILE_REGION_DATA,\n * `FILE_REGION_HOLE` - FILE_REGION_HOLE"
                                                    },
                                                    "offset": {
                                                        "type": "string"
                                                    },
                                                    "size": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "snapshots"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v3/snapshots/": {
            "get": {
                "summary": "Returns information about all snapshots.",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter the list of snapshots to exclude snapshots in process of being deleted, or include only snapshots in process of being deleted. By default, includes all snapshots.:\n * `all` - all,\n * `exclude_in_delete` - exclude_in_delete,\n * `only_in_delete` - only_in_delete",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "all",
                                "exclude_in_delete",
                                "only_in_delete"
                            ],
                            "description": "Filter the list of snapshots to exclude snapshots in process of being deleted, or include only snapshots in process of being deleted. By default, includes all snapshots.:\n * `all` - all,\n * `exclude_in_delete` - exclude_in_delete,\n * `only_in_delete` - only_in_delete"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "entries": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "number"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "timestamp": {
                                                        "type": "string"
                                                    },
                                                    "source_file_id": {
                                                        "type": "string"
                                                    },
                                                    "policy_id": {
                                                        "type": "number"
                                                    },
                                                    "expiration": {
                                                        "type": "string"
                                                    },
                                                    "in_delete": {
                                                        "type": "boolean"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "snapshots"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            },
            "post": {
                "summary": "Creates a new snapshot and returns snapshot information.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "number"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "source_file_id": {
                                            "type": "string"
                                        },
                                        "policy_id": {
                                            "type": "number"
                                        },
                                        "expiration": {
                                            "type": "string"
                                        },
                                        "in_delete": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "snapshots"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name_suffix": {
                                        "type": "string"
                                    },
                                    "expiration": {
                                        "type": "string"
                                    },
                                    "source_file_id": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/snapshots/status/": {
            "get": {
                "summary": "Returns the statuses for all snapshots. Each snapshot's status includes additional non-configurable information about a snapshot.",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter the list of snapshots to exclude snapshots in process of being deleted, or include only snapshots in process of being deleted. By default, includes all snapshots.:\n * `all` - all,\n * `exclude_in_delete` - exclude_in_delete,\n * `only_in_delete` - only_in_delete",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "all",
                                "exclude_in_delete",
                                "only_in_delete"
                            ],
                            "description": "Filter the list of snapshots to exclude snapshots in process of being deleted, or include only snapshots in process of being deleted. By default, includes all snapshots.:\n * `all` - all,\n * `exclude_in_delete` - exclude_in_delete,\n * `only_in_delete` - only_in_delete"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "entries": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "number"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "timestamp": {
                                                        "type": "string"
                                                    },
                                                    "source_file_id": {
                                                        "type": "string"
                                                    },
                                                    "source_file_path": {
                                                        "type": "string"
                                                    },
                                                    "policy_id": {
                                                        "type": "number"
                                                    },
                                                    "policy_name": {
                                                        "type": "string"
                                                    },
                                                    "expiration": {
                                                        "type": "string"
                                                    },
                                                    "owners": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "id": {
                                                                    "type": "string"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "in_delete": {
                                                        "type": "boolean"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "snapshots"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v3/snapshots/status/{id}": {
            "get": {
                "summary": "Returns the status for a specific snapshot.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Snapshot identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "number"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "source_file_id": {
                                            "type": "string"
                                        },
                                        "source_file_path": {
                                            "type": "string"
                                        },
                                        "policy_id": {
                                            "type": "number"
                                        },
                                        "policy_name": {
                                            "type": "string"
                                        },
                                        "expiration": {
                                            "type": "string"
                                        },
                                        "owners": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "in_delete": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "snapshots"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v3/snapshots/{id}": {
            "get": {
                "summary": "Returns information about a specific snapshot.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Snapshot identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "number"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "source_file_id": {
                                            "type": "string"
                                        },
                                        "policy_id": {
                                            "type": "number"
                                        },
                                        "expiration": {
                                            "type": "string"
                                        },
                                        "in_delete": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "snapshots"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            },
            "put": {
                "summary": "Modifies a snapshot.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Snapshot identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "number"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "source_file_id": {
                                            "type": "string"
                                        },
                                        "policy_id": {
                                            "type": "number"
                                        },
                                        "expiration": {
                                            "type": "string"
                                        },
                                        "in_delete": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "snapshots"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "number"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "timestamp": {
                                        "type": "string"
                                    },
                                    "source_file_id": {
                                        "type": "string"
                                    },
                                    "policy_id": {
                                        "type": "number"
                                    },
                                    "expiration": {
                                        "type": "string"
                                    },
                                    "in_delete": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Modifies a snapshot.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Snapshot identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "number"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "source_file_id": {
                                            "type": "string"
                                        },
                                        "policy_id": {
                                            "type": "number"
                                        },
                                        "expiration": {
                                            "type": "string"
                                        },
                                        "in_delete": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "snapshots"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "number"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "timestamp": {
                                        "type": "string"
                                    },
                                    "source_file_id": {
                                        "type": "string"
                                    },
                                    "policy_id": {
                                        "type": "number"
                                    },
                                    "expiration": {
                                        "type": "string"
                                    },
                                    "in_delete": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Deletes a snapshot.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Snapshot identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "number"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "source_file_id": {
                                            "type": "string"
                                        },
                                        "policy_id": {
                                            "type": "number"
                                        },
                                        "expiration": {
                                            "type": "string"
                                        },
                                        "in_delete": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "snapshots"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/time/settings": {
            "get": {
                "summary": "Retrieve the server's time-management configuration. Refer to the 'Set Time Configuration' method for a description of the returned fields.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "use_ad_for_primary": {
                                            "type": "boolean"
                                        },
                                        "ntp_servers": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "time"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            },
            "put": {
                "summary": "Set the server's time-management configuration.",
                "parameters": [
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "use_ad_for_primary": {
                                            "type": "boolean"
                                        },
                                        "ntp_servers": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "time"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "use_ad_for_primary": {
                                        "type": "boolean"
                                    },
                                    "ntp_servers": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Set just the provided components of the server's time-management configuration.",
                "parameters": [
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "use_ad_for_primary": {
                                            "type": "boolean"
                                        },
                                        "ntp_servers": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "time"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "use_ad_for_primary": {
                                        "type": "boolean"
                                    },
                                    "ntp_servers": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/time/status": {
            "get": {
                "summary": "Retrieve the time status of the underlying system",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "config": {
                                            "type": "object",
                                            "properties": {
                                                "use_ad_for_primary": {
                                                    "type": "boolean"
                                                },
                                                "ntp_servers": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "time": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "TIME_NOT_SYNCHRONIZING",
                                                "TIME_SYNCHRONIZING"
                                            ],
                                            "description": "status:\n * `TIME_NOT_SYNCHRONIZING` - TIME_NOT_SYNCHRONIZING,\n * `TIME_SYNCHRONIZING` - TIME_SYNCHRONIZING"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "time"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/time/timezones": {
            "get": {
                "summary": "Get a list of all timezones supported by Qumulo Core",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "time"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/tree-delete/jobs/": {
            "get": {
                "summary": "Get status of all directory-tree deletion jobs.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "jobs": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string"
                                                    },
                                                    "create_time": {
                                                        "type": "string"
                                                    },
                                                    "initial_path": {
                                                        "type": "string"
                                                    },
                                                    "initial_capacity": {
                                                        "type": "string"
                                                    },
                                                    "initial_directories": {
                                                        "type": "string"
                                                    },
                                                    "initial_files": {
                                                        "type": "string"
                                                    },
                                                    "remaining_capacity": {
                                                        "type": "string"
                                                    },
                                                    "remaining_directories": {
                                                        "type": "string"
                                                    },
                                                    "remaining_files": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "tree-delete"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            },
            "post": {
                "summary": "Start unlinking this directory and all its contents.",
                "parameters": [],
                "responses": {
                    "202": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "monitor_uri": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "tree-delete"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/tree-delete/jobs/{id}": {
            "get": {
                "summary": "Get status of directory-tree deletion on the specified directory. If the job has finished, returns 404. Also returns 404 if there was never a job on the given object",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Job ID (uint64)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "create_time": {
                                            "type": "string"
                                        },
                                        "initial_path": {
                                            "type": "string"
                                        },
                                        "initial_capacity": {
                                            "type": "string"
                                        },
                                        "initial_directories": {
                                            "type": "string"
                                        },
                                        "initial_files": {
                                            "type": "string"
                                        },
                                        "remaining_capacity": {
                                            "type": "string"
                                        },
                                        "remaining_directories": {
                                            "type": "string"
                                        },
                                        "remaining_files": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "tree-delete"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            },
            "delete": {
                "summary": "Cancel directory-tree deletion on the specified directory. If the job has finished, returns 404. Also returns 404 if there was never a job on the given object",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Job ID (uint64)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success"
                    }
                },
                "tags": [
                    "tree-delete"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/unconfigured/nodes/": {
            "get": {
                "summary": "List the unconfigured nodes discovered on the local network.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "nodes": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "uuid": {
                                                        "type": "string"
                                                    },
                                                    "label": {
                                                        "type": "string"
                                                    },
                                                    "serial_number": {
                                                        "type": "string"
                                                    },
                                                    "model_number": {
                                                        "type": "string"
                                                    },
                                                    "capacity_in_bytes": {
                                                        "type": "string"
                                                    },
                                                    "node_version": {
                                                        "type": "object",
                                                        "properties": {
                                                            "revision_id": {
                                                                "type": "string"
                                                            },
                                                            "build_id": {
                                                                "type": "string"
                                                            },
                                                            "flavor": {
                                                                "type": "string"
                                                            },
                                                            "build_date": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "current_node_uuid": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "unconfigured"
                ]
            }
        },
        "/v1/version": {
            "get": {
                "summary": "Retrieve the version of the appliance.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "revision_id": {
                                            "type": "string"
                                        },
                                        "build_id": {
                                            "type": "string"
                                        },
                                        "flavor": {
                                            "type": "string"
                                        },
                                        "build_date": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "version"
                ]
            }
        },
        "/v2/upgrade/blocked": {
            "get": {
                "summary": "Check if upgrade is currently blocked.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "is_blocked": {
                                            "type": "boolean"
                                        },
                                        "cluster_degraded": {
                                            "type": "boolean"
                                        },
                                        "blocked_reason": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "upgrade"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v2/upgrade/verify-image": {
            "post": {
                "summary": "Verify that the given image can be used to upgrade the cluster and retrieve details about the upgrade that will occur.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "target_version": {
                                            "type": "string"
                                        },
                                        "upgrade_type": {
                                            "type": "string",
                                            "enum": [
                                                "SOFTWARE_ONLY",
                                                "SOFTWARE_AND_PLATFORM"
                                            ],
                                            "description": "upgrade_type:\n * `SOFTWARE_AND_PLATFORM` - SOFTWARE_AND_PLATFORM,\n * `SOFTWARE_ONLY` - SOFTWARE_ONLY"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "upgrade"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "image_path": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/upgrade/prepare": {
            "post": {
                "summary": "Prepare for upgrade.",
                "parameters": [],
                "responses": {
                    "202": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "monitor_uri": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "upgrade"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "image_path": {
                                        "type": "string"
                                    },
                                    "auto_commit": {
                                        "type": "boolean"
                                    },
                                    "do_rolling_reboot": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/upgrade/commit": {
            "post": {
                "summary": "Commit a prepared upgrade.",
                "parameters": [],
                "responses": {
                    "202": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "monitor_uri": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "upgrade"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v2/upgrade/status": {
            "get": {
                "summary": "Retrieve the current status of the upgrade system. This API is deprecated in favor of /v3/upgrade/status.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "state": {
                                            "type": "string",
                                            "enum": [
                                                "UPGRADE_STATE_IDLE",
                                                "UPGRADE_STATE_PREPARING",
                                                "UPGRADE_STATE_PREPARED",
                                                "UPGRADE_STATE_COMMITTING",
                                                "UPGRADE_STATE_COMMITTED",
                                                "UPGRADE_STATE_REBOOTING"
                                            ],
                                            "description": "state:\n * `UPGRADE_STATE_COMMITTED` - UPGRADE_STATE_COMMITTED,\n * `UPGRADE_STATE_COMMITTING` - UPGRADE_STATE_COMMITTING,\n * `UPGRADE_STATE_IDLE` - UPGRADE_STATE_IDLE,\n * `UPGRADE_STATE_PREPARED` - UPGRADE_STATE_PREPARED,\n * `UPGRADE_STATE_PREPARING` - UPGRADE_STATE_PREPARING,\n * `UPGRADE_STATE_REBOOTING` - UPGRADE_STATE_REBOOTING"
                                        },
                                        "progress": {
                                            "type": "number"
                                        },
                                        "settings": {
                                            "type": "object",
                                            "properties": {
                                                "install_path": {
                                                    "type": "string"
                                                },
                                                "target_version": {
                                                    "type": "string"
                                                },
                                                "upgrade_type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "SOFTWARE_ONLY",
                                                        "SOFTWARE_AND_PLATFORM"
                                                    ],
                                                    "description": "upgrade_type:\n * `SOFTWARE_AND_PLATFORM` - SOFTWARE_AND_PLATFORM,\n * `SOFTWARE_ONLY` - SOFTWARE_ONLY"
                                                },
                                                "auto_commit": {
                                                    "type": "boolean"
                                                },
                                                "do_rolling_reboot": {
                                                    "type": "boolean"
                                                }
                                            }
                                        },
                                        "error_info": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "upgrade"
                ],
                "deprecated": true,
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v3/upgrade/status": {
            "get": {
                "summary": "Retrieve the current status of the upgrade system.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "state": {
                                            "type": "string",
                                            "enum": [
                                                "UPGRADE_STATE_IDLE",
                                                "UPGRADE_STATE_PREPARING",
                                                "UPGRADE_STATE_PREPARED",
                                                "UPGRADE_STATE_COMMITTING",
                                                "UPGRADE_STATE_COMMITTED",
                                                "UPGRADE_STATE_REBOOTING"
                                            ],
                                            "description": "state:\n * `UPGRADE_STATE_COMMITTED` - UPGRADE_STATE_COMMITTED,\n * `UPGRADE_STATE_COMMITTING` - UPGRADE_STATE_COMMITTING,\n * `UPGRADE_STATE_IDLE` - UPGRADE_STATE_IDLE,\n * `UPGRADE_STATE_PREPARED` - UPGRADE_STATE_PREPARED,\n * `UPGRADE_STATE_PREPARING` - UPGRADE_STATE_PREPARING,\n * `UPGRADE_STATE_REBOOTING` - UPGRADE_STATE_REBOOTING"
                                        },
                                        "progress": {
                                            "type": "number"
                                        },
                                        "settings": {
                                            "type": "object",
                                            "properties": {
                                                "install_path": {
                                                    "type": "string"
                                                },
                                                "target_version": {
                                                    "type": "string"
                                                },
                                                "upgrade_type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "SOFTWARE_ONLY",
                                                        "SOFTWARE_AND_PLATFORM"
                                                    ],
                                                    "description": "upgrade_type:\n * `SOFTWARE_AND_PLATFORM` - SOFTWARE_AND_PLATFORM,\n * `SOFTWARE_ONLY` - SOFTWARE_ONLY"
                                                },
                                                "auto_commit": {
                                                    "type": "boolean"
                                                },
                                                "do_rolling_reboot": {
                                                    "type": "boolean"
                                                }
                                            }
                                        },
                                        "error_info": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "upgrade"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/v1/web-ui/settings": {
            "get": {
                "summary": "Return settings (such as the inactivity                 timeout) that the Web UI uses. Because the Web UI can apply                 these settings before the user logs in, this method doesn't                 require authentication.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "inactivity_timeout": {
                                            "type": "object",
                                            "properties": {
                                                "nanoseconds": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "login_banner": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "web-ui"
                ]
            },
            "put": {
                "summary": "Replace all the settings that the Web UI uses.                 These settings take effect immediately for new UI sessions.",
                "parameters": [
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "inactivity_timeout": {
                                            "type": "object",
                                            "properties": {
                                                "nanoseconds": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "login_banner": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "web-ui"
                ],
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "inactivity_timeout": {
                                        "type": "object",
                                        "properties": {
                                            "nanoseconds": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "login_banner": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Replace individual Web UI settings.                 These settings take effect immediately for new Web UI sessions.",
                "parameters": [
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag for expected version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return value on success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "inactivity_timeout": {
                                            "type": "object",
                                            "properties": {
                                                "nanoseconds": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "login_banner": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "web-ui"
                ],
                "deprecated": true,
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "inactivity_timeout": {
                                        "type": "object",
                                        "properties": {
                                            "nanoseconds": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "login_banner": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}